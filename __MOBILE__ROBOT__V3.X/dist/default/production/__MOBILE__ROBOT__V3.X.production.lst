

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun May 09 16:35:56 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1947
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK5,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	nvBANK4,global,class=BANK4,space=1,delta=1,noexec
    10                           	psect	nvBANK5,global,class=BANK5,space=1,delta=1,noexec
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    18                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,noexec
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1,noexec
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    24                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    27                           	psect	text1,local,class=CODE,merge=1,delta=2
    28                           	psect	text2,local,class=CODE,merge=1,delta=2
    29                           	psect	text3,local,class=CODE,merge=1,delta=2
    30                           	psect	text4,local,class=CODE,merge=1,delta=2
    31                           	psect	text5,local,class=CODE,merge=1,delta=2
    32                           	psect	text6,local,class=CODE,merge=1,delta=2
    33                           	psect	text7,local,class=CODE,merge=1,delta=2
    34                           	psect	text8,local,class=CODE,merge=1,delta=2
    35                           	psect	text9,local,class=CODE,merge=1,delta=2
    36                           	psect	text10,local,class=CODE,merge=1,delta=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2
    38                           	psect	text12,local,class=CODE,merge=1,delta=2
    39                           	psect	text13,local,class=CODE,merge=1,delta=2
    40                           	psect	text14,local,class=CODE,merge=1,delta=2
    41                           	psect	text15,local,class=CODE,merge=1,delta=2
    42                           	psect	text16,local,class=CODE,merge=1,delta=2
    43                           	psect	text17,local,class=CODE,merge=1,delta=2
    44                           	psect	text18,local,class=CODE,merge=1,delta=2
    45                           	psect	text19,local,class=CODE,merge=1,delta=2
    46                           	psect	text20,local,class=CODE,merge=1,delta=2
    47                           	psect	text21,local,class=CODE,merge=1,delta=2
    48                           	psect	text22,local,class=CODE,merge=1,delta=2
    49                           	psect	text23,local,class=CODE,merge=1,delta=2
    50                           	psect	text24,local,class=CODE,merge=1,delta=2
    51                           	psect	text25,local,class=CODE,merge=1,delta=2
    52                           	psect	text26,local,class=CODE,merge=1,delta=2
    53                           	psect	text27,local,class=CODE,merge=1,delta=2
    54                           	psect	text28,local,class=CODE,merge=1,delta=2
    55                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text33,local,class=CODE,merge=1,delta=2
    60                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	intentry,global,class=CODE,delta=2
    72                           	psect	text46,local,class=CODE,merge=1,delta=2
    73                           	psect	text47,local,class=CODE,merge=1,delta=2
    74                           	psect	text48,local,class=CODE,merge=1,delta=2
    75                           	psect	text49,local,class=CODE,merge=1,delta=2
    76                           	psect	text50,local,class=CODE,merge=1,delta=2
    77                           	psect	text51,local,class=CODE,merge=1,delta=2
    78                           	psect	text52,local,class=CODE,merge=1,delta=2
    79                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    80                           	dabs	1,0x7E,2
    81  0000                     
    82                           ; Version 2.20
    83                           ; Generated 12/02/2020 GMT
    84                           ; 
    85                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC16F1947 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  0008                     	;# 
   125  0009                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000D                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  008F                     	;# 
   152  0090                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0095                     	;# 
   158  0096                     	;# 
   159  0097                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009A                     	;# 
   163  009B                     	;# 
   164  009B                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  0110                     	;# 
   173  0111                     	;# 
   174  0112                     	;# 
   175  0113                     	;# 
   176  0114                     	;# 
   177  0115                     	;# 
   178  0116                     	;# 
   179  0117                     	;# 
   180  0118                     	;# 
   181  0119                     	;# 
   182  011A                     	;# 
   183  011B                     	;# 
   184  011D                     	;# 
   185  011E                     	;# 
   186  011F                     	;# 
   187  018C                     	;# 
   188  0190                     	;# 
   189  0191                     	;# 
   190  0191                     	;# 
   191  0192                     	;# 
   192  0193                     	;# 
   193  0193                     	;# 
   194  0193                     	;# 
   195  0194                     	;# 
   196  0195                     	;# 
   197  0196                     	;# 
   198  0199                     	;# 
   199  0199                     	;# 
   200  019A                     	;# 
   201  019A                     	;# 
   202  019B                     	;# 
   203  019B                     	;# 
   204  019B                     	;# 
   205  019B                     	;# 
   206  019C                     	;# 
   207  019C                     	;# 
   208  019D                     	;# 
   209  019D                     	;# 
   210  019E                     	;# 
   211  019E                     	;# 
   212  019F                     	;# 
   213  019F                     	;# 
   214  020D                     	;# 
   215  0211                     	;# 
   216  0211                     	;# 
   217  0212                     	;# 
   218  0212                     	;# 
   219  0213                     	;# 
   220  0213                     	;# 
   221  0214                     	;# 
   222  0214                     	;# 
   223  0215                     	;# 
   224  0215                     	;# 
   225  0215                     	;# 
   226  0216                     	;# 
   227  0216                     	;# 
   228  0217                     	;# 
   229  0217                     	;# 
   230  0219                     	;# 
   231  021A                     	;# 
   232  021B                     	;# 
   233  021C                     	;# 
   234  021D                     	;# 
   235  021E                     	;# 
   236  021F                     	;# 
   237  028C                     	;# 
   238  028D                     	;# 
   239  0291                     	;# 
   240  0291                     	;# 
   241  0292                     	;# 
   242  0293                     	;# 
   243  0294                     	;# 
   244  0295                     	;# 
   245  0295                     	;# 
   246  0296                     	;# 
   247  0298                     	;# 
   248  0298                     	;# 
   249  0299                     	;# 
   250  029A                     	;# 
   251  029B                     	;# 
   252  029C                     	;# 
   253  029C                     	;# 
   254  029D                     	;# 
   255  029E                     	;# 
   256  029F                     	;# 
   257  030C                     	;# 
   258  030D                     	;# 
   259  0311                     	;# 
   260  0311                     	;# 
   261  0312                     	;# 
   262  0313                     	;# 
   263  0314                     	;# 
   264  0315                     	;# 
   265  0315                     	;# 
   266  0316                     	;# 
   267  0318                     	;# 
   268  0318                     	;# 
   269  0319                     	;# 
   270  031A                     	;# 
   271  031C                     	;# 
   272  031C                     	;# 
   273  031D                     	;# 
   274  031E                     	;# 
   275  038C                     	;# 
   276  038D                     	;# 
   277  0394                     	;# 
   278  0395                     	;# 
   279  0396                     	;# 
   280  040C                     	;# 
   281  040D                     	;# 
   282  0415                     	;# 
   283  0416                     	;# 
   284  0417                     	;# 
   285  041C                     	;# 
   286  041D                     	;# 
   287  041E                     	;# 
   288  048D                     	;# 
   289  0491                     	;# 
   290  0492                     	;# 
   291  0493                     	;# 
   292  0493                     	;# 
   293  0494                     	;# 
   294  0495                     	;# 
   295  0496                     	;# 
   296  0497                     	;# 
   297  0791                     	;# 
   298  0792                     	;# 
   299  0793                     	;# 
   300  0794                     	;# 
   301  0795                     	;# 
   302  0798                     	;# 
   303  0799                     	;# 
   304  079A                     	;# 
   305  079B                     	;# 
   306  079C                     	;# 
   307  079D                     	;# 
   308  07A0                     	;# 
   309  07A1                     	;# 
   310  07A2                     	;# 
   311  07A3                     	;# 
   312  07A4                     	;# 
   313  07A5                     	;# 
   314  07A6                     	;# 
   315  07A7                     	;# 
   316  07A8                     	;# 
   317  07A9                     	;# 
   318  07AA                     	;# 
   319  07AB                     	;# 
   320  07AC                     	;# 
   321  07AD                     	;# 
   322  07AE                     	;# 
   323  07AF                     	;# 
   324  07B0                     	;# 
   325  07B1                     	;# 
   326  07B2                     	;# 
   327  07B3                     	;# 
   328  07B4                     	;# 
   329  07B5                     	;# 
   330  07B6                     	;# 
   331  07B7                     	;# 
   332  0FE4                     	;# 
   333  0FE5                     	;# 
   334  0FE6                     	;# 
   335  0FE7                     	;# 
   336  0FE8                     	;# 
   337  0FE9                     	;# 
   338  0FEA                     	;# 
   339  0FEB                     	;# 
   340  0FED                     	;# 
   341  0FEE                     	;# 
   342  0FEF                     	;# 
   343  0000                     	;# 
   344  0001                     	;# 
   345  0002                     	;# 
   346  0003                     	;# 
   347  0004                     	;# 
   348  0005                     	;# 
   349  0006                     	;# 
   350  0007                     	;# 
   351  0008                     	;# 
   352  0009                     	;# 
   353  000A                     	;# 
   354  000B                     	;# 
   355  000C                     	;# 
   356  000D                     	;# 
   357  000E                     	;# 
   358  000F                     	;# 
   359  0010                     	;# 
   360  0011                     	;# 
   361  0012                     	;# 
   362  0013                     	;# 
   363  0014                     	;# 
   364  0015                     	;# 
   365  0016                     	;# 
   366  0016                     	;# 
   367  0017                     	;# 
   368  0018                     	;# 
   369  0019                     	;# 
   370  001A                     	;# 
   371  001B                     	;# 
   372  001C                     	;# 
   373  001E                     	;# 
   374  001F                     	;# 
   375  008C                     	;# 
   376  008D                     	;# 
   377  008E                     	;# 
   378  008F                     	;# 
   379  0090                     	;# 
   380  0091                     	;# 
   381  0092                     	;# 
   382  0093                     	;# 
   383  0094                     	;# 
   384  0095                     	;# 
   385  0096                     	;# 
   386  0097                     	;# 
   387  0098                     	;# 
   388  0099                     	;# 
   389  009A                     	;# 
   390  009B                     	;# 
   391  009B                     	;# 
   392  009C                     	;# 
   393  009D                     	;# 
   394  009E                     	;# 
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  010F                     	;# 
   399  0110                     	;# 
   400  0111                     	;# 
   401  0112                     	;# 
   402  0113                     	;# 
   403  0114                     	;# 
   404  0115                     	;# 
   405  0116                     	;# 
   406  0117                     	;# 
   407  0118                     	;# 
   408  0119                     	;# 
   409  011A                     	;# 
   410  011B                     	;# 
   411  011D                     	;# 
   412  011E                     	;# 
   413  011F                     	;# 
   414  018C                     	;# 
   415  0190                     	;# 
   416  0191                     	;# 
   417  0191                     	;# 
   418  0192                     	;# 
   419  0193                     	;# 
   420  0193                     	;# 
   421  0193                     	;# 
   422  0194                     	;# 
   423  0195                     	;# 
   424  0196                     	;# 
   425  0199                     	;# 
   426  0199                     	;# 
   427  019A                     	;# 
   428  019A                     	;# 
   429  019B                     	;# 
   430  019B                     	;# 
   431  019B                     	;# 
   432  019B                     	;# 
   433  019C                     	;# 
   434  019C                     	;# 
   435  019D                     	;# 
   436  019D                     	;# 
   437  019E                     	;# 
   438  019E                     	;# 
   439  019F                     	;# 
   440  019F                     	;# 
   441  020D                     	;# 
   442  0211                     	;# 
   443  0211                     	;# 
   444  0212                     	;# 
   445  0212                     	;# 
   446  0213                     	;# 
   447  0213                     	;# 
   448  0214                     	;# 
   449  0214                     	;# 
   450  0215                     	;# 
   451  0215                     	;# 
   452  0215                     	;# 
   453  0216                     	;# 
   454  0216                     	;# 
   455  0217                     	;# 
   456  0217                     	;# 
   457  0219                     	;# 
   458  021A                     	;# 
   459  021B                     	;# 
   460  021C                     	;# 
   461  021D                     	;# 
   462  021E                     	;# 
   463  021F                     	;# 
   464  028C                     	;# 
   465  028D                     	;# 
   466  0291                     	;# 
   467  0291                     	;# 
   468  0292                     	;# 
   469  0293                     	;# 
   470  0294                     	;# 
   471  0295                     	;# 
   472  0295                     	;# 
   473  0296                     	;# 
   474  0298                     	;# 
   475  0298                     	;# 
   476  0299                     	;# 
   477  029A                     	;# 
   478  029B                     	;# 
   479  029C                     	;# 
   480  029C                     	;# 
   481  029D                     	;# 
   482  029E                     	;# 
   483  029F                     	;# 
   484  030C                     	;# 
   485  030D                     	;# 
   486  0311                     	;# 
   487  0311                     	;# 
   488  0312                     	;# 
   489  0313                     	;# 
   490  0314                     	;# 
   491  0315                     	;# 
   492  0315                     	;# 
   493  0316                     	;# 
   494  0318                     	;# 
   495  0318                     	;# 
   496  0319                     	;# 
   497  031A                     	;# 
   498  031C                     	;# 
   499  031C                     	;# 
   500  031D                     	;# 
   501  031E                     	;# 
   502  038C                     	;# 
   503  038D                     	;# 
   504  0394                     	;# 
   505  0395                     	;# 
   506  0396                     	;# 
   507  040C                     	;# 
   508  040D                     	;# 
   509  0415                     	;# 
   510  0416                     	;# 
   511  0417                     	;# 
   512  041C                     	;# 
   513  041D                     	;# 
   514  041E                     	;# 
   515  048D                     	;# 
   516  0491                     	;# 
   517  0492                     	;# 
   518  0493                     	;# 
   519  0493                     	;# 
   520  0494                     	;# 
   521  0495                     	;# 
   522  0496                     	;# 
   523  0497                     	;# 
   524  0791                     	;# 
   525  0792                     	;# 
   526  0793                     	;# 
   527  0794                     	;# 
   528  0795                     	;# 
   529  0798                     	;# 
   530  0799                     	;# 
   531  079A                     	;# 
   532  079B                     	;# 
   533  079C                     	;# 
   534  079D                     	;# 
   535  07A0                     	;# 
   536  07A1                     	;# 
   537  07A2                     	;# 
   538  07A3                     	;# 
   539  07A4                     	;# 
   540  07A5                     	;# 
   541  07A6                     	;# 
   542  07A7                     	;# 
   543  07A8                     	;# 
   544  07A9                     	;# 
   545  07AA                     	;# 
   546  07AB                     	;# 
   547  07AC                     	;# 
   548  07AD                     	;# 
   549  07AE                     	;# 
   550  07AF                     	;# 
   551  07B0                     	;# 
   552  07B1                     	;# 
   553  07B2                     	;# 
   554  07B3                     	;# 
   555  07B4                     	;# 
   556  07B5                     	;# 
   557  07B6                     	;# 
   558  07B7                     	;# 
   559  0FE4                     	;# 
   560  0FE5                     	;# 
   561  0FE6                     	;# 
   562  0FE7                     	;# 
   563  0FE8                     	;# 
   564  0FE9                     	;# 
   565  0FEA                     	;# 
   566  0FEB                     	;# 
   567  0FED                     	;# 
   568  0FEE                     	;# 
   569  0FEF                     	;# 
   570  0000                     	;# 
   571  0001                     	;# 
   572  0002                     	;# 
   573  0003                     	;# 
   574  0004                     	;# 
   575  0005                     	;# 
   576  0006                     	;# 
   577  0007                     	;# 
   578  0008                     	;# 
   579  0009                     	;# 
   580  000A                     	;# 
   581  000B                     	;# 
   582  000C                     	;# 
   583  000D                     	;# 
   584  000E                     	;# 
   585  000F                     	;# 
   586  0010                     	;# 
   587  0011                     	;# 
   588  0012                     	;# 
   589  0013                     	;# 
   590  0014                     	;# 
   591  0015                     	;# 
   592  0016                     	;# 
   593  0016                     	;# 
   594  0017                     	;# 
   595  0018                     	;# 
   596  0019                     	;# 
   597  001A                     	;# 
   598  001B                     	;# 
   599  001C                     	;# 
   600  001E                     	;# 
   601  001F                     	;# 
   602  008C                     	;# 
   603  008D                     	;# 
   604  008E                     	;# 
   605  008F                     	;# 
   606  0090                     	;# 
   607  0091                     	;# 
   608  0092                     	;# 
   609  0093                     	;# 
   610  0094                     	;# 
   611  0095                     	;# 
   612  0096                     	;# 
   613  0097                     	;# 
   614  0098                     	;# 
   615  0099                     	;# 
   616  009A                     	;# 
   617  009B                     	;# 
   618  009B                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009E                     	;# 
   622  010C                     	;# 
   623  010D                     	;# 
   624  010E                     	;# 
   625  010F                     	;# 
   626  0110                     	;# 
   627  0111                     	;# 
   628  0112                     	;# 
   629  0113                     	;# 
   630  0114                     	;# 
   631  0115                     	;# 
   632  0116                     	;# 
   633  0117                     	;# 
   634  0118                     	;# 
   635  0119                     	;# 
   636  011A                     	;# 
   637  011B                     	;# 
   638  011D                     	;# 
   639  011E                     	;# 
   640  011F                     	;# 
   641  018C                     	;# 
   642  0190                     	;# 
   643  0191                     	;# 
   644  0191                     	;# 
   645  0192                     	;# 
   646  0193                     	;# 
   647  0193                     	;# 
   648  0193                     	;# 
   649  0194                     	;# 
   650  0195                     	;# 
   651  0196                     	;# 
   652  0199                     	;# 
   653  0199                     	;# 
   654  019A                     	;# 
   655  019A                     	;# 
   656  019B                     	;# 
   657  019B                     	;# 
   658  019B                     	;# 
   659  019B                     	;# 
   660  019C                     	;# 
   661  019C                     	;# 
   662  019D                     	;# 
   663  019D                     	;# 
   664  019E                     	;# 
   665  019E                     	;# 
   666  019F                     	;# 
   667  019F                     	;# 
   668  020D                     	;# 
   669  0211                     	;# 
   670  0211                     	;# 
   671  0212                     	;# 
   672  0212                     	;# 
   673  0213                     	;# 
   674  0213                     	;# 
   675  0214                     	;# 
   676  0214                     	;# 
   677  0215                     	;# 
   678  0215                     	;# 
   679  0215                     	;# 
   680  0216                     	;# 
   681  0216                     	;# 
   682  0217                     	;# 
   683  0217                     	;# 
   684  0219                     	;# 
   685  021A                     	;# 
   686  021B                     	;# 
   687  021C                     	;# 
   688  021D                     	;# 
   689  021E                     	;# 
   690  021F                     	;# 
   691  028C                     	;# 
   692  028D                     	;# 
   693  0291                     	;# 
   694  0291                     	;# 
   695  0292                     	;# 
   696  0293                     	;# 
   697  0294                     	;# 
   698  0295                     	;# 
   699  0295                     	;# 
   700  0296                     	;# 
   701  0298                     	;# 
   702  0298                     	;# 
   703  0299                     	;# 
   704  029A                     	;# 
   705  029B                     	;# 
   706  029C                     	;# 
   707  029C                     	;# 
   708  029D                     	;# 
   709  029E                     	;# 
   710  029F                     	;# 
   711  030C                     	;# 
   712  030D                     	;# 
   713  0311                     	;# 
   714  0311                     	;# 
   715  0312                     	;# 
   716  0313                     	;# 
   717  0314                     	;# 
   718  0315                     	;# 
   719  0315                     	;# 
   720  0316                     	;# 
   721  0318                     	;# 
   722  0318                     	;# 
   723  0319                     	;# 
   724  031A                     	;# 
   725  031C                     	;# 
   726  031C                     	;# 
   727  031D                     	;# 
   728  031E                     	;# 
   729  038C                     	;# 
   730  038D                     	;# 
   731  0394                     	;# 
   732  0395                     	;# 
   733  0396                     	;# 
   734  040C                     	;# 
   735  040D                     	;# 
   736  0415                     	;# 
   737  0416                     	;# 
   738  0417                     	;# 
   739  041C                     	;# 
   740  041D                     	;# 
   741  041E                     	;# 
   742  048D                     	;# 
   743  0491                     	;# 
   744  0492                     	;# 
   745  0493                     	;# 
   746  0493                     	;# 
   747  0494                     	;# 
   748  0495                     	;# 
   749  0496                     	;# 
   750  0497                     	;# 
   751  0791                     	;# 
   752  0792                     	;# 
   753  0793                     	;# 
   754  0794                     	;# 
   755  0795                     	;# 
   756  0798                     	;# 
   757  0799                     	;# 
   758  079A                     	;# 
   759  079B                     	;# 
   760  079C                     	;# 
   761  079D                     	;# 
   762  07A0                     	;# 
   763  07A1                     	;# 
   764  07A2                     	;# 
   765  07A3                     	;# 
   766  07A4                     	;# 
   767  07A5                     	;# 
   768  07A6                     	;# 
   769  07A7                     	;# 
   770  07A8                     	;# 
   771  07A9                     	;# 
   772  07AA                     	;# 
   773  07AB                     	;# 
   774  07AC                     	;# 
   775  07AD                     	;# 
   776  07AE                     	;# 
   777  07AF                     	;# 
   778  07B0                     	;# 
   779  07B1                     	;# 
   780  07B2                     	;# 
   781  07B3                     	;# 
   782  07B4                     	;# 
   783  07B5                     	;# 
   784  07B6                     	;# 
   785  07B7                     	;# 
   786  0FE4                     	;# 
   787  0FE5                     	;# 
   788  0FE6                     	;# 
   789  0FE7                     	;# 
   790  0FE8                     	;# 
   791  0FE9                     	;# 
   792  0FEA                     	;# 
   793  0FEB                     	;# 
   794  0FED                     	;# 
   795  0FEE                     	;# 
   796  0FEF                     	;# 
   797  0000                     	;# 
   798  0001                     	;# 
   799  0002                     	;# 
   800  0003                     	;# 
   801  0004                     	;# 
   802  0005                     	;# 
   803  0006                     	;# 
   804  0007                     	;# 
   805  0008                     	;# 
   806  0009                     	;# 
   807  000A                     	;# 
   808  000B                     	;# 
   809  000C                     	;# 
   810  000D                     	;# 
   811  000E                     	;# 
   812  000F                     	;# 
   813  0010                     	;# 
   814  0011                     	;# 
   815  0012                     	;# 
   816  0013                     	;# 
   817  0014                     	;# 
   818  0015                     	;# 
   819  0016                     	;# 
   820  0016                     	;# 
   821  0017                     	;# 
   822  0018                     	;# 
   823  0019                     	;# 
   824  001A                     	;# 
   825  001B                     	;# 
   826  001C                     	;# 
   827  001E                     	;# 
   828  001F                     	;# 
   829  008C                     	;# 
   830  008D                     	;# 
   831  008E                     	;# 
   832  008F                     	;# 
   833  0090                     	;# 
   834  0091                     	;# 
   835  0092                     	;# 
   836  0093                     	;# 
   837  0094                     	;# 
   838  0095                     	;# 
   839  0096                     	;# 
   840  0097                     	;# 
   841  0098                     	;# 
   842  0099                     	;# 
   843  009A                     	;# 
   844  009B                     	;# 
   845  009B                     	;# 
   846  009C                     	;# 
   847  009D                     	;# 
   848  009E                     	;# 
   849  010C                     	;# 
   850  010D                     	;# 
   851  010E                     	;# 
   852  010F                     	;# 
   853  0110                     	;# 
   854  0111                     	;# 
   855  0112                     	;# 
   856  0113                     	;# 
   857  0114                     	;# 
   858  0115                     	;# 
   859  0116                     	;# 
   860  0117                     	;# 
   861  0118                     	;# 
   862  0119                     	;# 
   863  011A                     	;# 
   864  011B                     	;# 
   865  011D                     	;# 
   866  011E                     	;# 
   867  011F                     	;# 
   868  018C                     	;# 
   869  0190                     	;# 
   870  0191                     	;# 
   871  0191                     	;# 
   872  0192                     	;# 
   873  0193                     	;# 
   874  0193                     	;# 
   875  0193                     	;# 
   876  0194                     	;# 
   877  0195                     	;# 
   878  0196                     	;# 
   879  0199                     	;# 
   880  0199                     	;# 
   881  019A                     	;# 
   882  019A                     	;# 
   883  019B                     	;# 
   884  019B                     	;# 
   885  019B                     	;# 
   886  019B                     	;# 
   887  019C                     	;# 
   888  019C                     	;# 
   889  019D                     	;# 
   890  019D                     	;# 
   891  019E                     	;# 
   892  019E                     	;# 
   893  019F                     	;# 
   894  019F                     	;# 
   895  020D                     	;# 
   896  0211                     	;# 
   897  0211                     	;# 
   898  0212                     	;# 
   899  0212                     	;# 
   900  0213                     	;# 
   901  0213                     	;# 
   902  0214                     	;# 
   903  0214                     	;# 
   904  0215                     	;# 
   905  0215                     	;# 
   906  0215                     	;# 
   907  0216                     	;# 
   908  0216                     	;# 
   909  0217                     	;# 
   910  0217                     	;# 
   911  0219                     	;# 
   912  021A                     	;# 
   913  021B                     	;# 
   914  021C                     	;# 
   915  021D                     	;# 
   916  021E                     	;# 
   917  021F                     	;# 
   918  028C                     	;# 
   919  028D                     	;# 
   920  0291                     	;# 
   921  0291                     	;# 
   922  0292                     	;# 
   923  0293                     	;# 
   924  0294                     	;# 
   925  0295                     	;# 
   926  0295                     	;# 
   927  0296                     	;# 
   928  0298                     	;# 
   929  0298                     	;# 
   930  0299                     	;# 
   931  029A                     	;# 
   932  029B                     	;# 
   933  029C                     	;# 
   934  029C                     	;# 
   935  029D                     	;# 
   936  029E                     	;# 
   937  029F                     	;# 
   938  030C                     	;# 
   939  030D                     	;# 
   940  0311                     	;# 
   941  0311                     	;# 
   942  0312                     	;# 
   943  0313                     	;# 
   944  0314                     	;# 
   945  0315                     	;# 
   946  0315                     	;# 
   947  0316                     	;# 
   948  0318                     	;# 
   949  0318                     	;# 
   950  0319                     	;# 
   951  031A                     	;# 
   952  031C                     	;# 
   953  031C                     	;# 
   954  031D                     	;# 
   955  031E                     	;# 
   956  038C                     	;# 
   957  038D                     	;# 
   958  0394                     	;# 
   959  0395                     	;# 
   960  0396                     	;# 
   961  040C                     	;# 
   962  040D                     	;# 
   963  0415                     	;# 
   964  0416                     	;# 
   965  0417                     	;# 
   966  041C                     	;# 
   967  041D                     	;# 
   968  041E                     	;# 
   969  048D                     	;# 
   970  0491                     	;# 
   971  0492                     	;# 
   972  0493                     	;# 
   973  0493                     	;# 
   974  0494                     	;# 
   975  0495                     	;# 
   976  0496                     	;# 
   977  0497                     	;# 
   978  0791                     	;# 
   979  0792                     	;# 
   980  0793                     	;# 
   981  0794                     	;# 
   982  0795                     	;# 
   983  0798                     	;# 
   984  0799                     	;# 
   985  079A                     	;# 
   986  079B                     	;# 
   987  079C                     	;# 
   988  079D                     	;# 
   989  07A0                     	;# 
   990  07A1                     	;# 
   991  07A2                     	;# 
   992  07A3                     	;# 
   993  07A4                     	;# 
   994  07A5                     	;# 
   995  07A6                     	;# 
   996  07A7                     	;# 
   997  07A8                     	;# 
   998  07A9                     	;# 
   999  07AA                     	;# 
  1000  07AB                     	;# 
  1001  07AC                     	;# 
  1002  07AD                     	;# 
  1003  07AE                     	;# 
  1004  07AF                     	;# 
  1005  07B0                     	;# 
  1006  07B1                     	;# 
  1007  07B2                     	;# 
  1008  07B3                     	;# 
  1009  07B4                     	;# 
  1010  07B5                     	;# 
  1011  07B6                     	;# 
  1012  07B7                     	;# 
  1013  0FE4                     	;# 
  1014  0FE5                     	;# 
  1015  0FE6                     	;# 
  1016  0FE7                     	;# 
  1017  0FE8                     	;# 
  1018  0FE9                     	;# 
  1019  0FEA                     	;# 
  1020  0FEB                     	;# 
  1021  0FED                     	;# 
  1022  0FEE                     	;# 
  1023  0FEF                     	;# 
  1024  0000                     	;# 
  1025  0001                     	;# 
  1026  0002                     	;# 
  1027  0003                     	;# 
  1028  0004                     	;# 
  1029  0005                     	;# 
  1030  0006                     	;# 
  1031  0007                     	;# 
  1032  0008                     	;# 
  1033  0009                     	;# 
  1034  000A                     	;# 
  1035  000B                     	;# 
  1036  000C                     	;# 
  1037  000D                     	;# 
  1038  000E                     	;# 
  1039  000F                     	;# 
  1040  0010                     	;# 
  1041  0011                     	;# 
  1042  0012                     	;# 
  1043  0013                     	;# 
  1044  0014                     	;# 
  1045  0015                     	;# 
  1046  0016                     	;# 
  1047  0016                     	;# 
  1048  0017                     	;# 
  1049  0018                     	;# 
  1050  0019                     	;# 
  1051  001A                     	;# 
  1052  001B                     	;# 
  1053  001C                     	;# 
  1054  001E                     	;# 
  1055  001F                     	;# 
  1056  008C                     	;# 
  1057  008D                     	;# 
  1058  008E                     	;# 
  1059  008F                     	;# 
  1060  0090                     	;# 
  1061  0091                     	;# 
  1062  0092                     	;# 
  1063  0093                     	;# 
  1064  0094                     	;# 
  1065  0095                     	;# 
  1066  0096                     	;# 
  1067  0097                     	;# 
  1068  0098                     	;# 
  1069  0099                     	;# 
  1070  009A                     	;# 
  1071  009B                     	;# 
  1072  009B                     	;# 
  1073  009C                     	;# 
  1074  009D                     	;# 
  1075  009E                     	;# 
  1076  010C                     	;# 
  1077  010D                     	;# 
  1078  010E                     	;# 
  1079  010F                     	;# 
  1080  0110                     	;# 
  1081  0111                     	;# 
  1082  0112                     	;# 
  1083  0113                     	;# 
  1084  0114                     	;# 
  1085  0115                     	;# 
  1086  0116                     	;# 
  1087  0117                     	;# 
  1088  0118                     	;# 
  1089  0119                     	;# 
  1090  011A                     	;# 
  1091  011B                     	;# 
  1092  011D                     	;# 
  1093  011E                     	;# 
  1094  011F                     	;# 
  1095  018C                     	;# 
  1096  0190                     	;# 
  1097  0191                     	;# 
  1098  0191                     	;# 
  1099  0192                     	;# 
  1100  0193                     	;# 
  1101  0193                     	;# 
  1102  0193                     	;# 
  1103  0194                     	;# 
  1104  0195                     	;# 
  1105  0196                     	;# 
  1106  0199                     	;# 
  1107  0199                     	;# 
  1108  019A                     	;# 
  1109  019A                     	;# 
  1110  019B                     	;# 
  1111  019B                     	;# 
  1112  019B                     	;# 
  1113  019B                     	;# 
  1114  019C                     	;# 
  1115  019C                     	;# 
  1116  019D                     	;# 
  1117  019D                     	;# 
  1118  019E                     	;# 
  1119  019E                     	;# 
  1120  019F                     	;# 
  1121  019F                     	;# 
  1122  020D                     	;# 
  1123  0211                     	;# 
  1124  0211                     	;# 
  1125  0212                     	;# 
  1126  0212                     	;# 
  1127  0213                     	;# 
  1128  0213                     	;# 
  1129  0214                     	;# 
  1130  0214                     	;# 
  1131  0215                     	;# 
  1132  0215                     	;# 
  1133  0215                     	;# 
  1134  0216                     	;# 
  1135  0216                     	;# 
  1136  0217                     	;# 
  1137  0217                     	;# 
  1138  0219                     	;# 
  1139  021A                     	;# 
  1140  021B                     	;# 
  1141  021C                     	;# 
  1142  021D                     	;# 
  1143  021E                     	;# 
  1144  021F                     	;# 
  1145  028C                     	;# 
  1146  028D                     	;# 
  1147  0291                     	;# 
  1148  0291                     	;# 
  1149  0292                     	;# 
  1150  0293                     	;# 
  1151  0294                     	;# 
  1152  0295                     	;# 
  1153  0295                     	;# 
  1154  0296                     	;# 
  1155  0298                     	;# 
  1156  0298                     	;# 
  1157  0299                     	;# 
  1158  029A                     	;# 
  1159  029B                     	;# 
  1160  029C                     	;# 
  1161  029C                     	;# 
  1162  029D                     	;# 
  1163  029E                     	;# 
  1164  029F                     	;# 
  1165  030C                     	;# 
  1166  030D                     	;# 
  1167  0311                     	;# 
  1168  0311                     	;# 
  1169  0312                     	;# 
  1170  0313                     	;# 
  1171  0314                     	;# 
  1172  0315                     	;# 
  1173  0315                     	;# 
  1174  0316                     	;# 
  1175  0318                     	;# 
  1176  0318                     	;# 
  1177  0319                     	;# 
  1178  031A                     	;# 
  1179  031C                     	;# 
  1180  031C                     	;# 
  1181  031D                     	;# 
  1182  031E                     	;# 
  1183  038C                     	;# 
  1184  038D                     	;# 
  1185  0394                     	;# 
  1186  0395                     	;# 
  1187  0396                     	;# 
  1188  040C                     	;# 
  1189  040D                     	;# 
  1190  0415                     	;# 
  1191  0416                     	;# 
  1192  0417                     	;# 
  1193  041C                     	;# 
  1194  041D                     	;# 
  1195  041E                     	;# 
  1196  048D                     	;# 
  1197  0491                     	;# 
  1198  0492                     	;# 
  1199  0493                     	;# 
  1200  0493                     	;# 
  1201  0494                     	;# 
  1202  0495                     	;# 
  1203  0496                     	;# 
  1204  0497                     	;# 
  1205  0791                     	;# 
  1206  0792                     	;# 
  1207  0793                     	;# 
  1208  0794                     	;# 
  1209  0795                     	;# 
  1210  0798                     	;# 
  1211  0799                     	;# 
  1212  079A                     	;# 
  1213  079B                     	;# 
  1214  079C                     	;# 
  1215  079D                     	;# 
  1216  07A0                     	;# 
  1217  07A1                     	;# 
  1218  07A2                     	;# 
  1219  07A3                     	;# 
  1220  07A4                     	;# 
  1221  07A5                     	;# 
  1222  07A6                     	;# 
  1223  07A7                     	;# 
  1224  07A8                     	;# 
  1225  07A9                     	;# 
  1226  07AA                     	;# 
  1227  07AB                     	;# 
  1228  07AC                     	;# 
  1229  07AD                     	;# 
  1230  07AE                     	;# 
  1231  07AF                     	;# 
  1232  07B0                     	;# 
  1233  07B1                     	;# 
  1234  07B2                     	;# 
  1235  07B3                     	;# 
  1236  07B4                     	;# 
  1237  07B5                     	;# 
  1238  07B6                     	;# 
  1239  07B7                     	;# 
  1240  0FE4                     	;# 
  1241  0FE5                     	;# 
  1242  0FE6                     	;# 
  1243  0FE7                     	;# 
  1244  0FE8                     	;# 
  1245  0FE9                     	;# 
  1246  0FEA                     	;# 
  1247  0FEB                     	;# 
  1248  0FED                     	;# 
  1249  0FEE                     	;# 
  1250  0FEF                     	;# 
  1251  0000                     	;# 
  1252  0001                     	;# 
  1253  0002                     	;# 
  1254  0003                     	;# 
  1255  0004                     	;# 
  1256  0005                     	;# 
  1257  0006                     	;# 
  1258  0007                     	;# 
  1259  0008                     	;# 
  1260  0009                     	;# 
  1261  000A                     	;# 
  1262  000B                     	;# 
  1263  000C                     	;# 
  1264  000D                     	;# 
  1265  000E                     	;# 
  1266  000F                     	;# 
  1267  0010                     	;# 
  1268  0011                     	;# 
  1269  0012                     	;# 
  1270  0013                     	;# 
  1271  0014                     	;# 
  1272  0015                     	;# 
  1273  0016                     	;# 
  1274  0016                     	;# 
  1275  0017                     	;# 
  1276  0018                     	;# 
  1277  0019                     	;# 
  1278  001A                     	;# 
  1279  001B                     	;# 
  1280  001C                     	;# 
  1281  001E                     	;# 
  1282  001F                     	;# 
  1283  008C                     	;# 
  1284  008D                     	;# 
  1285  008E                     	;# 
  1286  008F                     	;# 
  1287  0090                     	;# 
  1288  0091                     	;# 
  1289  0092                     	;# 
  1290  0093                     	;# 
  1291  0094                     	;# 
  1292  0095                     	;# 
  1293  0096                     	;# 
  1294  0097                     	;# 
  1295  0098                     	;# 
  1296  0099                     	;# 
  1297  009A                     	;# 
  1298  009B                     	;# 
  1299  009B                     	;# 
  1300  009C                     	;# 
  1301  009D                     	;# 
  1302  009E                     	;# 
  1303  010C                     	;# 
  1304  010D                     	;# 
  1305  010E                     	;# 
  1306  010F                     	;# 
  1307  0110                     	;# 
  1308  0111                     	;# 
  1309  0112                     	;# 
  1310  0113                     	;# 
  1311  0114                     	;# 
  1312  0115                     	;# 
  1313  0116                     	;# 
  1314  0117                     	;# 
  1315  0118                     	;# 
  1316  0119                     	;# 
  1317  011A                     	;# 
  1318  011B                     	;# 
  1319  011D                     	;# 
  1320  011E                     	;# 
  1321  011F                     	;# 
  1322  018C                     	;# 
  1323  0190                     	;# 
  1324  0191                     	;# 
  1325  0191                     	;# 
  1326  0192                     	;# 
  1327  0193                     	;# 
  1328  0193                     	;# 
  1329  0193                     	;# 
  1330  0194                     	;# 
  1331  0195                     	;# 
  1332  0196                     	;# 
  1333  0199                     	;# 
  1334  0199                     	;# 
  1335  019A                     	;# 
  1336  019A                     	;# 
  1337  019B                     	;# 
  1338  019B                     	;# 
  1339  019B                     	;# 
  1340  019B                     	;# 
  1341  019C                     	;# 
  1342  019C                     	;# 
  1343  019D                     	;# 
  1344  019D                     	;# 
  1345  019E                     	;# 
  1346  019E                     	;# 
  1347  019F                     	;# 
  1348  019F                     	;# 
  1349  020D                     	;# 
  1350  0211                     	;# 
  1351  0211                     	;# 
  1352  0212                     	;# 
  1353  0212                     	;# 
  1354  0213                     	;# 
  1355  0213                     	;# 
  1356  0214                     	;# 
  1357  0214                     	;# 
  1358  0215                     	;# 
  1359  0215                     	;# 
  1360  0215                     	;# 
  1361  0216                     	;# 
  1362  0216                     	;# 
  1363  0217                     	;# 
  1364  0217                     	;# 
  1365  0219                     	;# 
  1366  021A                     	;# 
  1367  021B                     	;# 
  1368  021C                     	;# 
  1369  021D                     	;# 
  1370  021E                     	;# 
  1371  021F                     	;# 
  1372  028C                     	;# 
  1373  028D                     	;# 
  1374  0291                     	;# 
  1375  0291                     	;# 
  1376  0292                     	;# 
  1377  0293                     	;# 
  1378  0294                     	;# 
  1379  0295                     	;# 
  1380  0295                     	;# 
  1381  0296                     	;# 
  1382  0298                     	;# 
  1383  0298                     	;# 
  1384  0299                     	;# 
  1385  029A                     	;# 
  1386  029B                     	;# 
  1387  029C                     	;# 
  1388  029C                     	;# 
  1389  029D                     	;# 
  1390  029E                     	;# 
  1391  029F                     	;# 
  1392  030C                     	;# 
  1393  030D                     	;# 
  1394  0311                     	;# 
  1395  0311                     	;# 
  1396  0312                     	;# 
  1397  0313                     	;# 
  1398  0314                     	;# 
  1399  0315                     	;# 
  1400  0315                     	;# 
  1401  0316                     	;# 
  1402  0318                     	;# 
  1403  0318                     	;# 
  1404  0319                     	;# 
  1405  031A                     	;# 
  1406  031C                     	;# 
  1407  031C                     	;# 
  1408  031D                     	;# 
  1409  031E                     	;# 
  1410  038C                     	;# 
  1411  038D                     	;# 
  1412  0394                     	;# 
  1413  0395                     	;# 
  1414  0396                     	;# 
  1415  040C                     	;# 
  1416  040D                     	;# 
  1417  0415                     	;# 
  1418  0416                     	;# 
  1419  0417                     	;# 
  1420  041C                     	;# 
  1421  041D                     	;# 
  1422  041E                     	;# 
  1423  048D                     	;# 
  1424  0491                     	;# 
  1425  0492                     	;# 
  1426  0493                     	;# 
  1427  0493                     	;# 
  1428  0494                     	;# 
  1429  0495                     	;# 
  1430  0496                     	;# 
  1431  0497                     	;# 
  1432  0791                     	;# 
  1433  0792                     	;# 
  1434  0793                     	;# 
  1435  0794                     	;# 
  1436  0795                     	;# 
  1437  0798                     	;# 
  1438  0799                     	;# 
  1439  079A                     	;# 
  1440  079B                     	;# 
  1441  079C                     	;# 
  1442  079D                     	;# 
  1443  07A0                     	;# 
  1444  07A1                     	;# 
  1445  07A2                     	;# 
  1446  07A3                     	;# 
  1447  07A4                     	;# 
  1448  07A5                     	;# 
  1449  07A6                     	;# 
  1450  07A7                     	;# 
  1451  07A8                     	;# 
  1452  07A9                     	;# 
  1453  07AA                     	;# 
  1454  07AB                     	;# 
  1455  07AC                     	;# 
  1456  07AD                     	;# 
  1457  07AE                     	;# 
  1458  07AF                     	;# 
  1459  07B0                     	;# 
  1460  07B1                     	;# 
  1461  07B2                     	;# 
  1462  07B3                     	;# 
  1463  07B4                     	;# 
  1464  07B5                     	;# 
  1465  07B6                     	;# 
  1466  07B7                     	;# 
  1467  0FE4                     	;# 
  1468  0FE5                     	;# 
  1469  0FE6                     	;# 
  1470  0FE7                     	;# 
  1471  0FE8                     	;# 
  1472  0FE9                     	;# 
  1473  0FEA                     	;# 
  1474  0FEB                     	;# 
  1475  0FED                     	;# 
  1476  0FEE                     	;# 
  1477  0FEF                     	;# 
  1478  0000                     	;# 
  1479  0001                     	;# 
  1480  0002                     	;# 
  1481  0003                     	;# 
  1482  0004                     	;# 
  1483  0005                     	;# 
  1484  0006                     	;# 
  1485  0007                     	;# 
  1486  0008                     	;# 
  1487  0009                     	;# 
  1488  000A                     	;# 
  1489  000B                     	;# 
  1490  000C                     	;# 
  1491  000D                     	;# 
  1492  000E                     	;# 
  1493  000F                     	;# 
  1494  0010                     	;# 
  1495  0011                     	;# 
  1496  0012                     	;# 
  1497  0013                     	;# 
  1498  0014                     	;# 
  1499  0015                     	;# 
  1500  0016                     	;# 
  1501  0016                     	;# 
  1502  0017                     	;# 
  1503  0018                     	;# 
  1504  0019                     	;# 
  1505  001A                     	;# 
  1506  001B                     	;# 
  1507  001C                     	;# 
  1508  001E                     	;# 
  1509  001F                     	;# 
  1510  008C                     	;# 
  1511  008D                     	;# 
  1512  008E                     	;# 
  1513  008F                     	;# 
  1514  0090                     	;# 
  1515  0091                     	;# 
  1516  0092                     	;# 
  1517  0093                     	;# 
  1518  0094                     	;# 
  1519  0095                     	;# 
  1520  0096                     	;# 
  1521  0097                     	;# 
  1522  0098                     	;# 
  1523  0099                     	;# 
  1524  009A                     	;# 
  1525  009B                     	;# 
  1526  009B                     	;# 
  1527  009C                     	;# 
  1528  009D                     	;# 
  1529  009E                     	;# 
  1530  010C                     	;# 
  1531  010D                     	;# 
  1532  010E                     	;# 
  1533  010F                     	;# 
  1534  0110                     	;# 
  1535  0111                     	;# 
  1536  0112                     	;# 
  1537  0113                     	;# 
  1538  0114                     	;# 
  1539  0115                     	;# 
  1540  0116                     	;# 
  1541  0117                     	;# 
  1542  0118                     	;# 
  1543  0119                     	;# 
  1544  011A                     	;# 
  1545  011B                     	;# 
  1546  011D                     	;# 
  1547  011E                     	;# 
  1548  011F                     	;# 
  1549  018C                     	;# 
  1550  0190                     	;# 
  1551  0191                     	;# 
  1552  0191                     	;# 
  1553  0192                     	;# 
  1554  0193                     	;# 
  1555  0193                     	;# 
  1556  0193                     	;# 
  1557  0194                     	;# 
  1558  0195                     	;# 
  1559  0196                     	;# 
  1560  0199                     	;# 
  1561  0199                     	;# 
  1562  019A                     	;# 
  1563  019A                     	;# 
  1564  019B                     	;# 
  1565  019B                     	;# 
  1566  019B                     	;# 
  1567  019B                     	;# 
  1568  019C                     	;# 
  1569  019C                     	;# 
  1570  019D                     	;# 
  1571  019D                     	;# 
  1572  019E                     	;# 
  1573  019E                     	;# 
  1574  019F                     	;# 
  1575  019F                     	;# 
  1576  020D                     	;# 
  1577  0211                     	;# 
  1578  0211                     	;# 
  1579  0212                     	;# 
  1580  0212                     	;# 
  1581  0213                     	;# 
  1582  0213                     	;# 
  1583  0214                     	;# 
  1584  0214                     	;# 
  1585  0215                     	;# 
  1586  0215                     	;# 
  1587  0215                     	;# 
  1588  0216                     	;# 
  1589  0216                     	;# 
  1590  0217                     	;# 
  1591  0217                     	;# 
  1592  0219                     	;# 
  1593  021A                     	;# 
  1594  021B                     	;# 
  1595  021C                     	;# 
  1596  021D                     	;# 
  1597  021E                     	;# 
  1598  021F                     	;# 
  1599  028C                     	;# 
  1600  028D                     	;# 
  1601  0291                     	;# 
  1602  0291                     	;# 
  1603  0292                     	;# 
  1604  0293                     	;# 
  1605  0294                     	;# 
  1606  0295                     	;# 
  1607  0295                     	;# 
  1608  0296                     	;# 
  1609  0298                     	;# 
  1610  0298                     	;# 
  1611  0299                     	;# 
  1612  029A                     	;# 
  1613  029B                     	;# 
  1614  029C                     	;# 
  1615  029C                     	;# 
  1616  029D                     	;# 
  1617  029E                     	;# 
  1618  029F                     	;# 
  1619  030C                     	;# 
  1620  030D                     	;# 
  1621  0311                     	;# 
  1622  0311                     	;# 
  1623  0312                     	;# 
  1624  0313                     	;# 
  1625  0314                     	;# 
  1626  0315                     	;# 
  1627  0315                     	;# 
  1628  0316                     	;# 
  1629  0318                     	;# 
  1630  0318                     	;# 
  1631  0319                     	;# 
  1632  031A                     	;# 
  1633  031C                     	;# 
  1634  031C                     	;# 
  1635  031D                     	;# 
  1636  031E                     	;# 
  1637  038C                     	;# 
  1638  038D                     	;# 
  1639  0394                     	;# 
  1640  0395                     	;# 
  1641  0396                     	;# 
  1642  040C                     	;# 
  1643  040D                     	;# 
  1644  0415                     	;# 
  1645  0416                     	;# 
  1646  0417                     	;# 
  1647  041C                     	;# 
  1648  041D                     	;# 
  1649  041E                     	;# 
  1650  048D                     	;# 
  1651  0491                     	;# 
  1652  0492                     	;# 
  1653  0493                     	;# 
  1654  0493                     	;# 
  1655  0494                     	;# 
  1656  0495                     	;# 
  1657  0496                     	;# 
  1658  0497                     	;# 
  1659  0791                     	;# 
  1660  0792                     	;# 
  1661  0793                     	;# 
  1662  0794                     	;# 
  1663  0795                     	;# 
  1664  0798                     	;# 
  1665  0799                     	;# 
  1666  079A                     	;# 
  1667  079B                     	;# 
  1668  079C                     	;# 
  1669  079D                     	;# 
  1670  07A0                     	;# 
  1671  07A1                     	;# 
  1672  07A2                     	;# 
  1673  07A3                     	;# 
  1674  07A4                     	;# 
  1675  07A5                     	;# 
  1676  07A6                     	;# 
  1677  07A7                     	;# 
  1678  07A8                     	;# 
  1679  07A9                     	;# 
  1680  07AA                     	;# 
  1681  07AB                     	;# 
  1682  07AC                     	;# 
  1683  07AD                     	;# 
  1684  07AE                     	;# 
  1685  07AF                     	;# 
  1686  07B0                     	;# 
  1687  07B1                     	;# 
  1688  07B2                     	;# 
  1689  07B3                     	;# 
  1690  07B4                     	;# 
  1691  07B5                     	;# 
  1692  07B6                     	;# 
  1693  07B7                     	;# 
  1694  0FE4                     	;# 
  1695  0FE5                     	;# 
  1696  0FE6                     	;# 
  1697  0FE7                     	;# 
  1698  0FE8                     	;# 
  1699  0FE9                     	;# 
  1700  0FEA                     	;# 
  1701  0FEB                     	;# 
  1702  0FED                     	;# 
  1703  0FEE                     	;# 
  1704  0FEF                     	;# 
  1705  0000                     	;# 
  1706  0001                     	;# 
  1707  0002                     	;# 
  1708  0003                     	;# 
  1709  0004                     	;# 
  1710  0005                     	;# 
  1711  0006                     	;# 
  1712  0007                     	;# 
  1713  0008                     	;# 
  1714  0009                     	;# 
  1715  000A                     	;# 
  1716  000B                     	;# 
  1717  000C                     	;# 
  1718  000D                     	;# 
  1719  000E                     	;# 
  1720  000F                     	;# 
  1721  0010                     	;# 
  1722  0011                     	;# 
  1723  0012                     	;# 
  1724  0013                     	;# 
  1725  0014                     	;# 
  1726  0015                     	;# 
  1727  0016                     	;# 
  1728  0016                     	;# 
  1729  0017                     	;# 
  1730  0018                     	;# 
  1731  0019                     	;# 
  1732  001A                     	;# 
  1733  001B                     	;# 
  1734  001C                     	;# 
  1735  001E                     	;# 
  1736  001F                     	;# 
  1737  008C                     	;# 
  1738  008D                     	;# 
  1739  008E                     	;# 
  1740  008F                     	;# 
  1741  0090                     	;# 
  1742  0091                     	;# 
  1743  0092                     	;# 
  1744  0093                     	;# 
  1745  0094                     	;# 
  1746  0095                     	;# 
  1747  0096                     	;# 
  1748  0097                     	;# 
  1749  0098                     	;# 
  1750  0099                     	;# 
  1751  009A                     	;# 
  1752  009B                     	;# 
  1753  009B                     	;# 
  1754  009C                     	;# 
  1755  009D                     	;# 
  1756  009E                     	;# 
  1757  010C                     	;# 
  1758  010D                     	;# 
  1759  010E                     	;# 
  1760  010F                     	;# 
  1761  0110                     	;# 
  1762  0111                     	;# 
  1763  0112                     	;# 
  1764  0113                     	;# 
  1765  0114                     	;# 
  1766  0115                     	;# 
  1767  0116                     	;# 
  1768  0117                     	;# 
  1769  0118                     	;# 
  1770  0119                     	;# 
  1771  011A                     	;# 
  1772  011B                     	;# 
  1773  011D                     	;# 
  1774  011E                     	;# 
  1775  011F                     	;# 
  1776  018C                     	;# 
  1777  0190                     	;# 
  1778  0191                     	;# 
  1779  0191                     	;# 
  1780  0192                     	;# 
  1781  0193                     	;# 
  1782  0193                     	;# 
  1783  0193                     	;# 
  1784  0194                     	;# 
  1785  0195                     	;# 
  1786  0196                     	;# 
  1787  0199                     	;# 
  1788  0199                     	;# 
  1789  019A                     	;# 
  1790  019A                     	;# 
  1791  019B                     	;# 
  1792  019B                     	;# 
  1793  019B                     	;# 
  1794  019B                     	;# 
  1795  019C                     	;# 
  1796  019C                     	;# 
  1797  019D                     	;# 
  1798  019D                     	;# 
  1799  019E                     	;# 
  1800  019E                     	;# 
  1801  019F                     	;# 
  1802  019F                     	;# 
  1803  020D                     	;# 
  1804  0211                     	;# 
  1805  0211                     	;# 
  1806  0212                     	;# 
  1807  0212                     	;# 
  1808  0213                     	;# 
  1809  0213                     	;# 
  1810  0214                     	;# 
  1811  0214                     	;# 
  1812  0215                     	;# 
  1813  0215                     	;# 
  1814  0215                     	;# 
  1815  0216                     	;# 
  1816  0216                     	;# 
  1817  0217                     	;# 
  1818  0217                     	;# 
  1819  0219                     	;# 
  1820  021A                     	;# 
  1821  021B                     	;# 
  1822  021C                     	;# 
  1823  021D                     	;# 
  1824  021E                     	;# 
  1825  021F                     	;# 
  1826  028C                     	;# 
  1827  028D                     	;# 
  1828  0291                     	;# 
  1829  0291                     	;# 
  1830  0292                     	;# 
  1831  0293                     	;# 
  1832  0294                     	;# 
  1833  0295                     	;# 
  1834  0295                     	;# 
  1835  0296                     	;# 
  1836  0298                     	;# 
  1837  0298                     	;# 
  1838  0299                     	;# 
  1839  029A                     	;# 
  1840  029B                     	;# 
  1841  029C                     	;# 
  1842  029C                     	;# 
  1843  029D                     	;# 
  1844  029E                     	;# 
  1845  029F                     	;# 
  1846  030C                     	;# 
  1847  030D                     	;# 
  1848  0311                     	;# 
  1849  0311                     	;# 
  1850  0312                     	;# 
  1851  0313                     	;# 
  1852  0314                     	;# 
  1853  0315                     	;# 
  1854  0315                     	;# 
  1855  0316                     	;# 
  1856  0318                     	;# 
  1857  0318                     	;# 
  1858  0319                     	;# 
  1859  031A                     	;# 
  1860  031C                     	;# 
  1861  031C                     	;# 
  1862  031D                     	;# 
  1863  031E                     	;# 
  1864  038C                     	;# 
  1865  038D                     	;# 
  1866  0394                     	;# 
  1867  0395                     	;# 
  1868  0396                     	;# 
  1869  040C                     	;# 
  1870  040D                     	;# 
  1871  0415                     	;# 
  1872  0416                     	;# 
  1873  0417                     	;# 
  1874  041C                     	;# 
  1875  041D                     	;# 
  1876  041E                     	;# 
  1877  048D                     	;# 
  1878  0491                     	;# 
  1879  0492                     	;# 
  1880  0493                     	;# 
  1881  0493                     	;# 
  1882  0494                     	;# 
  1883  0495                     	;# 
  1884  0496                     	;# 
  1885  0497                     	;# 
  1886  0791                     	;# 
  1887  0792                     	;# 
  1888  0793                     	;# 
  1889  0794                     	;# 
  1890  0795                     	;# 
  1891  0798                     	;# 
  1892  0799                     	;# 
  1893  079A                     	;# 
  1894  079B                     	;# 
  1895  079C                     	;# 
  1896  079D                     	;# 
  1897  07A0                     	;# 
  1898  07A1                     	;# 
  1899  07A2                     	;# 
  1900  07A3                     	;# 
  1901  07A4                     	;# 
  1902  07A5                     	;# 
  1903  07A6                     	;# 
  1904  07A7                     	;# 
  1905  07A8                     	;# 
  1906  07A9                     	;# 
  1907  07AA                     	;# 
  1908  07AB                     	;# 
  1909  07AC                     	;# 
  1910  07AD                     	;# 
  1911  07AE                     	;# 
  1912  07AF                     	;# 
  1913  07B0                     	;# 
  1914  07B1                     	;# 
  1915  07B2                     	;# 
  1916  07B3                     	;# 
  1917  07B4                     	;# 
  1918  07B5                     	;# 
  1919  07B6                     	;# 
  1920  07B7                     	;# 
  1921  0FE4                     	;# 
  1922  0FE5                     	;# 
  1923  0FE6                     	;# 
  1924  0FE7                     	;# 
  1925  0FE8                     	;# 
  1926  0FE9                     	;# 
  1927  0FEA                     	;# 
  1928  0FEB                     	;# 
  1929  0FED                     	;# 
  1930  0FEE                     	;# 
  1931  0FEF                     	;# 
  1932  0000                     	;# 
  1933  0001                     	;# 
  1934  0002                     	;# 
  1935  0003                     	;# 
  1936  0004                     	;# 
  1937  0005                     	;# 
  1938  0006                     	;# 
  1939  0007                     	;# 
  1940  0008                     	;# 
  1941  0009                     	;# 
  1942  000A                     	;# 
  1943  000B                     	;# 
  1944  000C                     	;# 
  1945  000D                     	;# 
  1946  000E                     	;# 
  1947  000F                     	;# 
  1948  0010                     	;# 
  1949  0011                     	;# 
  1950  0012                     	;# 
  1951  0013                     	;# 
  1952  0014                     	;# 
  1953  0015                     	;# 
  1954  0016                     	;# 
  1955  0016                     	;# 
  1956  0017                     	;# 
  1957  0018                     	;# 
  1958  0019                     	;# 
  1959  001A                     	;# 
  1960  001B                     	;# 
  1961  001C                     	;# 
  1962  001E                     	;# 
  1963  001F                     	;# 
  1964  008C                     	;# 
  1965  008D                     	;# 
  1966  008E                     	;# 
  1967  008F                     	;# 
  1968  0090                     	;# 
  1969  0091                     	;# 
  1970  0092                     	;# 
  1971  0093                     	;# 
  1972  0094                     	;# 
  1973  0095                     	;# 
  1974  0096                     	;# 
  1975  0097                     	;# 
  1976  0098                     	;# 
  1977  0099                     	;# 
  1978  009A                     	;# 
  1979  009B                     	;# 
  1980  009B                     	;# 
  1981  009C                     	;# 
  1982  009D                     	;# 
  1983  009E                     	;# 
  1984  010C                     	;# 
  1985  010D                     	;# 
  1986  010E                     	;# 
  1987  010F                     	;# 
  1988  0110                     	;# 
  1989  0111                     	;# 
  1990  0112                     	;# 
  1991  0113                     	;# 
  1992  0114                     	;# 
  1993  0115                     	;# 
  1994  0116                     	;# 
  1995  0117                     	;# 
  1996  0118                     	;# 
  1997  0119                     	;# 
  1998  011A                     	;# 
  1999  011B                     	;# 
  2000  011D                     	;# 
  2001  011E                     	;# 
  2002  011F                     	;# 
  2003  018C                     	;# 
  2004  0190                     	;# 
  2005  0191                     	;# 
  2006  0191                     	;# 
  2007  0192                     	;# 
  2008  0193                     	;# 
  2009  0193                     	;# 
  2010  0193                     	;# 
  2011  0194                     	;# 
  2012  0195                     	;# 
  2013  0196                     	;# 
  2014  0199                     	;# 
  2015  0199                     	;# 
  2016  019A                     	;# 
  2017  019A                     	;# 
  2018  019B                     	;# 
  2019  019B                     	;# 
  2020  019B                     	;# 
  2021  019B                     	;# 
  2022  019C                     	;# 
  2023  019C                     	;# 
  2024  019D                     	;# 
  2025  019D                     	;# 
  2026  019E                     	;# 
  2027  019E                     	;# 
  2028  019F                     	;# 
  2029  019F                     	;# 
  2030  020D                     	;# 
  2031  0211                     	;# 
  2032  0211                     	;# 
  2033  0212                     	;# 
  2034  0212                     	;# 
  2035  0213                     	;# 
  2036  0213                     	;# 
  2037  0214                     	;# 
  2038  0214                     	;# 
  2039  0215                     	;# 
  2040  0215                     	;# 
  2041  0215                     	;# 
  2042  0216                     	;# 
  2043  0216                     	;# 
  2044  0217                     	;# 
  2045  0217                     	;# 
  2046  0219                     	;# 
  2047  021A                     	;# 
  2048  021B                     	;# 
  2049  021C                     	;# 
  2050  021D                     	;# 
  2051  021E                     	;# 
  2052  021F                     	;# 
  2053  028C                     	;# 
  2054  028D                     	;# 
  2055  0291                     	;# 
  2056  0291                     	;# 
  2057  0292                     	;# 
  2058  0293                     	;# 
  2059  0294                     	;# 
  2060  0295                     	;# 
  2061  0295                     	;# 
  2062  0296                     	;# 
  2063  0298                     	;# 
  2064  0298                     	;# 
  2065  0299                     	;# 
  2066  029A                     	;# 
  2067  029B                     	;# 
  2068  029C                     	;# 
  2069  029C                     	;# 
  2070  029D                     	;# 
  2071  029E                     	;# 
  2072  029F                     	;# 
  2073  030C                     	;# 
  2074  030D                     	;# 
  2075  0311                     	;# 
  2076  0311                     	;# 
  2077  0312                     	;# 
  2078  0313                     	;# 
  2079  0314                     	;# 
  2080  0315                     	;# 
  2081  0315                     	;# 
  2082  0316                     	;# 
  2083  0318                     	;# 
  2084  0318                     	;# 
  2085  0319                     	;# 
  2086  031A                     	;# 
  2087  031C                     	;# 
  2088  031C                     	;# 
  2089  031D                     	;# 
  2090  031E                     	;# 
  2091  038C                     	;# 
  2092  038D                     	;# 
  2093  0394                     	;# 
  2094  0395                     	;# 
  2095  0396                     	;# 
  2096  040C                     	;# 
  2097  040D                     	;# 
  2098  0415                     	;# 
  2099  0416                     	;# 
  2100  0417                     	;# 
  2101  041C                     	;# 
  2102  041D                     	;# 
  2103  041E                     	;# 
  2104  048D                     	;# 
  2105  0491                     	;# 
  2106  0492                     	;# 
  2107  0493                     	;# 
  2108  0493                     	;# 
  2109  0494                     	;# 
  2110  0495                     	;# 
  2111  0496                     	;# 
  2112  0497                     	;# 
  2113  0791                     	;# 
  2114  0792                     	;# 
  2115  0793                     	;# 
  2116  0794                     	;# 
  2117  0795                     	;# 
  2118  0798                     	;# 
  2119  0799                     	;# 
  2120  079A                     	;# 
  2121  079B                     	;# 
  2122  079C                     	;# 
  2123  079D                     	;# 
  2124  07A0                     	;# 
  2125  07A1                     	;# 
  2126  07A2                     	;# 
  2127  07A3                     	;# 
  2128  07A4                     	;# 
  2129  07A5                     	;# 
  2130  07A6                     	;# 
  2131  07A7                     	;# 
  2132  07A8                     	;# 
  2133  07A9                     	;# 
  2134  07AA                     	;# 
  2135  07AB                     	;# 
  2136  07AC                     	;# 
  2137  07AD                     	;# 
  2138  07AE                     	;# 
  2139  07AF                     	;# 
  2140  07B0                     	;# 
  2141  07B1                     	;# 
  2142  07B2                     	;# 
  2143  07B3                     	;# 
  2144  07B4                     	;# 
  2145  07B5                     	;# 
  2146  07B6                     	;# 
  2147  07B7                     	;# 
  2148  0FE4                     	;# 
  2149  0FE5                     	;# 
  2150  0FE6                     	;# 
  2151  0FE7                     	;# 
  2152  0FE8                     	;# 
  2153  0FE9                     	;# 
  2154  0FEA                     	;# 
  2155  0FEB                     	;# 
  2156  0FED                     	;# 
  2157  0FEE                     	;# 
  2158  0FEF                     	;# 
  2159  0000                     	;# 
  2160  0001                     	;# 
  2161  0002                     	;# 
  2162  0003                     	;# 
  2163  0004                     	;# 
  2164  0005                     	;# 
  2165  0006                     	;# 
  2166  0007                     	;# 
  2167  0008                     	;# 
  2168  0009                     	;# 
  2169  000A                     	;# 
  2170  000B                     	;# 
  2171  000C                     	;# 
  2172  000D                     	;# 
  2173  000E                     	;# 
  2174  000F                     	;# 
  2175  0010                     	;# 
  2176  0011                     	;# 
  2177  0012                     	;# 
  2178  0013                     	;# 
  2179  0014                     	;# 
  2180  0015                     	;# 
  2181  0016                     	;# 
  2182  0016                     	;# 
  2183  0017                     	;# 
  2184  0018                     	;# 
  2185  0019                     	;# 
  2186  001A                     	;# 
  2187  001B                     	;# 
  2188  001C                     	;# 
  2189  001E                     	;# 
  2190  001F                     	;# 
  2191  008C                     	;# 
  2192  008D                     	;# 
  2193  008E                     	;# 
  2194  008F                     	;# 
  2195  0090                     	;# 
  2196  0091                     	;# 
  2197  0092                     	;# 
  2198  0093                     	;# 
  2199  0094                     	;# 
  2200  0095                     	;# 
  2201  0096                     	;# 
  2202  0097                     	;# 
  2203  0098                     	;# 
  2204  0099                     	;# 
  2205  009A                     	;# 
  2206  009B                     	;# 
  2207  009B                     	;# 
  2208  009C                     	;# 
  2209  009D                     	;# 
  2210  009E                     	;# 
  2211  010C                     	;# 
  2212  010D                     	;# 
  2213  010E                     	;# 
  2214  010F                     	;# 
  2215  0110                     	;# 
  2216  0111                     	;# 
  2217  0112                     	;# 
  2218  0113                     	;# 
  2219  0114                     	;# 
  2220  0115                     	;# 
  2221  0116                     	;# 
  2222  0117                     	;# 
  2223  0118                     	;# 
  2224  0119                     	;# 
  2225  011A                     	;# 
  2226  011B                     	;# 
  2227  011D                     	;# 
  2228  011E                     	;# 
  2229  011F                     	;# 
  2230  018C                     	;# 
  2231  0190                     	;# 
  2232  0191                     	;# 
  2233  0191                     	;# 
  2234  0192                     	;# 
  2235  0193                     	;# 
  2236  0193                     	;# 
  2237  0193                     	;# 
  2238  0194                     	;# 
  2239  0195                     	;# 
  2240  0196                     	;# 
  2241  0199                     	;# 
  2242  0199                     	;# 
  2243  019A                     	;# 
  2244  019A                     	;# 
  2245  019B                     	;# 
  2246  019B                     	;# 
  2247  019B                     	;# 
  2248  019B                     	;# 
  2249  019C                     	;# 
  2250  019C                     	;# 
  2251  019D                     	;# 
  2252  019D                     	;# 
  2253  019E                     	;# 
  2254  019E                     	;# 
  2255  019F                     	;# 
  2256  019F                     	;# 
  2257  020D                     	;# 
  2258  0211                     	;# 
  2259  0211                     	;# 
  2260  0212                     	;# 
  2261  0212                     	;# 
  2262  0213                     	;# 
  2263  0213                     	;# 
  2264  0214                     	;# 
  2265  0214                     	;# 
  2266  0215                     	;# 
  2267  0215                     	;# 
  2268  0215                     	;# 
  2269  0216                     	;# 
  2270  0216                     	;# 
  2271  0217                     	;# 
  2272  0217                     	;# 
  2273  0219                     	;# 
  2274  021A                     	;# 
  2275  021B                     	;# 
  2276  021C                     	;# 
  2277  021D                     	;# 
  2278  021E                     	;# 
  2279  021F                     	;# 
  2280  028C                     	;# 
  2281  028D                     	;# 
  2282  0291                     	;# 
  2283  0291                     	;# 
  2284  0292                     	;# 
  2285  0293                     	;# 
  2286  0294                     	;# 
  2287  0295                     	;# 
  2288  0295                     	;# 
  2289  0296                     	;# 
  2290  0298                     	;# 
  2291  0298                     	;# 
  2292  0299                     	;# 
  2293  029A                     	;# 
  2294  029B                     	;# 
  2295  029C                     	;# 
  2296  029C                     	;# 
  2297  029D                     	;# 
  2298  029E                     	;# 
  2299  029F                     	;# 
  2300  030C                     	;# 
  2301  030D                     	;# 
  2302  0311                     	;# 
  2303  0311                     	;# 
  2304  0312                     	;# 
  2305  0313                     	;# 
  2306  0314                     	;# 
  2307  0315                     	;# 
  2308  0315                     	;# 
  2309  0316                     	;# 
  2310  0318                     	;# 
  2311  0318                     	;# 
  2312  0319                     	;# 
  2313  031A                     	;# 
  2314  031C                     	;# 
  2315  031C                     	;# 
  2316  031D                     	;# 
  2317  031E                     	;# 
  2318  038C                     	;# 
  2319  038D                     	;# 
  2320  0394                     	;# 
  2321  0395                     	;# 
  2322  0396                     	;# 
  2323  040C                     	;# 
  2324  040D                     	;# 
  2325  0415                     	;# 
  2326  0416                     	;# 
  2327  0417                     	;# 
  2328  041C                     	;# 
  2329  041D                     	;# 
  2330  041E                     	;# 
  2331  048D                     	;# 
  2332  0491                     	;# 
  2333  0492                     	;# 
  2334  0493                     	;# 
  2335  0493                     	;# 
  2336  0494                     	;# 
  2337  0495                     	;# 
  2338  0496                     	;# 
  2339  0497                     	;# 
  2340  0791                     	;# 
  2341  0792                     	;# 
  2342  0793                     	;# 
  2343  0794                     	;# 
  2344  0795                     	;# 
  2345  0798                     	;# 
  2346  0799                     	;# 
  2347  079A                     	;# 
  2348  079B                     	;# 
  2349  079C                     	;# 
  2350  079D                     	;# 
  2351  07A0                     	;# 
  2352  07A1                     	;# 
  2353  07A2                     	;# 
  2354  07A3                     	;# 
  2355  07A4                     	;# 
  2356  07A5                     	;# 
  2357  07A6                     	;# 
  2358  07A7                     	;# 
  2359  07A8                     	;# 
  2360  07A9                     	;# 
  2361  07AA                     	;# 
  2362  07AB                     	;# 
  2363  07AC                     	;# 
  2364  07AD                     	;# 
  2365  07AE                     	;# 
  2366  07AF                     	;# 
  2367  07B0                     	;# 
  2368  07B1                     	;# 
  2369  07B2                     	;# 
  2370  07B3                     	;# 
  2371  07B4                     	;# 
  2372  07B5                     	;# 
  2373  07B6                     	;# 
  2374  07B7                     	;# 
  2375  0FE4                     	;# 
  2376  0FE5                     	;# 
  2377  0FE6                     	;# 
  2378  0FE7                     	;# 
  2379  0FE8                     	;# 
  2380  0FE9                     	;# 
  2381  0FEA                     	;# 
  2382  0FEB                     	;# 
  2383  0FED                     	;# 
  2384  0FEE                     	;# 
  2385  0FEF                     	;# 
  2386                           
  2387 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  2388  0000                     
  2389 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  2390  0000                     
  2391 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  2392  0000                     
  2393 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  2394  0000                     
  2395 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  2396  0000                     
  2397 ;; Function _rd1RegCompleteHandler@i2c1_master_example$F143 is unused but had its address taken
  2398  0000                     
  2399 ;; Function _rd2RegCompleteHandler@i2c1_master_example$F154 is unused but had its address taken
  2400  0000                     
  2401 ;; Function _wr1RegCompleteHandler@i2c1_master_example$F160 is unused but had its address taken
  2402  0000                     
  2403 ;; Function _wr2RegCompleteHandler@i2c1_master_example$F166 is unused but had its address taken
  2404  0000                     
  2405 ;; Function _rdBlkRegCompleteHandler@i2c1_master_example$F177 is unused but had its address taken
  2406  0000                     
  2407 ;; Function _rd1RegCompleteHandler@i2c2_master_example$F254 is unused but had its address taken
  2408  0000                     
  2409 ;; Function _rd2RegCompleteHandler@i2c2_master_example$F281 is unused but had its address taken
  2410  0000                     
  2411 ;; Function _wr1RegCompleteHandler@i2c2_master_example$F287 is unused but had its address taken
  2412  0000                     
  2413 ;; Function _wr2RegCompleteHandler@i2c2_master_example$F293 is unused but had its address taken
  2414  0000                     
  2415 ;; Function _rdBlkRegCompleteHandler@i2c2_master_example$F307 is unused but had its address taken
  2416  0000                     
  2417 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
  2418  0000                     
  2419 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
  2420  0000                     
  2421 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
  2422  0000                     
  2423 ;; Function _I2C1_DO_IDLE is unused but had its address taken
  2424  0000                     
  2425 ;; Function _I2C1_DO_SEND_ADR_READ is unused but had its address taken
  2426  0000                     
  2427 ;; Function _I2C1_DO_SEND_ADR_WRITE is unused but had its address taken
  2428  0000                     
  2429 ;; Function _I2C1_DO_TX is unused but had its address taken
  2430  0000                     
  2431 ;; Function _I2C1_DO_RX is unused but had its address taken
  2432  0000                     
  2433 ;; Function _I2C1_DO_RCEN is unused but had its address taken
  2434  0000                     
  2435 ;; Function _I2C1_DO_TX_EMPTY is unused but had its address taken
  2436  0000                     
  2437 ;; Function _I2C1_DO_SEND_RESTART_READ is unused but had its address taken
  2438  0000                     
  2439 ;; Function _I2C1_DO_SEND_RESTART_WRITE is unused but had its address taken
  2440  0000                     
  2441 ;; Function _I2C1_DO_SEND_RESTART is unused but had its address taken
  2442  0000                     
  2443 ;; Function _I2C1_DO_SEND_STOP is unused but had its address taken
  2444  0000                     
  2445 ;; Function _I2C1_DO_RX_ACK is unused but had its address taken
  2446  0000                     
  2447 ;; Function _I2C1_DO_RX_NACK_STOP is unused but had its address taken
  2448  0000                     
  2449 ;; Function _I2C1_DO_RX_NACK_RESTART is unused but had its address taken
  2450  0000                     
  2451 ;; Function _I2C1_DO_RESET is unused but had its address taken
  2452  0000                     
  2453 ;; Function _I2C1_DO_ADDRESS_NACK is unused but had its address taken
  2454  0000                     
  2455 ;; Function _I2C1_CallbackReturnStop is unused but had its address taken
  2456  0000                     
  2457 ;; Function _I2C1_CallbackReturnReset is unused but had its address taken
  2458  0000                     
  2459 ;; Function _I2C2_DO_IDLE is unused but had its address taken
  2460  0000                     
  2461 ;; Function _I2C2_DO_SEND_ADR_READ is unused but had its address taken
  2462  0000                     
  2463 ;; Function _I2C2_DO_SEND_ADR_WRITE is unused but had its address taken
  2464  0000                     
  2465 ;; Function _I2C2_DO_TX is unused but had its address taken
  2466  0000                     
  2467 ;; Function _I2C2_DO_RX is unused but had its address taken
  2468  0000                     
  2469 ;; Function _I2C2_DO_RCEN is unused but had its address taken
  2470  0000                     
  2471 ;; Function _I2C2_DO_TX_EMPTY is unused but had its address taken
  2472  0000                     
  2473 ;; Function _I2C2_DO_SEND_RESTART_READ is unused but had its address taken
  2474  0000                     
  2475 ;; Function _I2C2_DO_SEND_RESTART_WRITE is unused but had its address taken
  2476  0000                     
  2477 ;; Function _I2C2_DO_SEND_RESTART is unused but had its address taken
  2478  0000                     
  2479 ;; Function _I2C2_DO_SEND_STOP is unused but had its address taken
  2480  0000                     
  2481 ;; Function _I2C2_DO_RX_ACK is unused but had its address taken
  2482  0000                     
  2483 ;; Function _I2C2_DO_RX_NACK_STOP is unused but had its address taken
  2484  0000                     
  2485 ;; Function _I2C2_DO_RX_NACK_RESTART is unused but had its address taken
  2486  0000                     
  2487 ;; Function _I2C2_DO_RESET is unused but had its address taken
  2488  0000                     
  2489 ;; Function _I2C2_DO_ADDRESS_NACK is unused but had its address taken
  2490  0000                     
  2491 ;; Function _I2C2_CallbackReturnStop is unused but had its address taken
  2492  0000                     
  2493 ;; Function _I2C2_CallbackReturnReset is unused but had its address taken
  2494  0000                     
  2495 ;; Function _EUSART2_DefaultFramingErrorHandler is unused but had its address taken
  2496  0000                     
  2497 ;; Function _EUSART2_DefaultOverrunErrorHandler is unused but had its address taken
  2498  0000                     
  2499 ;; Function _EUSART2_DefaultErrorHandler is unused but had its address taken
  2500  0000                     
  2501                           	psect	idataBANK2
  2502  199F                     __pidataBANK2:
  2503                           
  2504                           ;initializer for _t_right
  2505  199F  34E8               	retlw	232
  2506  19A0  3403               	retlw	3
  2507                           
  2508                           ;initializer for _t_left
  2509  19A1  34E8               	retlw	232
  2510  19A2  3403               	retlw	3
  2511                           
  2512                           	psect	idataBANK5
  2513  199B                     __pidataBANK5:
  2514                           
  2515                           ;initializer for _velocity_TL
  2516  199B  3400               	retlw	0
  2517  199C  3400               	retlw	0
  2518  199D  34C8               	retlw	200
  2519  199E  3442               	retlw	66
  2520                           
  2521                           	psect	stringtext1
  2522  2000                     __pstringtext1:
  2523  2000                     _i2c2_fsmStateTable:
  2524  2000  3400               	retlw	0
  2525  2001  3400               	retlw	0
  2526  2002  3400               	retlw	0
  2527  2003  3400               	retlw	0
  2528  2004  3400               	retlw	0
  2529  2005  3400               	retlw	0
  2530  2006  3400               	retlw	0
  2531  2007  3400               	retlw	0
  2532  2008  3400               	retlw	0
  2533  2009  3400               	retlw	0
  2534  200A  3400               	retlw	0
  2535  200B  3400               	retlw	0
  2536  200C  3400               	retlw	0
  2537  200D  3400               	retlw	0
  2538  200E  3400               	retlw	0
  2539  200F  3400               	retlw	0
  2540  2010  3400               	retlw	0
  2541  2011  3400               	retlw	0
  2542  2012  3400               	retlw	0
  2543  2013  3400               	retlw	0
  2544  2014  3400               	retlw	0
  2545  2015  3400               	retlw	0
  2546  2016  3400               	retlw	0
  2547  2017  3400               	retlw	0
  2548  2018  3400               	retlw	0
  2549  2019  3400               	retlw	0
  2550  201A  3400               	retlw	0
  2551  201B  3400               	retlw	0
  2552  201C  3400               	retlw	0
  2553  201D  3400               	retlw	0
  2554  201E  3400               	retlw	0
  2555  201F  3400               	retlw	0
  2556  2020                     __end_of_i2c2_fsmStateTable:
  2557                           
  2558                           	psect	stringtext2
  2559  2020                     __pstringtext2:
  2560  2020                     _i2c1_fsmStateTable:
  2561  2020  3400               	retlw	0
  2562  2021  3400               	retlw	0
  2563  2022  3400               	retlw	0
  2564  2023  3400               	retlw	0
  2565  2024  3400               	retlw	0
  2566  2025  3400               	retlw	0
  2567  2026  3400               	retlw	0
  2568  2027  3400               	retlw	0
  2569  2028  3400               	retlw	0
  2570  2029  3400               	retlw	0
  2571  202A  3400               	retlw	0
  2572  202B  3400               	retlw	0
  2573  202C  3400               	retlw	0
  2574  202D  3400               	retlw	0
  2575  202E  3400               	retlw	0
  2576  202F  3400               	retlw	0
  2577  2030  3400               	retlw	0
  2578  2031  3400               	retlw	0
  2579  2032  3400               	retlw	0
  2580  2033  3400               	retlw	0
  2581  2034  3400               	retlw	0
  2582  2035  3400               	retlw	0
  2583  2036  3400               	retlw	0
  2584  2037  3400               	retlw	0
  2585  2038  3400               	retlw	0
  2586  2039  3400               	retlw	0
  2587  203A  3400               	retlw	0
  2588  203B  3400               	retlw	0
  2589  203C  3400               	retlw	0
  2590  203D  3400               	retlw	0
  2591  203E  3400               	retlw	0
  2592  203F  3400               	retlw	0
  2593  2040                     __end_of_i2c1_fsmStateTable:
  2594                           
  2595                           	psect	nvBANK2
  2596  0161                     __pnvBANK2:
  2597  0161                     _timer1ReloadVal:
  2598  0161                     	ds	2
  2599                           
  2600                           	psect	nvBANK4
  2601  026D                     __pnvBANK4:
  2602  026D                     _TMR1_InterruptHandler:
  2603  026D                     	ds	2
  2604                           
  2605                           	psect	nvBANK5
  2606  02D2                     __pnvBANK5:
  2607  02D2                     _EUSART2_ErrorHandler:
  2608  02D2                     	ds	2
  2609  02D4                     _EUSART2_OverrunErrorHandler:
  2610  02D4                     	ds	2
  2611  02D6                     _EUSART2_FramingErrorHandler:
  2612  02D6                     	ds	2
  2613  02D8                     _EUSART1_ErrorHandler:
  2614  02D8                     	ds	2
  2615  02DA                     _EUSART1_OverrunErrorHandler:
  2616  02DA                     	ds	2
  2617  02DC                     _EUSART1_FramingErrorHandler:
  2618  02DC                     	ds	2
  2619  0014                     _PIR4bits	set	20
  2620  0012                     _PIR2bits	set	18
  2621  000B                     _INTCONbits	set	11
  2622  0019                     _T1GCONbits	set	25
  2623  0018                     _T1CONbits	set	24
  2624  0018                     _T1CON	set	24
  2625  0011                     _PIR1bits	set	17
  2626  0016                     _TMR1L	set	22
  2627  0017                     _TMR1H	set	23
  2628  0019                     _T1GCON	set	25
  2629  0094                     _PIE4bits	set	148
  2630  0091                     _PIE1bits	set	145
  2631  0097                     _WDTCON	set	151
  2632  0098                     _OSCTUNE	set	152
  2633  0099                     _OSCCON	set	153
  2634  0095                     _OPTION_REGbits	set	149
  2635  008F                     _TRISD	set	143
  2636  008E                     _TRISC	set	142
  2637  008D                     _TRISB	set	141
  2638  008C                     _TRISA	set	140
  2639  0090                     _TRISE	set	144
  2640  010E                     _LATCbits	set	270
  2641  0116                     _BORCON	set	278
  2642  011D                     _APFCON	set	285
  2643  010E                     _LATC	set	270
  2644  010D                     _LATB	set	269
  2645  010C                     _LATA	set	268
  2646  010F                     _LATD	set	271
  2647  0110                     _LATE	set	272
  2648  019A                     _TX1REG	set	410
  2649  0199                     _RC1REG	set	409
  2650  019D                     _RC1STAbits	set	413
  2651  019E                     _TX1STAbits	set	414
  2652  019C                     _SP1BRGH	set	412
  2653  019B                     _SP1BRGL	set	411
  2654  019E                     _TX1STA	set	414
  2655  019D                     _RC1STA	set	413
  2656  019F                     _BAUD1CON	set	415
  2657  018C                     _ANSELA	set	396
  2658  0190                     _ANSELE	set	400
  2659  021C                     _SSP2STATbits	set	540
  2660  021E                     _SSP2CON2bits	set	542
  2661  0219                     _SSP2BUF	set	537
  2662  021D                     _SSP2CON1bits	set	541
  2663  021A                     _SSP2ADD	set	538
  2664  021E                     _SSP2CON2	set	542
  2665  021D                     _SSP2CON1	set	541
  2666  021C                     _SSP2STAT	set	540
  2667  0214                     _SSP1STATbits	set	532
  2668  0216                     _SSP1CON2bits	set	534
  2669  0211                     _SSP1BUF	set	529
  2670  0215                     _SSP1CON1bits	set	533
  2671  0212                     _SSP1ADD	set	530
  2672  0216                     _SSP1CON2	set	534
  2673  0215                     _SSP1CON1	set	533
  2674  0214                     _SSP1STAT	set	532
  2675  020D                     _WPUB	set	525
  2676  030D                     _TRISG	set	781
  2677  030C                     _TRISF	set	780
  2678  038C                     _LATFbits	set	908
  2679  038D                     _LATG	set	909
  2680  038C                     _LATF	set	908
  2681  040C                     _ANSELF	set	1036
  2682  040D                     _ANSELG	set	1037
  2683  0492                     _TX2REG	set	1170
  2684  0491                     _RC2REG	set	1169
  2685  0495                     _RC2STAbits	set	1173
  2686  0496                     _TX2STAbits	set	1174
  2687  0494                     _SP2BRGH	set	1172
  2688  0493                     _SP2BRGL	set	1171
  2689  0496                     _TX2STA	set	1174
  2690  0495                     _RC2STA	set	1173
  2691  0497                     _BAUD2CON	set	1175
  2692  048D                     _WPUG	set	1165
  2693                           
  2694                           	psect	cinit
  2695  001B                     start_initialization:	
  2696                           ; #config settings
  2697                           
  2698  001B                     __initialization:
  2699                           
  2700                           ; Initialize objects allocated to BANK2
  2701  001B  309F               	movlw	low __pidataBANK2
  2702  001C  0084               	movwf	4
  2703  001D  3099               	movlw	(high __pidataBANK2)| (0+128)
  2704  001E  0085               	movwf	5
  2705  001F  305D               	movlw	low __pdataBANK2
  2706  0020  0086               	movwf	6
  2707  0021  3001               	movlw	high __pdataBANK2
  2708  0022  0087               	movwf	7
  2709  0023  3004               	movlw	4
  2710  0024  3187  27FA  3180   	fcall	init_ram
  2711                           
  2712                           ; Initialize objects allocated to BANK5
  2713  0027  309B               	movlw	low __pidataBANK5
  2714  0028  0084               	movwf	4
  2715  0029  3099               	movlw	(high __pidataBANK5)| (0+128)
  2716  002A  0085               	movwf	5
  2717  002B  30DE               	movlw	low __pdataBANK5
  2718  002C  0086               	movwf	6
  2719  002D  3002               	movlw	high __pdataBANK5
  2720  002E  0087               	movwf	7
  2721  002F  3004               	movlw	4
  2722  0030  3187  27FA  3180   	fcall	init_ram
  2723                           
  2724                           ; Clear objects allocated to BANK0
  2725  0033  3054               	movlw	low __pbssBANK0
  2726  0034  0084               	movwf	4
  2727  0035  3000               	movlw	high __pbssBANK0
  2728  0036  0085               	movwf	5
  2729  0037  300E               	movlw	14
  2730  0038  3190  2001  3180   	fcall	clear_ram0
  2731                           
  2732                           ; Clear objects allocated to BANK2
  2733  003B  3020               	movlw	low __pbssBANK2
  2734  003C  0084               	movwf	4
  2735  003D  3001               	movlw	high __pbssBANK2
  2736  003E  0085               	movwf	5
  2737  003F  3022               	movlw	34
  2738  0040  3190  2001  3180   	fcall	clear_ram0
  2739                           
  2740                           ; Clear objects allocated to BANK3
  2741  0043  30A0               	movlw	low __pbssBANK3
  2742  0044  0084               	movwf	4
  2743  0045  3001               	movlw	high __pbssBANK3
  2744  0046  0085               	movwf	5
  2745  0047  304F               	movlw	79
  2746  0048  3190  2001  3180   	fcall	clear_ram0
  2747                           
  2748                           ; Clear objects allocated to BANK4
  2749  004B  3020               	movlw	low __pbssBANK4
  2750  004C  0084               	movwf	4
  2751  004D  3002               	movlw	high __pbssBANK4
  2752  004E  0085               	movwf	5
  2753  004F  304D               	movlw	77
  2754  0050  3190  2001  3180   	fcall	clear_ram0
  2755                           
  2756                           ; Clear objects allocated to BANK5
  2757  0053  30A0               	movlw	low __pbssBANK5
  2758  0054  0084               	movwf	4
  2759  0055  3002               	movlw	high __pbssBANK5
  2760  0056  0085               	movwf	5
  2761  0057  3032               	movlw	50
  2762  0058  3190  2001  3180   	fcall	clear_ram0
  2763  005B                     end_of_initialization:	
  2764                           ;End of C runtime variable initialization code
  2765                           
  2766  005B                     __end_of__initialization:
  2767  005B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2768  005C  0020               	movlb	0
  2769  005D  319D  2D38         	ljmp	_main	;jump to C main() function
  2770                           
  2771                           	psect	bssBANK0
  2772  0054                     __pbssBANK0:
  2773  0054                     _velManual:
  2774  0054                     	ds	4
  2775  0058                     _totalTime:
  2776  0058                     	ds	2
  2777  005A                     _cnt_frame:
  2778  005A                     	ds	1
  2779  005B                     _cntALine:
  2780  005B                     	ds	1
  2781  005C                     _flagALine:
  2782  005C                     	ds	1
  2783  005D                     _flagManual:
  2784  005D                     	ds	1
  2785  005E                     _flag_stop:
  2786  005E                     	ds	1
  2787  005F                     _eusart1RxLastError:
  2788  005F                     	ds	1
  2789  0060                     _direct_ALine:
  2790  0060                     	ds	2
  2791                           
  2792                           	psect	bssBANK2
  2793  0120                     __pbssBANK2:
  2794  0120                     _velACircle:
  2795  0120                     	ds	4
  2796  0124                     _timeALine:
  2797  0124                     	ds	4
  2798  0128                     _PID_Omega:
  2799  0128                     	ds	4
  2800  012C                     _errorOmega_sum:
  2801  012C                     	ds	4
  2802  0130                     _cntManual:
  2803  0130                     	ds	2
  2804  0132                     _cntTime:
  2805  0132                     	ds	2
  2806  0134                     _cnt_sys:
  2807  0134                     	ds	1
  2808  0135                     _flagCamera:
  2809  0135                     	ds	1
  2810  0136                     _cntCamera:
  2811  0136                     	ds	1
  2812  0137                     _cntACircle:
  2813  0137                     	ds	1
  2814  0138                     _flagACircle:
  2815  0138                     	ds	1
  2816  0139                     _shift_one:
  2817  0139                     	ds	1
  2818  013A                     _shift:
  2819  013A                     	ds	1
  2820  013B                     _eusart2RxLastError:
  2821  013B                     	ds	1
  2822  013C                     _errorOmega:
  2823  013C                     	ds	4
  2824  0140                     _sum_frame:
  2825  0140                     	ds	2
  2826                           
  2827                           	psect	dataBANK2
  2828  015D                     __pdataBANK2:
  2829  015D                     _t_right:
  2830  015D                     	ds	2
  2831  015F                     _t_left:
  2832  015F                     	ds	2
  2833                           
  2834                           	psect	bssBANK3
  2835  01A0                     __pbssBANK3:
  2836  01A0                     _I2C1_Status:
  2837  01A0                     	ds	29
  2838  01BD                     _time_move:
  2839  01BD                     	ds	4
  2840  01C1                     _angle_move:
  2841  01C1                     	ds	4
  2842  01C5                     _timeACircle:
  2843  01C5                     	ds	4
  2844  01C9                     _omegaALine:
  2845  01C9                     	ds	4
  2846  01CD                     _velALine:
  2847  01CD                     	ds	4
  2848  01D1                     _omegaManual:
  2849  01D1                     	ds	4
  2850  01D5                     _velManual_t:
  2851  01D5                     	ds	4
  2852  01D9                     _DistanceValueTop:
  2853  01D9                     	ds	4
  2854  01DD                     _delay_frame:
  2855  01DD                     	ds	2
  2856  01DF                     _angle_ACircle:
  2857  01DF                     	ds	2
  2858  01E1                     _length_ALine:
  2859  01E1                     	ds	2
  2860  01E3                     _cntRight:
  2861  01E3                     	ds	2
  2862  01E5                     _cntLeft:
  2863  01E5                     	ds	2
  2864  01E7                     _valRadius_TL:
  2865  01E7                     	ds	4
  2866  01EB                     _valRadius_AC:
  2867  01EB                     	ds	4
  2868                           
  2869                           	psect	bssBANK4
  2870  0220                     __pbssBANK4:
  2871  0220                     _I2C2_Status:
  2872  0220                     	ds	29
  2873  023D                     _distance_raw_one:
  2874  023D                     	ds	8
  2875  0245                     _distance_raw:
  2876  0245                     	ds	8
  2877  024D                     _omega_sys:
  2878  024D                     	ds	4
  2879  0251                     _velocity_sys:
  2880  0251                     	ds	4
  2881  0255                     _omega_TL:
  2882  0255                     	ds	4
  2883  0259                     _valTime_TL:
  2884  0259                     	ds	4
  2885  025D                     _valVLength_TL:
  2886  025D                     	ds	4
  2887  0261                     _omegaACircle:
  2888  0261                     	ds	4
  2889  0265                     _errorOmega_pre:
  2890  0265                     	ds	4
  2891  0269                     _DistanceValueBottom:
  2892  0269                     	ds	4
  2893                           
  2894                           	psect	bssBANK5
  2895  02A0                     __pbssBANK5:
  2896  02A0                     _buffer_sys:
  2897  02A0                     	ds	50
  2898                           
  2899                           	psect	dataBANK5
  2900  02DE                     __pdataBANK5:
  2901  02DE                     _velocity_TL:
  2902  02DE                     	ds	4
  2903                           
  2904                           	psect	inittext
  2905  07FA                     init_ram:
  2906  07FA  00FE               	movwf	btemp
  2907  07FB                     initloop:
  2908  07FB  0012               	moviw fsr0++
  2909  07FC  001E               	movwi fsr1++
  2910  07FD  0BFE               	decfsz	btemp,f
  2911  07FE  2FFB               	goto	initloop
  2912  07FF  3400               	retlw	0
  2913                           
  2914                           	psect	clrtext
  2915  1001                     clear_ram0:	
  2916                           ;	Called with FSR0 containing the base address, and
  2917                           ;	WREG with the size to clear
  2918                           
  2919  1001  0064               	clrwdt	;clear the watchdog before getting into this loop
  2920  1002                     clrloop0:
  2921  1002  0180               	clrf	0	;clear RAM location pointed to by FSR
  2922  1003  3101               	addfsr 0,1
  2923  1004  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2924  1005  2802               	goto	clrloop0	;have we reached the end yet?
  2925  1006  3400               	retlw	0	;all done for this memory range, return
  2926                           
  2927                           	psect	cstackBANK6
  2928  0320                     __pcstackBANK6:
  2929  0320                     AutoCircleHandle@bufferACircle_t:
  2930  0320                     TimeLapseHandle@bufferCamera_t:	
  2931                           ; 20 bytes @ 0x0
  2932                           
  2933                           
  2934                           ; 20 bytes @ 0x0
  2935  0320                     	ds	20
  2936  0334                     _AutoCircleHandle$3252:
  2937  0334                     _TimeLapseHandle$3256:	
  2938                           ; 4 bytes @ 0x14
  2939                           
  2940                           
  2941                           ; 4 bytes @ 0x14
  2942  0334                     	ds	4
  2943  0338                     _AutoCircleHandle$3253:
  2944  0338                     _TimeLapseHandle$3255:	
  2945                           ; 4 bytes @ 0x18
  2946                           
  2947                           
  2948                           ; 4 bytes @ 0x18
  2949  0338                     	ds	4
  2950  033C                     AutoCircleHandle@j:
  2951  033C                     TimeLapseHandle@j:	
  2952                           ; 2 bytes @ 0x1C
  2953                           
  2954                           
  2955                           ; 2 bytes @ 0x1C
  2956  033C                     	ds	2
  2957  033E                     AutoCircleHandle@j_2319:
  2958  033E                     TimeLapseHandle@j_2335:	
  2959                           ; 2 bytes @ 0x1E
  2960                           
  2961                           
  2962                           ; 2 bytes @ 0x1E
  2963  033E                     	ds	2
  2964  0340                     AutoCircleHandle@j_2320:
  2965  0340                     TimeLapseHandle@j_2336:	
  2966                           ; 2 bytes @ 0x20
  2967                           
  2968                           
  2969                           ; 2 bytes @ 0x20
  2970  0340                     	ds	2
  2971  0342                     AutoCircleHandle@j_2321:
  2972  0342                     TimeLapseHandle@j_2337:	
  2973                           ; 2 bytes @ 0x22
  2974                           
  2975                           
  2976                           ; 2 bytes @ 0x22
  2977  0342                     	ds	2
  2978  0344                     AutoCircleHandle@i:
  2979  0344                     TimeLapseHandle@i:	
  2980                           ; 2 bytes @ 0x24
  2981                           
  2982                           
  2983                           ; 2 bytes @ 0x24
  2984  0344                     	ds	2
  2985                           
  2986                           	psect	cstackBANK2
  2987  0142                     __pcstackBANK2:
  2988  0142                     ??___fltol:
  2989                           
  2990                           ; 1 bytes @ 0x0
  2991  0142                     	ds	5
  2992  0147                     ?_KE:
  2993  0147                     KE@Omega_body:	
  2994                           ; 1 bytes @ 0x5
  2995                           
  2996                           
  2997                           ; 4 bytes @ 0x5
  2998  0147                     	ds	4
  2999  014B                     KE@Velocity_body:
  3000                           
  3001                           ; 4 bytes @ 0x9
  3002  014B                     	ds	4
  3003  014F                     KE@OmegaLeft:
  3004                           
  3005                           ; 4 bytes @ 0xD
  3006  014F                     	ds	4
  3007  0153                     KE@OmegaRight:
  3008                           
  3009                           ; 4 bytes @ 0x11
  3010  0153                     	ds	4
  3011  0157                     _AutoLineControl$3254:
  3012                           
  3013                           ; 4 bytes @ 0x15
  3014  0157                     	ds	4
  3015  015B                     ??_main:
  3016                           
  3017                           ; 1 bytes @ 0x19
  3018  015B                     	ds	2
  3019                           
  3020                           	psect	cstackBANK1
  3021  00A0                     __pcstackBANK1:
  3022  00A0                     ?___fleq:
  3023  00A0                     ?___flmul:	
  3024                           ; 1 bit 
  3025                           
  3026  00A0                     ___fleq@ff1:	
  3027                           ; 4 bytes @ 0x0
  3028                           
  3029  00A0                     ___flmul@b:	
  3030                           ; 4 bytes @ 0x0
  3031                           
  3032  00A0                     ManualHandle@bufferManual_t:	
  3033                           ; 4 bytes @ 0x0
  3034                           
  3035  00A0                     AutoLineHandle@bufferALine_t:	
  3036                           ; 20 bytes @ 0x0
  3037                           
  3038                           
  3039                           ; 20 bytes @ 0x0
  3040  00A0                     	ds	4
  3041  00A4                     ___fleq@ff2:
  3042  00A4                     ___flmul@a:	
  3043                           ; 4 bytes @ 0x4
  3044                           
  3045                           
  3046                           ; 4 bytes @ 0x4
  3047  00A4                     	ds	4
  3048  00A8                     ??___fleq:
  3049  00A8                     ??___flmul:	
  3050                           ; 1 bytes @ 0x8
  3051                           
  3052                           
  3053                           ; 1 bytes @ 0x8
  3054  00A8                     	ds	5
  3055  00AD                     ___flmul@sign:
  3056                           
  3057                           ; 1 bytes @ 0xD
  3058  00AD                     	ds	1
  3059  00AE                     ___flmul@aexp:
  3060                           
  3061                           ; 1 bytes @ 0xE
  3062  00AE                     	ds	1
  3063  00AF                     ___flmul@grs:
  3064                           
  3065                           ; 4 bytes @ 0xF
  3066  00AF                     	ds	4
  3067  00B3                     ___flmul@bexp:
  3068                           
  3069                           ; 1 bytes @ 0x13
  3070  00B3                     	ds	1
  3071  00B4                     ManualHandle@j:
  3072  00B4                     AutoLineHandle@j:	
  3073                           ; 2 bytes @ 0x14
  3074                           
  3075  00B4                     ___flmul@prod:	
  3076                           ; 2 bytes @ 0x14
  3077                           
  3078                           
  3079                           ; 4 bytes @ 0x14
  3080  00B4                     	ds	2
  3081  00B6                     ManualHandle@j_2313:
  3082  00B6                     AutoLineHandle@j_2326:	
  3083                           ; 2 bytes @ 0x16
  3084                           
  3085                           
  3086                           ; 2 bytes @ 0x16
  3087  00B6                     	ds	2
  3088  00B8                     ManualHandle@i:
  3089  00B8                     AutoLineHandle@j_2327:	
  3090                           ; 2 bytes @ 0x18
  3091                           
  3092  00B8                     ___flmul@temp:	
  3093                           ; 2 bytes @ 0x18
  3094                           
  3095                           
  3096                           ; 2 bytes @ 0x18
  3097  00B8                     	ds	2
  3098  00BA                     ?___fldiv:
  3099  00BA                     AutoLineHandle@j_2328:	
  3100                           ; 4 bytes @ 0x1A
  3101                           
  3102  00BA                     ___fldiv@a:	
  3103                           ; 2 bytes @ 0x1A
  3104                           
  3105                           
  3106                           ; 4 bytes @ 0x1A
  3107  00BA                     	ds	2
  3108  00BC                     AutoLineHandle@i:
  3109                           
  3110                           ; 2 bytes @ 0x1C
  3111  00BC                     	ds	2
  3112  00BE                     ___fldiv@b:
  3113                           
  3114                           ; 4 bytes @ 0x1E
  3115  00BE                     	ds	4
  3116  00C2                     ??___fldiv:
  3117                           
  3118                           ; 1 bytes @ 0x22
  3119  00C2                     	ds	5
  3120  00C7                     ___fldiv@rem:
  3121                           
  3122                           ; 4 bytes @ 0x27
  3123  00C7                     	ds	4
  3124  00CB                     ___fldiv@sign:
  3125                           
  3126                           ; 1 bytes @ 0x2B
  3127  00CB                     	ds	1
  3128  00CC                     ___fldiv@new_exp:
  3129                           
  3130                           ; 2 bytes @ 0x2C
  3131  00CC                     	ds	2
  3132  00CE                     ___fldiv@grs:
  3133                           
  3134                           ; 4 bytes @ 0x2E
  3135  00CE                     	ds	4
  3136  00D2                     ___fldiv@bexp:
  3137                           
  3138                           ; 1 bytes @ 0x32
  3139  00D2                     	ds	1
  3140  00D3                     ___fldiv@aexp:
  3141                           
  3142                           ; 1 bytes @ 0x33
  3143  00D3                     	ds	1
  3144  00D4                     ?___fladd:
  3145  00D4                     ___fladd@b:	
  3146                           ; 4 bytes @ 0x34
  3147                           
  3148                           
  3149                           ; 4 bytes @ 0x34
  3150  00D4                     	ds	4
  3151  00D8                     ___fladd@a:
  3152                           
  3153                           ; 4 bytes @ 0x38
  3154  00D8                     	ds	4
  3155  00DC                     ??___fladd:
  3156                           
  3157                           ; 1 bytes @ 0x3C
  3158  00DC                     	ds	8
  3159  00E4                     ___fladd@signs:
  3160                           
  3161                           ; 1 bytes @ 0x44
  3162  00E4                     	ds	1
  3163  00E5                     ___fladd@aexp:
  3164                           
  3165                           ; 1 bytes @ 0x45
  3166  00E5                     	ds	1
  3167  00E6                     ___fladd@bexp:
  3168                           
  3169                           ; 1 bytes @ 0x46
  3170  00E6                     	ds	1
  3171  00E7                     ___fladd@grs:
  3172                           
  3173                           ; 1 bytes @ 0x47
  3174  00E7                     	ds	1
  3175  00E8                     ?___fltol:
  3176  00E8                     ?___flsub:	
  3177                           ; 4 bytes @ 0x48
  3178                           
  3179  00E8                     ___fltol@f1:	
  3180                           ; 4 bytes @ 0x48
  3181                           
  3182  00E8                     ___flsub@a:	
  3183                           ; 4 bytes @ 0x48
  3184                           
  3185                           
  3186                           ; 4 bytes @ 0x48
  3187  00E8                     	ds	4
  3188  00EC                     ??_TimeLapseControl:
  3189  00EC                     ___flsub@b:	
  3190                           ; 1 bytes @ 0x4C
  3191                           
  3192                           
  3193                           ; 4 bytes @ 0x4C
  3194  00EC                     	ds	2
  3195  00EE                     TimeLapseControl@i:
  3196                           
  3197                           ; 2 bytes @ 0x4E
  3198  00EE                     	ds	2
  3199                           
  3200                           	psect	cstackCOMMON
  3201  0070                     __pcstackCOMMON:
  3202  0070                     ?_I2C1_Initialize:
  3203  0070                     ?_I2C2_Initialize:	
  3204                           ; 1 bytes @ 0x0
  3205                           
  3206  0070                     ?_OSCILLATOR_Initialize:	
  3207                           ; 1 bytes @ 0x0
  3208                           
  3209  0070                     ?_WDT_Initialize:	
  3210                           ; 1 bytes @ 0x0
  3211                           
  3212  0070                     ?_TMR1_Initialize:	
  3213                           ; 1 bytes @ 0x0
  3214                           
  3215  0070                     ?_EUSART1_Initialize:	
  3216                           ; 1 bytes @ 0x0
  3217                           
  3218  0070                     ?_EUSART2_Initialize:	
  3219                           ; 1 bytes @ 0x0
  3220                           
  3221  0070                     ?_TMR1_DefaultInterruptHandler:	
  3222                           ; 1 bytes @ 0x0
  3223                           
  3224  0070                     ??_TMR1_DefaultInterruptHandler:	
  3225                           ; 1 bytes @ 0x0
  3226                           
  3227  0070                     ?_TMR1_CallBack:	
  3228                           ; 1 bytes @ 0x0
  3229                           
  3230  0070                     ?_PIN_MANAGER_Initialize:	
  3231                           ; 1 bytes @ 0x0
  3232                           
  3233  0070                     ?_SYSTEM_Initialize:	
  3234                           ; 1 bytes @ 0x0
  3235                           
  3236  0070                     ?_TMR1_WriteTimer:	
  3237                           ; 1 bytes @ 0x0
  3238                           
  3239  0070                     ?_TMR1_ISR:	
  3240                           ; 1 bytes @ 0x0
  3241                           
  3242  0070                     ?_INTERRUPT_InterruptManager:	
  3243                           ; 1 bytes @ 0x0
  3244                           
  3245  0070                     ?_EUSART1_is_rx_ready:	
  3246                           ; 1 bytes @ 0x0
  3247                           
  3248  0070                     ?_EUSART1_Read:	
  3249                           ; 1 bytes @ 0x0
  3250                           
  3251  0070                     ?_EUSART1_Write:	
  3252                           ; 1 bytes @ 0x0
  3253                           
  3254  0070                     ?_EUSART2_Write:	
  3255                           ; 1 bytes @ 0x0
  3256                           
  3257  0070                     ?_T1_ROBOT_ISR:	
  3258                           ; 1 bytes @ 0x0
  3259                           
  3260  0070                     ?_SetUpModeHalf_step:	
  3261                           ; 1 bytes @ 0x0
  3262                           
  3263  0070                     ?_ManualHandle:	
  3264                           ; 1 bytes @ 0x0
  3265                           
  3266  0070                     ?_ManualControl:	
  3267                           ; 1 bytes @ 0x0
  3268                           
  3269  0070                     ?_AutoCircleHandle:	
  3270                           ; 1 bytes @ 0x0
  3271                           
  3272  0070                     ?_AutoLineHandle:	
  3273                           ; 1 bytes @ 0x0
  3274                           
  3275  0070                     ?_AutoLineControl:	
  3276                           ; 1 bytes @ 0x0
  3277                           
  3278  0070                     ?_TimeLapseHandle:	
  3279                           ; 1 bytes @ 0x0
  3280                           
  3281  0070                     ?_TimeLapseControl:	
  3282                           ; 1 bytes @ 0x0
  3283                           
  3284  0070                     ?_main:	
  3285                           ; 1 bytes @ 0x0
  3286                           
  3287  0070                     ?i1___xxtofl:	
  3288                           ; 1 bytes @ 0x0
  3289                           
  3290  0070                     TMR1_WriteTimer@timerVal:	
  3291                           ; 4 bytes @ 0x0
  3292                           
  3293  0070                     i1___xxtofl@val:	
  3294                           ; 2 bytes @ 0x0
  3295                           
  3296                           
  3297                           ; 4 bytes @ 0x0
  3298  0070                     	ds	2
  3299  0072                     ??_TMR1_WriteTimer:
  3300                           
  3301                           ; 1 bytes @ 0x2
  3302  0072                     	ds	2
  3303  0074                     ??i1___xxtofl:
  3304                           
  3305                           ; 1 bytes @ 0x4
  3306  0074                     	ds	4
  3307  0078                     i1___xxtofl@sign:
  3308                           
  3309                           ; 1 bytes @ 0x8
  3310  0078                     	ds	1
  3311  0079                     i1___xxtofl@exp:
  3312                           
  3313                           ; 1 bytes @ 0x9
  3314  0079                     	ds	1
  3315  007A                     i1___xxtofl@arg:
  3316                           
  3317                           ; 4 bytes @ 0xA
  3318  007A                     	ds	4
  3319  007E                     ??_TMR1_CallBack:
  3320  007E                     ??_TMR1_ISR:	
  3321                           ; 1 bytes @ 0xE
  3322                           
  3323  007E                     ??_INTERRUPT_InterruptManager:	
  3324                           ; 1 bytes @ 0xE
  3325                           
  3326                           
  3327                           	psect	cstackBANK0
  3328  0020                     __pcstackBANK0:	
  3329                           ; 1 bytes @ 0xE
  3330                           
  3331  0020                     ?i1___flge:
  3332  0020                     i1___flge@ff1:	
  3333                           ; 1 bit 
  3334                           
  3335                           
  3336                           ; 4 bytes @ 0x0
  3337  0020                     	ds	4
  3338  0024                     i1___flge@ff2:
  3339                           
  3340                           ; 4 bytes @ 0x4
  3341  0024                     	ds	4
  3342  0028                     ??i1___flge:
  3343                           
  3344                           ; 1 bytes @ 0x8
  3345  0028                     	ds	4
  3346  002C                     ??_T1_ROBOT_ISR:
  3347                           
  3348                           ; 1 bytes @ 0xC
  3349  002C                     	ds	2
  3350  002E                     ?___flge:
  3351  002E                     ??_I2C1_Initialize:	
  3352                           ; 1 bit 
  3353                           
  3354  002E                     ??_I2C2_Initialize:	
  3355                           ; 1 bytes @ 0xE
  3356                           
  3357  002E                     ??_OSCILLATOR_Initialize:	
  3358                           ; 1 bytes @ 0xE
  3359                           
  3360  002E                     ??_WDT_Initialize:	
  3361                           ; 1 bytes @ 0xE
  3362                           
  3363  002E                     ?_TMR1_SetInterruptHandler:	
  3364                           ; 1 bytes @ 0xE
  3365                           
  3366  002E                     ?_EUSART1_SetFramingErrorHandler:	
  3367                           ; 1 bytes @ 0xE
  3368                           
  3369  002E                     ?_EUSART1_SetOverrunErrorHandler:	
  3370                           ; 1 bytes @ 0xE
  3371                           
  3372  002E                     ?_EUSART1_SetErrorHandler:	
  3373                           ; 1 bytes @ 0xE
  3374                           
  3375  002E                     ?_EUSART2_SetFramingErrorHandler:	
  3376                           ; 1 bytes @ 0xE
  3377                           
  3378  002E                     ?_EUSART2_SetOverrunErrorHandler:	
  3379                           ; 1 bytes @ 0xE
  3380                           
  3381  002E                     ?_EUSART2_SetErrorHandler:	
  3382                           ; 1 bytes @ 0xE
  3383                           
  3384  002E                     ??_PIN_MANAGER_Initialize:	
  3385                           ; 1 bytes @ 0xE
  3386                           
  3387  002E                     ??_EUSART1_is_rx_ready:	
  3388                           ; 1 bytes @ 0xE
  3389                           
  3390  002E                     ??_EUSART1_Read:	
  3391                           ; 1 bytes @ 0xE
  3392                           
  3393  002E                     ??_EUSART1_Write:	
  3394                           ; 1 bytes @ 0xE
  3395                           
  3396  002E                     ??_EUSART2_Write:	
  3397                           ; 1 bytes @ 0xE
  3398                           
  3399  002E                     ??_SetUpModeHalf_step:	
  3400                           ; 1 bytes @ 0xE
  3401                           
  3402  002E                     ?_strlen:	
  3403                           ; 1 bytes @ 0xE
  3404                           
  3405  002E                     ?__Umul8_16:	
  3406                           ; 2 bytes @ 0xE
  3407                           
  3408  002E                     ?_isspace:	
  3409                           ; 2 bytes @ 0xE
  3410                           
  3411  002E                     ?_isdigit:	
  3412                           ; 2 bytes @ 0xE
  3413                           
  3414  002E                     ?___wmul:	
  3415                           ; 2 bytes @ 0xE
  3416                           
  3417  002E                     ?___flneg:	
  3418                           ; 2 bytes @ 0xE
  3419                           
  3420  002E                     EUSART1_Write@txData:	
  3421                           ; 4 bytes @ 0xE
  3422                           
  3423  002E                     EUSART2_Write@txData:	
  3424                           ; 1 bytes @ 0xE
  3425                           
  3426  002E                     __Umul8_16@multiplicand:	
  3427                           ; 1 bytes @ 0xE
  3428                           
  3429  002E                     TMR1_SetInterruptHandler@InterruptHandler:	
  3430                           ; 1 bytes @ 0xE
  3431                           
  3432  002E                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  3433                           ; 2 bytes @ 0xE
  3434                           
  3435  002E                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  3436                           ; 2 bytes @ 0xE
  3437                           
  3438  002E                     EUSART1_SetErrorHandler@interruptHandler:	
  3439                           ; 2 bytes @ 0xE
  3440                           
  3441  002E                     EUSART2_SetFramingErrorHandler@interruptHandler:	
  3442                           ; 2 bytes @ 0xE
  3443                           
  3444  002E                     EUSART2_SetOverrunErrorHandler@interruptHandler:	
  3445                           ; 2 bytes @ 0xE
  3446                           
  3447  002E                     EUSART2_SetErrorHandler@interruptHandler:	
  3448                           ; 2 bytes @ 0xE
  3449                           
  3450  002E                     ___wmul@multiplier:	
  3451                           ; 2 bytes @ 0xE
  3452                           
  3453  002E                     isdigit@c:	
  3454                           ; 2 bytes @ 0xE
  3455                           
  3456  002E                     isspace@c:	
  3457                           ; 2 bytes @ 0xE
  3458                           
  3459  002E                     strlen@s:	
  3460                           ; 2 bytes @ 0xE
  3461                           
  3462  002E                     ___flge@ff1:	
  3463                           ; 2 bytes @ 0xE
  3464                           
  3465  002E                     ___flneg@f1:	
  3466                           ; 4 bytes @ 0xE
  3467                           
  3468                           
  3469                           ; 4 bytes @ 0xE
  3470  002E                     	ds	2
  3471  0030                     ??_TMR1_Initialize:
  3472  0030                     ??_EUSART1_Initialize:	
  3473                           ; 1 bytes @ 0x10
  3474                           
  3475  0030                     ??_EUSART2_Initialize:	
  3476                           ; 1 bytes @ 0x10
  3477                           
  3478  0030                     ??_TMR1_SetInterruptHandler:	
  3479                           ; 1 bytes @ 0x10
  3480                           
  3481  0030                     ??_EUSART1_SetFramingErrorHandler:	
  3482                           ; 1 bytes @ 0x10
  3483                           
  3484  0030                     ??_EUSART1_SetOverrunErrorHandler:	
  3485                           ; 1 bytes @ 0x10
  3486                           
  3487  0030                     ??_EUSART1_SetErrorHandler:	
  3488                           ; 1 bytes @ 0x10
  3489                           
  3490  0030                     ??_EUSART2_SetFramingErrorHandler:	
  3491                           ; 1 bytes @ 0x10
  3492                           
  3493  0030                     ??_EUSART2_SetOverrunErrorHandler:	
  3494                           ; 1 bytes @ 0x10
  3495                           
  3496  0030                     ??_EUSART2_SetErrorHandler:	
  3497                           ; 1 bytes @ 0x10
  3498                           
  3499  0030                     ??_strlen:	
  3500                           ; 1 bytes @ 0x10
  3501                           
  3502  0030                     ??__Umul8_16:	
  3503                           ; 1 bytes @ 0x10
  3504                           
  3505  0030                     ??_isspace:	
  3506                           ; 1 bytes @ 0x10
  3507                           
  3508  0030                     ??_isdigit:	
  3509                           ; 1 bytes @ 0x10
  3510                           
  3511  0030                     ??_SYSTEM_Initialize:	
  3512                           ; 1 bytes @ 0x10
  3513                           
  3514  0030                     ___wmul@multiplicand:	
  3515                           ; 1 bytes @ 0x10
  3516                           
  3517  0030                     strlen@a:	
  3518                           ; 2 bytes @ 0x10
  3519                           
  3520                           
  3521                           ; 2 bytes @ 0x10
  3522  0030                     	ds	2
  3523  0032                     ??___wmul:
  3524  0032                     ??___flneg:	
  3525                           ; 1 bytes @ 0x12
  3526                           
  3527  0032                     _isspace$2844:	
  3528                           ; 1 bytes @ 0x12
  3529                           
  3530  0032                     ___wmul@product:	
  3531                           ; 1 bytes @ 0x12
  3532                           
  3533  0032                     __Umul8_16@product:	
  3534                           ; 2 bytes @ 0x12
  3535                           
  3536  0032                     ___flge@ff2:	
  3537                           ; 2 bytes @ 0x12
  3538                           
  3539                           
  3540                           ; 4 bytes @ 0x12
  3541  0032                     	ds	2
  3542  0034                     ?_atoi:
  3543  0034                     __Umul8_16@word_mpld:	
  3544                           ; 2 bytes @ 0x14
  3545                           
  3546  0034                     atoi@s:	
  3547                           ; 2 bytes @ 0x14
  3548                           
  3549                           
  3550                           ; 2 bytes @ 0x14
  3551  0034                     	ds	2
  3552  0036                     ??_atoi:
  3553  0036                     ??___flge:	
  3554                           ; 1 bytes @ 0x16
  3555                           
  3556  0036                     __Umul8_16@multiplier:	
  3557                           ; 1 bytes @ 0x16
  3558                           
  3559                           
  3560                           ; 1 bytes @ 0x16
  3561  0036                     	ds	4
  3562  003A                     atoi@neg:
  3563                           
  3564                           ; 2 bytes @ 0x1A
  3565  003A                     	ds	2
  3566  003C                     _atoi$2826:
  3567                           
  3568                           ; 2 bytes @ 0x1C
  3569  003C                     	ds	2
  3570  003E                     _atoi$2828:
  3571                           
  3572                           ; 2 bytes @ 0x1E
  3573  003E                     	ds	2
  3574  0040                     _atoi$2827:
  3575                           
  3576                           ; 1 bytes @ 0x20
  3577  0040                     	ds	1
  3578  0041                     atoi@n:
  3579                           
  3580                           ; 2 bytes @ 0x21
  3581  0041                     	ds	2
  3582  0043                     ?___xxtofl:
  3583  0043                     ___xxtofl@val:	
  3584                           ; 4 bytes @ 0x23
  3585                           
  3586                           
  3587                           ; 4 bytes @ 0x23
  3588  0043                     	ds	4
  3589  0047                     ??___xxtofl:
  3590                           
  3591                           ; 1 bytes @ 0x27
  3592  0047                     	ds	4
  3593  004B                     ___xxtofl@sign:
  3594                           
  3595                           ; 1 bytes @ 0x2B
  3596  004B                     	ds	1
  3597  004C                     ___xxtofl@exp:
  3598                           
  3599                           ; 1 bytes @ 0x2C
  3600  004C                     	ds	1
  3601  004D                     ___xxtofl@arg:
  3602                           
  3603                           ; 4 bytes @ 0x2D
  3604  004D                     	ds	4
  3605  0051                     ??_ManualHandle:
  3606  0051                     ??_ManualControl:	
  3607                           ; 1 bytes @ 0x31
  3608                           
  3609  0051                     ??_AutoLineHandle:	
  3610                           ; 1 bytes @ 0x31
  3611                           
  3612  0051                     ??___flsub:	
  3613                           ; 1 bytes @ 0x31
  3614                           
  3615  0051                     ___fltol@sign1:	
  3616                           ; 1 bytes @ 0x31
  3617                           
  3618                           
  3619                           ; 1 bytes @ 0x31
  3620  0051                     	ds	1
  3621  0052                     ___fltol@exp1:
  3622                           
  3623                           ; 1 bytes @ 0x32
  3624  0052                     	ds	1
  3625  0053                     ??_KE:
  3626  0053                     ??_AutoCircleHandle:	
  3627                           ; 1 bytes @ 0x33
  3628                           
  3629  0053                     ??_AutoLineControl:	
  3630                           ; 1 bytes @ 0x33
  3631                           
  3632  0053                     ??_TimeLapseHandle:	
  3633                           ; 1 bytes @ 0x33
  3634                           
  3635                           
  3636                           ; 1 bytes @ 0x33
  3637  0053                     	ds	1
  3638                           
  3639                           	psect	maintext
  3640  1D38                     __pmaintext:	
  3641 ;;
  3642 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3643 ;;
  3644 ;; *************** function _main *****************
  3645 ;; Defined at:
  3646 ;;		line 520 in file "main.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;		None
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      void 
  3653 ;; Registers used:
  3654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3655 ;; Tracked objects:
  3656 ;;		On entry : B1F/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3662 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3663 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3664 ;;Total ram usage:        2 bytes
  3665 ;; Hardware stack levels required when called: 9
  3666 ;; This function calls:
  3667 ;;		_AutoCircleHandle
  3668 ;;		_AutoLineControl
  3669 ;;		_AutoLineHandle
  3670 ;;		_EUSART1_Read
  3671 ;;		_EUSART1_is_rx_ready
  3672 ;;		_EUSART2_Write
  3673 ;;		_KE
  3674 ;;		_ManualControl
  3675 ;;		_ManualHandle
  3676 ;;		_SYSTEM_Initialize
  3677 ;;		_SetUpModeHalf_step
  3678 ;;		_TMR1_SetInterruptHandler
  3679 ;;		_TimeLapseControl
  3680 ;;		_TimeLapseHandle
  3681 ;; This function is called by:
  3682 ;;		Startup code after reset
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           
  3687                           ;psect for function _main
  3688  1D38                     _main:
  3689  1D38                     l9053:	
  3690                           ;incstack = 0
  3691                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3692                           
  3693                           
  3694                           ;main.c: 523:     SYSTEM_Initialize();
  3695  1D38  319A  2275  319D   	fcall	_SYSTEM_Initialize
  3696                           
  3697                           ;main.c: 524:     TMR1_SetInterruptHandler(T1_ROBOT_ISR);
  3698  1D3B  301C               	movlw	low _T1_ROBOT_ISR
  3699  1D3C  0020               	movlb	0	; select bank0
  3700  1D3D  00AE               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  3701  1D3E  301F               	movlw	high _T1_ROBOT_ISR
  3702  1D3F  00AF               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  3703  1D40  3199  21E4  319D   	fcall	_TMR1_SetInterruptHandler
  3704  1D43                     l9055:
  3705                           
  3706                           ;main.c: 531:       (INTCONbits.GIE = 1);
  3707  1D43  178B               	bsf	11,7	;volatile
  3708  1D44                     l9057:
  3709                           
  3710                           ;main.c: 534:       (INTCONbits.PEIE = 1);
  3711  1D44  170B               	bsf	11,6	;volatile
  3712  1D45                     l9059:
  3713                           
  3714                           ;main.c: 541:     _delay((unsigned long)((300)*(16000000/4000.0)));
  3715  1D45  3007               	movlw	7
  3716  1D46  0022               	movlb	2	; select bank2
  3717  1D47  00DC               	movwf	(??_main^(0+256)+1)
  3718  1D48  3017               	movlw	23
  3719  1D49  00DB               	movwf	??_main^(0+256)
  3720  1D4A  306A               	movlw	106
  3721  1D4B                     u9597:
  3722  1D4B  0B89               	decfsz	9,f
  3723  1D4C  2D4B               	goto	u9597
  3724  1D4D  0BDB               	decfsz	??_main^(0+256),f
  3725  1D4E  2D4B               	goto	u9597
  3726  1D4F  0BDC               	decfsz	(??_main^(0+256)+1),f
  3727  1D50  2D4B               	goto	u9597
  3728  1D51  0000               	nop
  3729  1D52                     l9061:
  3730                           
  3731                           ;main.c: 542:     LATCbits.LATC2 = 1;
  3732  1D52  0022               	movlb	2	; select bank2
  3733  1D53  150E               	bsf	14,2	;volatile
  3734                           
  3735                           ;main.c: 543:     SetUpModeHalf_step();
  3736  1D54  3199  21A8  319D   	fcall	_SetUpModeHalf_step
  3737  1D57                     l9063:
  3738                           
  3739                           ;main.c: 545:         if(EUSART1_is_rx_ready()){
  3740  1D57  3199  21A3  319D   	fcall	_EUSART1_is_rx_ready
  3741  1D5A  3A00               	xorlw	0
  3742  1D5B  1903               	skipnz
  3743  1D5C  2D5E               	goto	u9571
  3744  1D5D  2D5F               	goto	u9570
  3745  1D5E                     u9571:
  3746  1D5E  2D7A               	goto	l9069
  3747  1D5F                     u9570:
  3748  1D5F                     l9065:
  3749                           
  3750                           ;main.c: 546:            buffer_sys[cnt_sys] = EUSART1_Read();
  3751  1D5F  319A  223C  319D   	fcall	_EUSART1_Read
  3752  1D62  0022               	movlb	2	; select bank2
  3753  1D63  00DB               	movwf	??_main^(0+256)
  3754  1D64  0834               	movf	_cnt_sys^(0+256),w
  3755  1D65  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  3756  1D66  0086               	movwf	6
  3757  1D67  3002               	movlw	2	; select bank5/6
  3758  1D68  0087               	movwf	7
  3759  1D69  085B               	movf	??_main^(0+256),w
  3760  1D6A  0081               	movwf	1
  3761                           
  3762                           ;main.c: 547:            EUSART2_Write(buffer_sys[cnt_sys]);
  3763  1D6B  0834               	movf	_cnt_sys^(0+256),w
  3764  1D6C  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  3765  1D6D  0086               	movwf	6
  3766  1D6E  3002               	movlw	2	; select bank5/6
  3767  1D6F  0087               	movwf	7
  3768  1D70  0801               	movf	1,w
  3769  1D71  3199  21ED  319D   	fcall	_EUSART2_Write
  3770  1D74                     l9067:
  3771                           
  3772                           ;main.c: 548:            cnt_sys = cnt_sys + 1;
  3773  1D74  0022               	movlb	2	; select bank2
  3774  1D75  0834               	movf	_cnt_sys^(0+256),w
  3775  1D76  3E01               	addlw	1
  3776  1D77  00DB               	movwf	??_main^(0+256)
  3777  1D78  085B               	movf	??_main^(0+256),w
  3778  1D79  00B4               	movwf	_cnt_sys^(0+256)
  3779  1D7A                     l9069:
  3780                           
  3781                           ;main.c: 550:         if (buffer_sys[cnt_sys - 1] == '#') {
  3782  1D7A  0022               	movlb	2	; select bank2
  3783  1D7B  0834               	movf	_cnt_sys^(0+256),w
  3784  1D7C  3E9F               	addlw	(low ((_buffer_sys| (0+512)+255)))& (0+255)
  3785  1D7D  0086               	movwf	6
  3786  1D7E  3002               	movlw	2	; select bank5/6
  3787  1D7F  0087               	movwf	7
  3788  1D80  3023               	movlw	35
  3789  1D81  0601               	xorwf	1,w
  3790  1D82  1D03               	btfss	3,2
  3791  1D83  2D85               	goto	u9581
  3792  1D84  2D86               	goto	u9580
  3793  1D85                     u9581:
  3794  1D85  2D94               	goto	l9075
  3795  1D86                     u9580:
  3796  1D86                     l9071:
  3797                           
  3798                           ;main.c: 551:             ManualHandle();
  3799  1D86  3188  203A  319D   	fcall	_ManualHandle
  3800                           
  3801                           ;main.c: 552:             AutoCircleHandle();
  3802  1D89  3183  23ED  319D   	fcall	_AutoCircleHandle
  3803                           
  3804                           ;main.c: 553:             AutoLineHandle();
  3805  1D8C  3190  20DA  319D   	fcall	_AutoLineHandle
  3806                           
  3807                           ;main.c: 554:             TimeLapseHandle();
  3808  1D8F  3180  205F  319D   	fcall	_TimeLapseHandle
  3809  1D92                     l9073:
  3810                           
  3811                           ;main.c: 555:             cnt_sys = 0;
  3812  1D92  0022               	movlb	2	; select bank2
  3813  1D93  01B4               	clrf	_cnt_sys^(0+256)
  3814  1D94                     l9075:
  3815                           
  3816                           ;main.c: 557:         ManualControl();
  3817  1D94  3194  243C  319D   	fcall	_ManualControl
  3818  1D97                     l9077:
  3819                           
  3820                           ;main.c: 558:         AutoLineControl();
  3821  1D97  3189  2135  319D   	fcall	_AutoLineControl
  3822  1D9A                     l9079:
  3823                           
  3824                           ;main.c: 559:         TimeLapseControl();
  3825  1D9A  3187  271F  319D   	fcall	_TimeLapseControl
  3826  1D9D                     l9081:
  3827                           
  3828                           ;main.c: 560:         KE(omega_sys, velocity_sys);
  3829  1D9D  0024               	movlb	4	; select bank4
  3830  1D9E  0850               	movf	(_omega_sys+3)^(0+512),w
  3831  1D9F  0022               	movlb	2	; select bank2
  3832  1DA0  00CA               	movwf	(KE@Omega_body+3)^(0+256)
  3833  1DA1  0024               	movlb	4	; select bank4
  3834  1DA2  084F               	movf	(_omega_sys+2)^(0+512),w
  3835  1DA3  0022               	movlb	2	; select bank2
  3836  1DA4  00C9               	movwf	(KE@Omega_body+2)^(0+256)
  3837  1DA5  0024               	movlb	4	; select bank4
  3838  1DA6  084E               	movf	(_omega_sys+1)^(0+512),w
  3839  1DA7  0022               	movlb	2	; select bank2
  3840  1DA8  00C8               	movwf	(KE@Omega_body+1)^(0+256)
  3841  1DA9  0024               	movlb	4	; select bank4
  3842  1DAA  084D               	movf	_omega_sys^(0+512),w
  3843  1DAB  0022               	movlb	2	; select bank2
  3844  1DAC  00C7               	movwf	KE@Omega_body^(0+256)
  3845  1DAD  0024               	movlb	4	; select bank4
  3846  1DAE  0854               	movf	(_velocity_sys+3)^(0+512),w
  3847  1DAF  0022               	movlb	2	; select bank2
  3848  1DB0  00CE               	movwf	(KE@Velocity_body+3)^(0+256)
  3849  1DB1  0024               	movlb	4	; select bank4
  3850  1DB2  0853               	movf	(_velocity_sys+2)^(0+512),w
  3851  1DB3  0022               	movlb	2	; select bank2
  3852  1DB4  00CD               	movwf	(KE@Velocity_body+2)^(0+256)
  3853  1DB5  0024               	movlb	4	; select bank4
  3854  1DB6  0852               	movf	(_velocity_sys+1)^(0+512),w
  3855  1DB7  0022               	movlb	2	; select bank2
  3856  1DB8  00CC               	movwf	(KE@Velocity_body+1)^(0+256)
  3857  1DB9  0024               	movlb	4	; select bank4
  3858  1DBA  0851               	movf	_velocity_sys^(0+512),w
  3859  1DBB  0022               	movlb	2	; select bank2
  3860  1DBC  00CB               	movwf	KE@Velocity_body^(0+256)
  3861  1DBD  3196  2608  319D   	fcall	_KE
  3862  1DC0  2D57               	goto	l9063
  3863  1DC1  3180  2819         	ljmp	start
  3864  1DC3                     __end_of_main:
  3865                           
  3866                           	psect	text1
  3867  005F                     __ptext1:	
  3868 ;; *************** function _TimeLapseHandle *****************
  3869 ;; Defined at:
  3870 ;;		line 417 in file "main.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;		None
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  j               2   34[BANK6 ] int 
  3875 ;;  j               2   32[BANK6 ] int 
  3876 ;;  j               2   30[BANK6 ] int 
  3877 ;;  j               2   28[BANK6 ] int 
  3878 ;;  i               2   36[BANK6 ] int 
  3879 ;;  bufferCamera   20    0[BANK6 ] unsigned char [20]
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      void 
  3882 ;; Registers used:
  3883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3890 ;;      Locals:         0       0       0       0       0       0       0      38       0       0       0       0       
      +0       0
  3891 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3892 ;;      Totals:         0       1       0       0       0       0       0      38       0       0       0       0       
      +0       0
  3893 ;;Total ram usage:       39 bytes
  3894 ;; Hardware stack levels used: 1
  3895 ;; Hardware stack levels required when called: 7
  3896 ;; This function calls:
  3897 ;;		___fldiv
  3898 ;;		___flmul
  3899 ;;		___fltol
  3900 ;;		___xxtofl
  3901 ;;		_atoi
  3902 ;;		_strlen
  3903 ;; This function is called by:
  3904 ;;		_main
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           
  3909                           ;psect for function _TimeLapseHandle
  3910  005F                     _TimeLapseHandle:
  3911  005F                     l8923:	
  3912                           ;incstack = 0
  3913                           ; Regs used in _TimeLapseHandle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3914                           
  3915                           
  3916                           ;main.c: 419:     char bufferCamera_t[20];;main.c: 420:     if((buffer_sys[0] == 'C') ||
      +                           (flagCamera == 1)){
  3917  005F  3043               	movlw	67
  3918  0060  0025               	movlb	5	; select bank5
  3919  0061  0620               	xorwf	_buffer_sys^(0+640),w
  3920  0062  1903               	btfsc	3,2
  3921  0063  2865               	goto	u9321
  3922  0064  2866               	goto	u9320
  3923  0065                     u9321:
  3924  0065  286C               	goto	l1603
  3925  0066                     u9320:
  3926  0066                     l8925:
  3927  0066  0022               	movlb	2	; select bank2
  3928  0067  0335               	decf	_flagCamera^(0+256),w
  3929  0068  1D03               	btfss	3,2
  3930  0069  286B               	goto	u9331
  3931  006A  286C               	goto	u9330
  3932  006B                     u9331:
  3933  006B  2A3B               	goto	l9003
  3934  006C                     u9330:
  3935  006C                     l1603:
  3936                           
  3937                           ;main.c: 421:         flagCamera = 1;
  3938  006C  0022               	movlb	2	; select bank2
  3939  006D  01B5               	clrf	_flagCamera^(0+256)
  3940  006E  0AB5               	incf	_flagCamera^(0+256),f
  3941  006F                     l8927:
  3942                           
  3943                           ;main.c: 422:         for(int i = 0; i < strlen(buffer_sys); i++){
  3944  006F  0026               	movlb	6	; select bank6
  3945  0070  01C4               	clrf	TimeLapseHandle@i^(0+768)
  3946  0071  01C5               	clrf	(TimeLapseHandle@i+1)^(0+768)
  3947  0072  2A25               	goto	l9001
  3948  0073                     l8929:
  3949                           
  3950                           ;main.c: 423:             if(buffer_sys[0] == 'C'){
  3951  0073  3043               	movlw	67
  3952  0074  0025               	movlb	5	; select bank5
  3953  0075  0620               	xorwf	_buffer_sys^(0+640),w
  3954  0076  1D03               	btfss	3,2
  3955  0077  2879               	goto	u9341
  3956  0078  287A               	goto	u9340
  3957  0079                     u9341:
  3958  0079  2880               	goto	l8933
  3959  007A                     u9340:
  3960  007A                     l8931:
  3961                           
  3962                           ;main.c: 424:                 buffer_sys[0] = '0';
  3963  007A  3030               	movlw	48
  3964  007B  0020               	movlb	0	; select bank0
  3965  007C  00D3               	movwf	??_TimeLapseHandle
  3966  007D  0853               	movf	??_TimeLapseHandle,w
  3967  007E  0025               	movlb	5	; select bank5
  3968  007F  00A0               	movwf	_buffer_sys^(0+640)
  3969  0080                     l8933:
  3970                           
  3971                           ;main.c: 426:             if((buffer_sys[i] == 'r') || (buffer_sys[i] == 'l') || (buffer
      +                          _sys[i] == 't') || (buffer_sys[i] == '#')){
  3972  0080  0026               	movlb	6	; select bank6
  3973  0081  0844               	movf	TimeLapseHandle@i^(0+768),w
  3974  0082  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  3975  0083  0086               	movwf	6
  3976  0084  3002               	movlw	2	; select bank5/6
  3977  0085  0087               	movwf	7
  3978  0086  3072               	movlw	114
  3979  0087  0601               	xorwf	1,w
  3980  0088  1903               	btfsc	3,2
  3981  0089  288B               	goto	u9351
  3982  008A  288C               	goto	u9350
  3983  008B                     u9351:
  3984  008B  28AD               	goto	l8941
  3985  008C                     u9350:
  3986  008C                     l8935:
  3987  008C  0844               	movf	TimeLapseHandle@i^(0+768),w
  3988  008D  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  3989  008E  0086               	movwf	6
  3990  008F  3002               	movlw	2	; select bank5/6
  3991  0090  0087               	movwf	7
  3992  0091  306C               	movlw	108
  3993  0092  0601               	xorwf	1,w
  3994  0093  1903               	btfsc	3,2
  3995  0094  2896               	goto	u9361
  3996  0095  2897               	goto	u9360
  3997  0096                     u9361:
  3998  0096  28AD               	goto	l8941
  3999  0097                     u9360:
  4000  0097                     l8937:
  4001  0097  0844               	movf	TimeLapseHandle@i^(0+768),w
  4002  0098  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  4003  0099  0086               	movwf	6
  4004  009A  3002               	movlw	2	; select bank5/6
  4005  009B  0087               	movwf	7
  4006  009C  3074               	movlw	116
  4007  009D  0601               	xorwf	1,w
  4008  009E  1903               	btfsc	3,2
  4009  009F  28A1               	goto	u9371
  4010  00A0  28A2               	goto	u9370
  4011  00A1                     u9371:
  4012  00A1  28AD               	goto	l8941
  4013  00A2                     u9370:
  4014  00A2                     l8939:
  4015  00A2  0844               	movf	TimeLapseHandle@i^(0+768),w
  4016  00A3  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  4017  00A4  0086               	movwf	6
  4018  00A5  3002               	movlw	2	; select bank5/6
  4019  00A6  0087               	movwf	7
  4020  00A7  3023               	movlw	35
  4021  00A8  0601               	xorwf	1,w
  4022  00A9  1D03               	btfss	3,2
  4023  00AA  28AC               	goto	u9381
  4024  00AB  28AD               	goto	u9380
  4025  00AC                     u9381:
  4026  00AC  2A07               	goto	l8995
  4027  00AD                     u9380:
  4028  00AD                     l8941:
  4029                           
  4030                           ;main.c: 427:                 if((buffer_sys[i] == 'r')){
  4031  00AD  0844               	movf	TimeLapseHandle@i^(0+768),w
  4032  00AE  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  4033  00AF  0086               	movwf	6
  4034  00B0  3002               	movlw	2	; select bank5/6
  4035  00B1  0087               	movwf	7
  4036  00B2  3072               	movlw	114
  4037  00B3  0601               	xorwf	1,w
  4038  00B4  1D03               	btfss	3,2
  4039  00B5  28B7               	goto	u9391
  4040  00B6  28B8               	goto	u9390
  4041  00B7                     u9391:
  4042  00B7  290B               	goto	l8955
  4043  00B8                     u9390:
  4044  00B8                     l8943:
  4045                           
  4046                           ;main.c: 428:                     valRadius_TL = atoi(bufferCamera_t);
  4047  00B8  3020               	movlw	low TimeLapseHandle@bufferCamera_t
  4048  00B9  0020               	movlb	0	; select bank0
  4049  00BA  00B4               	movwf	atoi@s
  4050  00BB  3003               	movlw	high TimeLapseHandle@bufferCamera_t
  4051  00BC  00B5               	movwf	atoi@s+1
  4052  00BD  3190  202D  3180   	fcall	_atoi
  4053  00C0  0020               	movlb	0	; select bank0
  4054  00C1  0834               	movf	?_atoi,w
  4055  00C2  00C3               	movwf	___xxtofl@val
  4056  00C3  0835               	movf	?_atoi+1,w
  4057  00C4  00C4               	movwf	___xxtofl@val+1
  4058  00C5  0D89               	rlf	9,f
  4059  00C6  3B89               	subwfb	9,f
  4060  00C7  0989               	comf	9,f
  4061  00C8  00C5               	movwf	___xxtofl@val+2
  4062  00C9  00C6               	movwf	___xxtofl@val+3
  4063  00CA  3001               	movlw	1
  4064  00CB  319E  266F  3180   	fcall	___xxtofl
  4065  00CE  0020               	movlb	0	; select bank0
  4066  00CF  0846               	movf	?___xxtofl+3,w
  4067  00D0  0023               	movlb	3	; select bank3
  4068  00D1  00EA               	movwf	(_valRadius_TL+3)^(0+384)
  4069  00D2  0020               	movlb	0	; select bank0
  4070  00D3  0845               	movf	?___xxtofl+2,w
  4071  00D4  0023               	movlb	3	; select bank3
  4072  00D5  00E9               	movwf	(_valRadius_TL+2)^(0+384)
  4073  00D6  0020               	movlb	0	; select bank0
  4074  00D7  0844               	movf	?___xxtofl+1,w
  4075  00D8  0023               	movlb	3	; select bank3
  4076  00D9  00E8               	movwf	(_valRadius_TL+1)^(0+384)
  4077  00DA  0020               	movlb	0	; select bank0
  4078  00DB  0843               	movf	?___xxtofl,w
  4079  00DC  0023               	movlb	3	; select bank3
  4080  00DD  00E7               	movwf	_valRadius_TL^(0+384)
  4081  00DE                     l8945:
  4082                           
  4083                           ;main.c: 430:                     for(int j = 0; j < strlen(bufferCamera_t);j++){
  4084  00DE  0026               	movlb	6	; select bank6
  4085  00DF  01BC               	clrf	TimeLapseHandle@j^(0+768)
  4086  00E0  01BD               	clrf	(TimeLapseHandle@j+1)^(0+768)
  4087  00E1  28F3               	goto	l8951
  4088  00E2                     l8947:
  4089                           
  4090                           ;main.c: 431:                         bufferCamera_t[j] = ' ';
  4091  00E2  3020               	movlw	32
  4092  00E3  0020               	movlb	0	; select bank0
  4093  00E4  00D3               	movwf	??_TimeLapseHandle
  4094  00E5  0026               	movlb	6	; select bank6
  4095  00E6  083C               	movf	TimeLapseHandle@j^(0+768),w
  4096  00E7  3E20               	addlw	(low (TimeLapseHandle@bufferCamera_t| (0+768)))& (0+255)
  4097  00E8  0086               	movwf	6
  4098  00E9  3003               	movlw	3	; select bank6/7
  4099  00EA  0087               	movwf	7
  4100  00EB  0020               	movlb	0	; select bank0
  4101  00EC  0853               	movf	??_TimeLapseHandle,w
  4102  00ED  0081               	movwf	1
  4103  00EE                     l8949:
  4104                           
  4105                           ;main.c: 432:                     }
  4106  00EE  3001               	movlw	1
  4107  00EF  0026               	movlb	6	; select bank6
  4108  00F0  07BC               	addwf	TimeLapseHandle@j^(0+768),f
  4109  00F1  3000               	movlw	0
  4110  00F2  3DBD               	addwfc	(TimeLapseHandle@j+1)^(0+768),f
  4111  00F3                     l8951:
  4112  00F3  3020               	movlw	low TimeLapseHandle@bufferCamera_t
  4113  00F4  0020               	movlb	0	; select bank0
  4114  00F5  00AE               	movwf	strlen@s
  4115  00F6  3003               	movlw	high TimeLapseHandle@bufferCamera_t
  4116  00F7  00AF               	movwf	strlen@s+1
  4117  00F8  319A  228E  3180   	fcall	_strlen
  4118  00FB  0020               	movlb	0	; select bank0
  4119  00FC  082F               	movf	?_strlen+1,w
  4120  00FD  0026               	movlb	6	; select bank6
  4121  00FE  023D               	subwf	(TimeLapseHandle@j+1)^(0+768),w
  4122  00FF  1D03               	skipz
  4123  0100  2905               	goto	u9405
  4124  0101  0020               	movlb	0	; select bank0
  4125  0102  082E               	movf	?_strlen,w
  4126  0103  0026               	movlb	6	; select bank6
  4127  0104  023C               	subwf	TimeLapseHandle@j^(0+768),w
  4128  0105                     u9405:
  4129  0105  1C03               	skipc
  4130  0106  2908               	goto	u9401
  4131  0107  2909               	goto	u9400
  4132  0108                     u9401:
  4133  0108  28E2               	goto	l8947
  4134  0109                     u9400:
  4135  0109                     l8953:
  4136                           
  4137                           ;main.c: 433:                     cntCamera = 0;
  4138  0109  0022               	movlb	2	; select bank2
  4139  010A  01B6               	clrf	_cntCamera^(0+256)
  4140  010B                     l8955:
  4141                           
  4142                           ;main.c: 435:                 if(buffer_sys[i] == 'l'){
  4143  010B  0026               	movlb	6	; select bank6
  4144  010C  0844               	movf	TimeLapseHandle@i^(0+768),w
  4145  010D  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  4146  010E  0086               	movwf	6
  4147  010F  3002               	movlw	2	; select bank5/6
  4148  0110  0087               	movwf	7
  4149  0111  306C               	movlw	108
  4150  0112  0601               	xorwf	1,w
  4151  0113  1D03               	btfss	3,2
  4152  0114  2916               	goto	u9411
  4153  0115  2917               	goto	u9410
  4154  0116                     u9411:
  4155  0116  296A               	goto	l8969
  4156  0117                     u9410:
  4157  0117                     l8957:
  4158                           
  4159                           ;main.c: 436:                     valVLength_TL = atoi(bufferCamera_t);
  4160  0117  3020               	movlw	low TimeLapseHandle@bufferCamera_t
  4161  0118  0020               	movlb	0	; select bank0
  4162  0119  00B4               	movwf	atoi@s
  4163  011A  3003               	movlw	high TimeLapseHandle@bufferCamera_t
  4164  011B  00B5               	movwf	atoi@s+1
  4165  011C  3190  202D  3180   	fcall	_atoi
  4166  011F  0020               	movlb	0	; select bank0
  4167  0120  0834               	movf	?_atoi,w
  4168  0121  00C3               	movwf	___xxtofl@val
  4169  0122  0835               	movf	?_atoi+1,w
  4170  0123  00C4               	movwf	___xxtofl@val+1
  4171  0124  0D89               	rlf	9,f
  4172  0125  3B89               	subwfb	9,f
  4173  0126  0989               	comf	9,f
  4174  0127  00C5               	movwf	___xxtofl@val+2
  4175  0128  00C6               	movwf	___xxtofl@val+3
  4176  0129  3001               	movlw	1
  4177  012A  319E  266F  3180   	fcall	___xxtofl
  4178  012D  0020               	movlb	0	; select bank0
  4179  012E  0846               	movf	?___xxtofl+3,w
  4180  012F  0024               	movlb	4	; select bank4
  4181  0130  00E0               	movwf	(_valVLength_TL+3)^(0+512)
  4182  0131  0020               	movlb	0	; select bank0
  4183  0132  0845               	movf	?___xxtofl+2,w
  4184  0133  0024               	movlb	4	; select bank4
  4185  0134  00DF               	movwf	(_valVLength_TL+2)^(0+512)
  4186  0135  0020               	movlb	0	; select bank0
  4187  0136  0844               	movf	?___xxtofl+1,w
  4188  0137  0024               	movlb	4	; select bank4
  4189  0138  00DE               	movwf	(_valVLength_TL+1)^(0+512)
  4190  0139  0020               	movlb	0	; select bank0
  4191  013A  0843               	movf	?___xxtofl,w
  4192  013B  0024               	movlb	4	; select bank4
  4193  013C  00DD               	movwf	_valVLength_TL^(0+512)
  4194  013D                     l8959:
  4195                           
  4196                           ;main.c: 438:                     for(int j = 0; j < strlen(bufferCamera_t);j++){
  4197  013D  0026               	movlb	6	; select bank6
  4198  013E  01BE               	clrf	TimeLapseHandle@j_2335^(0+768)
  4199  013F  01BF               	clrf	(TimeLapseHandle@j_2335+1)^(0+768)
  4200  0140  2952               	goto	l8965
  4201  0141                     l8961:
  4202                           
  4203                           ;main.c: 439:                         bufferCamera_t[j] = ' ';
  4204  0141  3020               	movlw	32
  4205  0142  0020               	movlb	0	; select bank0
  4206  0143  00D3               	movwf	??_TimeLapseHandle
  4207  0144  0026               	movlb	6	; select bank6
  4208  0145  083E               	movf	TimeLapseHandle@j_2335^(0+768),w
  4209  0146  3E20               	addlw	(low (TimeLapseHandle@bufferCamera_t| (0+768)))& (0+255)
  4210  0147  0086               	movwf	6
  4211  0148  3003               	movlw	3	; select bank6/7
  4212  0149  0087               	movwf	7
  4213  014A  0020               	movlb	0	; select bank0
  4214  014B  0853               	movf	??_TimeLapseHandle,w
  4215  014C  0081               	movwf	1
  4216  014D                     l8963:
  4217                           
  4218                           ;main.c: 440:                     }
  4219  014D  3001               	movlw	1
  4220  014E  0026               	movlb	6	; select bank6
  4221  014F  07BE               	addwf	TimeLapseHandle@j_2335^(0+768),f
  4222  0150  3000               	movlw	0
  4223  0151  3DBF               	addwfc	(TimeLapseHandle@j_2335+1)^(0+768),f
  4224  0152                     l8965:
  4225  0152  3020               	movlw	low TimeLapseHandle@bufferCamera_t
  4226  0153  0020               	movlb	0	; select bank0
  4227  0154  00AE               	movwf	strlen@s
  4228  0155  3003               	movlw	high TimeLapseHandle@bufferCamera_t
  4229  0156  00AF               	movwf	strlen@s+1
  4230  0157  319A  228E  3180   	fcall	_strlen
  4231  015A  0020               	movlb	0	; select bank0
  4232  015B  082F               	movf	?_strlen+1,w
  4233  015C  0026               	movlb	6	; select bank6
  4234  015D  023F               	subwf	(TimeLapseHandle@j_2335+1)^(0+768),w
  4235  015E  1D03               	skipz
  4236  015F  2964               	goto	u9425
  4237  0160  0020               	movlb	0	; select bank0
  4238  0161  082E               	movf	?_strlen,w
  4239  0162  0026               	movlb	6	; select bank6
  4240  0163  023E               	subwf	TimeLapseHandle@j_2335^(0+768),w
  4241  0164                     u9425:
  4242  0164  1C03               	skipc
  4243  0165  2967               	goto	u9421
  4244  0166  2968               	goto	u9420
  4245  0167                     u9421:
  4246  0167  2941               	goto	l8961
  4247  0168                     u9420:
  4248  0168                     l8967:
  4249                           
  4250                           ;main.c: 441:                     cntCamera = 0;
  4251  0168  0022               	movlb	2	; select bank2
  4252  0169  01B6               	clrf	_cntCamera^(0+256)
  4253  016A                     l8969:
  4254                           
  4255                           ;main.c: 443:                 if(buffer_sys[i] == 't'){
  4256  016A  0026               	movlb	6	; select bank6
  4257  016B  0844               	movf	TimeLapseHandle@i^(0+768),w
  4258  016C  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  4259  016D  0086               	movwf	6
  4260  016E  3002               	movlw	2	; select bank5/6
  4261  016F  0087               	movwf	7
  4262  0170  3074               	movlw	116
  4263  0171  0601               	xorwf	1,w
  4264  0172  1D03               	btfss	3,2
  4265  0173  2975               	goto	u9431
  4266  0174  2976               	goto	u9430
  4267  0175                     u9431:
  4268  0175  29C9               	goto	l8983
  4269  0176                     u9430:
  4270  0176                     l8971:
  4271                           
  4272                           ;main.c: 444:                     valTime_TL = atoi(bufferCamera_t);
  4273  0176  3020               	movlw	low TimeLapseHandle@bufferCamera_t
  4274  0177  0020               	movlb	0	; select bank0
  4275  0178  00B4               	movwf	atoi@s
  4276  0179  3003               	movlw	high TimeLapseHandle@bufferCamera_t
  4277  017A  00B5               	movwf	atoi@s+1
  4278  017B  3190  202D  3180   	fcall	_atoi
  4279  017E  0020               	movlb	0	; select bank0
  4280  017F  0834               	movf	?_atoi,w
  4281  0180  00C3               	movwf	___xxtofl@val
  4282  0181  0835               	movf	?_atoi+1,w
  4283  0182  00C4               	movwf	___xxtofl@val+1
  4284  0183  0D89               	rlf	9,f
  4285  0184  3B89               	subwfb	9,f
  4286  0185  0989               	comf	9,f
  4287  0186  00C5               	movwf	___xxtofl@val+2
  4288  0187  00C6               	movwf	___xxtofl@val+3
  4289  0188  3001               	movlw	1
  4290  0189  319E  266F  3180   	fcall	___xxtofl
  4291  018C  0020               	movlb	0	; select bank0
  4292  018D  0846               	movf	?___xxtofl+3,w
  4293  018E  0024               	movlb	4	; select bank4
  4294  018F  00DC               	movwf	(_valTime_TL+3)^(0+512)
  4295  0190  0020               	movlb	0	; select bank0
  4296  0191  0845               	movf	?___xxtofl+2,w
  4297  0192  0024               	movlb	4	; select bank4
  4298  0193  00DB               	movwf	(_valTime_TL+2)^(0+512)
  4299  0194  0020               	movlb	0	; select bank0
  4300  0195  0844               	movf	?___xxtofl+1,w
  4301  0196  0024               	movlb	4	; select bank4
  4302  0197  00DA               	movwf	(_valTime_TL+1)^(0+512)
  4303  0198  0020               	movlb	0	; select bank0
  4304  0199  0843               	movf	?___xxtofl,w
  4305  019A  0024               	movlb	4	; select bank4
  4306  019B  00D9               	movwf	_valTime_TL^(0+512)
  4307  019C                     l8973:
  4308                           
  4309                           ;main.c: 446:                     for(int j = 0; j < strlen(bufferCamera_t);j++){
  4310  019C  0026               	movlb	6	; select bank6
  4311  019D  01C0               	clrf	TimeLapseHandle@j_2336^(0+768)
  4312  019E  01C1               	clrf	(TimeLapseHandle@j_2336+1)^(0+768)
  4313  019F  29B1               	goto	l8979
  4314  01A0                     l8975:
  4315                           
  4316                           ;main.c: 447:                         bufferCamera_t[j] = ' ';
  4317  01A0  3020               	movlw	32
  4318  01A1  0020               	movlb	0	; select bank0
  4319  01A2  00D3               	movwf	??_TimeLapseHandle
  4320  01A3  0026               	movlb	6	; select bank6
  4321  01A4  0840               	movf	TimeLapseHandle@j_2336^(0+768),w
  4322  01A5  3E20               	addlw	(low (TimeLapseHandle@bufferCamera_t| (0+768)))& (0+255)
  4323  01A6  0086               	movwf	6
  4324  01A7  3003               	movlw	3	; select bank6/7
  4325  01A8  0087               	movwf	7
  4326  01A9  0020               	movlb	0	; select bank0
  4327  01AA  0853               	movf	??_TimeLapseHandle,w
  4328  01AB  0081               	movwf	1
  4329  01AC                     l8977:
  4330                           
  4331                           ;main.c: 448:                     }
  4332  01AC  3001               	movlw	1
  4333  01AD  0026               	movlb	6	; select bank6
  4334  01AE  07C0               	addwf	TimeLapseHandle@j_2336^(0+768),f
  4335  01AF  3000               	movlw	0
  4336  01B0  3DC1               	addwfc	(TimeLapseHandle@j_2336+1)^(0+768),f
  4337  01B1                     l8979:
  4338  01B1  3020               	movlw	low TimeLapseHandle@bufferCamera_t
  4339  01B2  0020               	movlb	0	; select bank0
  4340  01B3  00AE               	movwf	strlen@s
  4341  01B4  3003               	movlw	high TimeLapseHandle@bufferCamera_t
  4342  01B5  00AF               	movwf	strlen@s+1
  4343  01B6  319A  228E  3180   	fcall	_strlen
  4344  01B9  0020               	movlb	0	; select bank0
  4345  01BA  082F               	movf	?_strlen+1,w
  4346  01BB  0026               	movlb	6	; select bank6
  4347  01BC  0241               	subwf	(TimeLapseHandle@j_2336+1)^(0+768),w
  4348  01BD  1D03               	skipz
  4349  01BE  29C3               	goto	u9445
  4350  01BF  0020               	movlb	0	; select bank0
  4351  01C0  082E               	movf	?_strlen,w
  4352  01C1  0026               	movlb	6	; select bank6
  4353  01C2  0240               	subwf	TimeLapseHandle@j_2336^(0+768),w
  4354  01C3                     u9445:
  4355  01C3  1C03               	skipc
  4356  01C4  29C6               	goto	u9441
  4357  01C5  29C7               	goto	u9440
  4358  01C6                     u9441:
  4359  01C6  29A0               	goto	l8975
  4360  01C7                     u9440:
  4361  01C7                     l8981:
  4362                           
  4363                           ;main.c: 449:                     cntCamera = 0;
  4364  01C7  0022               	movlb	2	; select bank2
  4365  01C8  01B6               	clrf	_cntCamera^(0+256)
  4366  01C9                     l8983:
  4367                           
  4368                           ;main.c: 451:                 if(buffer_sys[i] == '#'){
  4369  01C9  0026               	movlb	6	; select bank6
  4370  01CA  0844               	movf	TimeLapseHandle@i^(0+768),w
  4371  01CB  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  4372  01CC  0086               	movwf	6
  4373  01CD  3002               	movlw	2	; select bank5/6
  4374  01CE  0087               	movwf	7
  4375  01CF  3023               	movlw	35
  4376  01D0  0601               	xorwf	1,w
  4377  01D1  1D03               	btfss	3,2
  4378  01D2  29D4               	goto	u9451
  4379  01D3  29D5               	goto	u9450
  4380  01D4                     u9451:
  4381  01D4  2A20               	goto	l8999
  4382  01D5                     u9450:
  4383  01D5                     l8985:
  4384                           
  4385                           ;main.c: 452:                     flagCamera = 2;
  4386  01D5  3002               	movlw	2
  4387  01D6  0020               	movlb	0	; select bank0
  4388  01D7  00D3               	movwf	??_TimeLapseHandle
  4389  01D8  0853               	movf	??_TimeLapseHandle,w
  4390  01D9  0022               	movlb	2	; select bank2
  4391  01DA  00B5               	movwf	_flagCamera^(0+256)
  4392  01DB                     l8987:
  4393                           
  4394                           ;main.c: 454:                     for(int j = 0; j < strlen(bufferCamera_t);j++){
  4395  01DB  0026               	movlb	6	; select bank6
  4396  01DC  01C2               	clrf	TimeLapseHandle@j_2337^(0+768)
  4397  01DD  01C3               	clrf	(TimeLapseHandle@j_2337+1)^(0+768)
  4398  01DE  29F0               	goto	l8993
  4399  01DF                     l8989:
  4400                           
  4401                           ;main.c: 455:                         bufferCamera_t[j] = ' ';
  4402  01DF  3020               	movlw	32
  4403  01E0  0020               	movlb	0	; select bank0
  4404  01E1  00D3               	movwf	??_TimeLapseHandle
  4405  01E2  0026               	movlb	6	; select bank6
  4406  01E3  0842               	movf	TimeLapseHandle@j_2337^(0+768),w
  4407  01E4  3E20               	addlw	(low (TimeLapseHandle@bufferCamera_t| (0+768)))& (0+255)
  4408  01E5  0086               	movwf	6
  4409  01E6  3003               	movlw	3	; select bank6/7
  4410  01E7  0087               	movwf	7
  4411  01E8  0020               	movlb	0	; select bank0
  4412  01E9  0853               	movf	??_TimeLapseHandle,w
  4413  01EA  0081               	movwf	1
  4414  01EB                     l8991:
  4415                           
  4416                           ;main.c: 456:                     }
  4417  01EB  3001               	movlw	1
  4418  01EC  0026               	movlb	6	; select bank6
  4419  01ED  07C2               	addwf	TimeLapseHandle@j_2337^(0+768),f
  4420  01EE  3000               	movlw	0
  4421  01EF  3DC3               	addwfc	(TimeLapseHandle@j_2337+1)^(0+768),f
  4422  01F0                     l8993:
  4423  01F0  3020               	movlw	low TimeLapseHandle@bufferCamera_t
  4424  01F1  0020               	movlb	0	; select bank0
  4425  01F2  00AE               	movwf	strlen@s
  4426  01F3  3003               	movlw	high TimeLapseHandle@bufferCamera_t
  4427  01F4  00AF               	movwf	strlen@s+1
  4428  01F5  319A  228E  3180   	fcall	_strlen
  4429  01F8  0020               	movlb	0	; select bank0
  4430  01F9  082F               	movf	?_strlen+1,w
  4431  01FA  0026               	movlb	6	; select bank6
  4432  01FB  0243               	subwf	(TimeLapseHandle@j_2337+1)^(0+768),w
  4433  01FC  1D03               	skipz
  4434  01FD  2A02               	goto	u9465
  4435  01FE  0020               	movlb	0	; select bank0
  4436  01FF  082E               	movf	?_strlen,w
  4437  0200  0026               	movlb	6	; select bank6
  4438  0201  0242               	subwf	TimeLapseHandle@j_2337^(0+768),w
  4439  0202                     u9465:
  4440  0202  1C03               	skipc
  4441  0203  2A05               	goto	u9461
  4442  0204  2A06               	goto	u9460
  4443  0205                     u9461:
  4444  0205  29DF               	goto	l8989
  4445  0206                     u9460:
  4446  0206  2A20               	goto	l8999
  4447  0207                     l8995:
  4448                           
  4449                           ;main.c: 460:                 bufferCamera_t[cntCamera] = buffer_sys[i];
  4450  0207  0844               	movf	TimeLapseHandle@i^(0+768),w
  4451  0208  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  4452  0209  0086               	movwf	6
  4453  020A  3002               	movlw	2	; select bank5/6
  4454  020B  0087               	movwf	7
  4455  020C  0801               	movf	1,w
  4456  020D  0020               	movlb	0	; select bank0
  4457  020E  00D3               	movwf	??_TimeLapseHandle
  4458  020F  0022               	movlb	2	; select bank2
  4459  0210  0836               	movf	_cntCamera^(0+256),w
  4460  0211  3E20               	addlw	(low (TimeLapseHandle@bufferCamera_t| (0+768)))& (0+255)
  4461  0212  0086               	movwf	6
  4462  0213  3003               	movlw	3	; select bank6/7
  4463  0214  0087               	movwf	7
  4464  0215  0020               	movlb	0	; select bank0
  4465  0216  0853               	movf	??_TimeLapseHandle,w
  4466  0217  0081               	movwf	1
  4467  0218                     l8997:
  4468                           
  4469                           ;main.c: 461:                 cntCamera = cntCamera + 1;
  4470  0218  0022               	movlb	2	; select bank2
  4471  0219  0836               	movf	_cntCamera^(0+256),w
  4472  021A  3E01               	addlw	1
  4473  021B  0020               	movlb	0	; select bank0
  4474  021C  00D3               	movwf	??_TimeLapseHandle
  4475  021D  0853               	movf	??_TimeLapseHandle,w
  4476  021E  0022               	movlb	2	; select bank2
  4477  021F  00B6               	movwf	_cntCamera^(0+256)
  4478  0220                     l8999:
  4479                           
  4480                           ;main.c: 463:         }
  4481  0220  3001               	movlw	1
  4482  0221  0026               	movlb	6	; select bank6
  4483  0222  07C4               	addwf	TimeLapseHandle@i^(0+768),f
  4484  0223  3000               	movlw	0
  4485  0224  3DC5               	addwfc	(TimeLapseHandle@i+1)^(0+768),f
  4486  0225                     l9001:
  4487  0225  30A0               	movlw	low _buffer_sys
  4488  0226  0020               	movlb	0	; select bank0
  4489  0227  00AE               	movwf	strlen@s
  4490  0228  3002               	movlw	high _buffer_sys
  4491  0229  00AF               	movwf	strlen@s+1
  4492  022A  319A  228E  3180   	fcall	_strlen
  4493  022D  0020               	movlb	0	; select bank0
  4494  022E  082F               	movf	?_strlen+1,w
  4495  022F  0026               	movlb	6	; select bank6
  4496  0230  0245               	subwf	(TimeLapseHandle@i+1)^(0+768),w
  4497  0231  1D03               	skipz
  4498  0232  2A37               	goto	u9475
  4499  0233  0020               	movlb	0	; select bank0
  4500  0234  082E               	movf	?_strlen,w
  4501  0235  0026               	movlb	6	; select bank6
  4502  0236  0244               	subwf	TimeLapseHandle@i^(0+768),w
  4503  0237                     u9475:
  4504  0237  1C03               	skipc
  4505  0238  2A3A               	goto	u9471
  4506  0239  2A3B               	goto	u9470
  4507  023A                     u9471:
  4508  023A  2873               	goto	l8929
  4509  023B                     u9470:
  4510  023B                     l9003:
  4511                           
  4512                           ;main.c: 465:     if(flagCamera == 2){
  4513  023B  3002               	movlw	2
  4514  023C  0022               	movlb	2	; select bank2
  4515  023D  0635               	xorwf	_flagCamera^(0+256),w
  4516  023E  1D03               	btfss	3,2
  4517  023F  2A41               	goto	u9481
  4518  0240  2A42               	goto	u9480
  4519  0241                     u9481:
  4520  0241  2BEC               	goto	l1629
  4521  0242                     u9480:
  4522  0242                     l9005:
  4523                           
  4524                           ;main.c: 466:         sum_frame = valVLength_TL*1800;
  4525  0242  0024               	movlb	4	; select bank4
  4526  0243  0860               	movf	(_valVLength_TL+3)^(0+512),w
  4527  0244  0021               	movlb	1	; select bank1
  4528  0245  00A7               	movwf	(___flmul@a+3)^(0+128)
  4529  0246  0024               	movlb	4	; select bank4
  4530  0247  085F               	movf	(_valVLength_TL+2)^(0+512),w
  4531  0248  0021               	movlb	1	; select bank1
  4532  0249  00A6               	movwf	(___flmul@a+2)^(0+128)
  4533  024A  0024               	movlb	4	; select bank4
  4534  024B  085E               	movf	(_valVLength_TL+1)^(0+512),w
  4535  024C  0021               	movlb	1	; select bank1
  4536  024D  00A5               	movwf	(___flmul@a+1)^(0+128)
  4537  024E  0024               	movlb	4	; select bank4
  4538  024F  085D               	movf	_valVLength_TL^(0+512),w
  4539  0250  0021               	movlb	1	; select bank1
  4540  0251  00A4               	movwf	___flmul@a^(0+128)
  4541  0252  3044               	movlw	68
  4542  0253  00A3               	movwf	(___flmul@b+3)^(0+128)
  4543  0254  30E1               	movlw	225
  4544  0255  00A2               	movwf	(___flmul@b+2)^(0+128)
  4545  0256  3000               	movlw	0
  4546  0257  00A1               	movwf	(___flmul@b+1)^(0+128)
  4547  0258  3000               	movlw	0
  4548  0259  00A0               	movwf	___flmul@b^(0+128)
  4549  025A  318D  257C  3180   	fcall	___flmul
  4550  025D  0021               	movlb	1	; select bank1
  4551  025E  0823               	movf	(?___flmul+3)^(0+128),w
  4552  025F  00EB               	movwf	(___fltol@f1+3)^(0+128)
  4553  0260  0822               	movf	(?___flmul+2)^(0+128),w
  4554  0261  00EA               	movwf	(___fltol@f1+2)^(0+128)
  4555  0262  0821               	movf	(?___flmul+1)^(0+128),w
  4556  0263  00E9               	movwf	(___fltol@f1+1)^(0+128)
  4557  0264  0820               	movf	?___flmul^(0+128),w
  4558  0265  00E8               	movwf	___fltol@f1^(0+128)
  4559  0266  319B  2399  3180   	fcall	___fltol
  4560  0269  0021               	movlb	1	; select bank1
  4561  026A  0869               	movf	(?___fltol+1)^(0+128),w
  4562  026B  0022               	movlb	2	; select bank2
  4563  026C  00C1               	movwf	(_sum_frame+1)^(0+256)
  4564  026D  0021               	movlb	1	; select bank1
  4565  026E  0868               	movf	?___fltol^(0+128),w
  4566  026F  0022               	movlb	2	; select bank2
  4567  0270  00C0               	movwf	_sum_frame^(0+256)
  4568                           
  4569                           ;main.c: 467:         angle_move = (float)360/sum_frame;
  4570  0271  0840               	movf	_sum_frame^(0+256),w
  4571  0272  0020               	movlb	0	; select bank0
  4572  0273  00C3               	movwf	___xxtofl@val
  4573  0274  0022               	movlb	2	; select bank2
  4574  0275  0841               	movf	(_sum_frame+1)^(0+256),w
  4575  0276  0020               	movlb	0	; select bank0
  4576  0277  00C4               	movwf	___xxtofl@val+1
  4577  0278  01C5               	clrf	___xxtofl@val+2
  4578  0279  01C6               	clrf	___xxtofl@val+3
  4579  027A  3000               	movlw	0
  4580  027B  319E  266F  3180   	fcall	___xxtofl
  4581  027E  0020               	movlb	0	; select bank0
  4582  027F  0846               	movf	?___xxtofl+3,w
  4583  0280  0021               	movlb	1	; select bank1
  4584  0281  00BD               	movwf	(___fldiv@a+3)^(0+128)
  4585  0282  0020               	movlb	0	; select bank0
  4586  0283  0845               	movf	?___xxtofl+2,w
  4587  0284  0021               	movlb	1	; select bank1
  4588  0285  00BC               	movwf	(___fldiv@a+2)^(0+128)
  4589  0286  0020               	movlb	0	; select bank0
  4590  0287  0844               	movf	?___xxtofl+1,w
  4591  0288  0021               	movlb	1	; select bank1
  4592  0289  00BB               	movwf	(___fldiv@a+1)^(0+128)
  4593  028A  0020               	movlb	0	; select bank0
  4594  028B  0843               	movf	?___xxtofl,w
  4595  028C  0021               	movlb	1	; select bank1
  4596  028D  00BA               	movwf	___fldiv@a^(0+128)
  4597  028E  3043               	movlw	67
  4598  028F  00C1               	movwf	(___fldiv@b+3)^(0+128)
  4599  0290  30B4               	movlw	180
  4600  0291  00C0               	movwf	(___fldiv@b+2)^(0+128)
  4601  0292  3000               	movlw	0
  4602  0293  00BF               	movwf	(___fldiv@b+1)^(0+128)
  4603  0294  3000               	movlw	0
  4604  0295  00BE               	movwf	___fldiv@b^(0+128)
  4605  0296  3192  2288  3180   	fcall	___fldiv
  4606  0299  0021               	movlb	1	; select bank1
  4607  029A  083D               	movf	(?___fldiv+3)^(0+128),w
  4608  029B  0023               	movlb	3	; select bank3
  4609  029C  00C4               	movwf	(_angle_move+3)^(0+384)
  4610  029D  0021               	movlb	1	; select bank1
  4611  029E  083C               	movf	(?___fldiv+2)^(0+128),w
  4612  029F  0023               	movlb	3	; select bank3
  4613  02A0  00C3               	movwf	(_angle_move+2)^(0+384)
  4614  02A1  0021               	movlb	1	; select bank1
  4615  02A2  083B               	movf	(?___fldiv+1)^(0+128),w
  4616  02A3  0023               	movlb	3	; select bank3
  4617  02A4  00C2               	movwf	(_angle_move+1)^(0+384)
  4618  02A5  0021               	movlb	1	; select bank1
  4619  02A6  083A               	movf	?___fldiv^(0+128),w
  4620  02A7  0023               	movlb	3	; select bank3
  4621  02A8  00C1               	movwf	_angle_move^(0+384)
  4622                           
  4623                           ;main.c: 468:         delay_frame = (angle_move*valTime_TL*1000)/6;
  4624  02A9  0844               	movf	(_angle_move+3)^(0+384),w
  4625  02AA  0021               	movlb	1	; select bank1
  4626  02AB  00A7               	movwf	(___flmul@a+3)^(0+128)
  4627  02AC  0023               	movlb	3	; select bank3
  4628  02AD  0843               	movf	(_angle_move+2)^(0+384),w
  4629  02AE  0021               	movlb	1	; select bank1
  4630  02AF  00A6               	movwf	(___flmul@a+2)^(0+128)
  4631  02B0  0023               	movlb	3	; select bank3
  4632  02B1  0842               	movf	(_angle_move+1)^(0+384),w
  4633  02B2  0021               	movlb	1	; select bank1
  4634  02B3  00A5               	movwf	(___flmul@a+1)^(0+128)
  4635  02B4  0023               	movlb	3	; select bank3
  4636  02B5  0841               	movf	_angle_move^(0+384),w
  4637  02B6  0021               	movlb	1	; select bank1
  4638  02B7  00A4               	movwf	___flmul@a^(0+128)
  4639  02B8  0024               	movlb	4	; select bank4
  4640  02B9  085C               	movf	(_valTime_TL+3)^(0+512),w
  4641  02BA  0021               	movlb	1	; select bank1
  4642  02BB  00A3               	movwf	(___flmul@b+3)^(0+128)
  4643  02BC  0024               	movlb	4	; select bank4
  4644  02BD  085B               	movf	(_valTime_TL+2)^(0+512),w
  4645  02BE  0021               	movlb	1	; select bank1
  4646  02BF  00A2               	movwf	(___flmul@b+2)^(0+128)
  4647  02C0  0024               	movlb	4	; select bank4
  4648  02C1  085A               	movf	(_valTime_TL+1)^(0+512),w
  4649  02C2  0021               	movlb	1	; select bank1
  4650  02C3  00A1               	movwf	(___flmul@b+1)^(0+128)
  4651  02C4  0024               	movlb	4	; select bank4
  4652  02C5  0859               	movf	_valTime_TL^(0+512),w
  4653  02C6  0021               	movlb	1	; select bank1
  4654  02C7  00A0               	movwf	___flmul@b^(0+128)
  4655  02C8  318D  257C  3180   	fcall	___flmul
  4656  02CB  0021               	movlb	1	; select bank1
  4657  02CC  0823               	movf	(?___flmul+3)^(0+128),w
  4658  02CD  0026               	movlb	6	; select bank6
  4659  02CE  00BB               	movwf	(_TimeLapseHandle$3255+3)^(0+768)
  4660  02CF  0021               	movlb	1	; select bank1
  4661  02D0  0822               	movf	(?___flmul+2)^(0+128),w
  4662  02D1  0026               	movlb	6	; select bank6
  4663  02D2  00BA               	movwf	(_TimeLapseHandle$3255+2)^(0+768)
  4664  02D3  0021               	movlb	1	; select bank1
  4665  02D4  0821               	movf	(?___flmul+1)^(0+128),w
  4666  02D5  0026               	movlb	6	; select bank6
  4667  02D6  00B9               	movwf	(_TimeLapseHandle$3255+1)^(0+768)
  4668  02D7  0021               	movlb	1	; select bank1
  4669  02D8  0820               	movf	?___flmul^(0+128),w
  4670  02D9  0026               	movlb	6	; select bank6
  4671  02DA  00B8               	movwf	_TimeLapseHandle$3255^(0+768)
  4672                           
  4673                           ;main.c: 468:         delay_frame = (angle_move*valTime_TL*1000)/6;
  4674  02DB  083B               	movf	(_TimeLapseHandle$3255+3)^(0+768),w
  4675  02DC  0021               	movlb	1	; select bank1
  4676  02DD  00A7               	movwf	(___flmul@a+3)^(0+128)
  4677  02DE  0026               	movlb	6	; select bank6
  4678  02DF  083A               	movf	(_TimeLapseHandle$3255+2)^(0+768),w
  4679  02E0  0021               	movlb	1	; select bank1
  4680  02E1  00A6               	movwf	(___flmul@a+2)^(0+128)
  4681  02E2  0026               	movlb	6	; select bank6
  4682  02E3  0839               	movf	(_TimeLapseHandle$3255+1)^(0+768),w
  4683  02E4  0021               	movlb	1	; select bank1
  4684  02E5  00A5               	movwf	(___flmul@a+1)^(0+128)
  4685  02E6  0026               	movlb	6	; select bank6
  4686  02E7  0838               	movf	_TimeLapseHandle$3255^(0+768),w
  4687  02E8  0021               	movlb	1	; select bank1
  4688  02E9  00A4               	movwf	___flmul@a^(0+128)
  4689  02EA  3044               	movlw	68
  4690  02EB  00A3               	movwf	(___flmul@b+3)^(0+128)
  4691  02EC  307A               	movlw	122
  4692  02ED  00A2               	movwf	(___flmul@b+2)^(0+128)
  4693  02EE  3000               	movlw	0
  4694  02EF  00A1               	movwf	(___flmul@b+1)^(0+128)
  4695  02F0  3000               	movlw	0
  4696  02F1  00A0               	movwf	___flmul@b^(0+128)
  4697  02F2  318D  257C  3180   	fcall	___flmul
  4698  02F5  0021               	movlb	1	; select bank1
  4699  02F6  0823               	movf	(?___flmul+3)^(0+128),w
  4700  02F7  00C1               	movwf	(___fldiv@b+3)^(0+128)
  4701  02F8  0822               	movf	(?___flmul+2)^(0+128),w
  4702  02F9  00C0               	movwf	(___fldiv@b+2)^(0+128)
  4703  02FA  0821               	movf	(?___flmul+1)^(0+128),w
  4704  02FB  00BF               	movwf	(___fldiv@b+1)^(0+128)
  4705  02FC  0820               	movf	?___flmul^(0+128),w
  4706  02FD  00BE               	movwf	___fldiv@b^(0+128)
  4707  02FE  3040               	movlw	64
  4708  02FF  00BD               	movwf	(___fldiv@a+3)^(0+128)
  4709  0300  30C0               	movlw	192
  4710  0301  00BC               	movwf	(___fldiv@a+2)^(0+128)
  4711  0302  3000               	movlw	0
  4712  0303  00BB               	movwf	(___fldiv@a+1)^(0+128)
  4713  0304  3000               	movlw	0
  4714  0305  00BA               	movwf	___fldiv@a^(0+128)
  4715  0306  3192  2288  3180   	fcall	___fldiv
  4716  0309  0021               	movlb	1	; select bank1
  4717  030A  083D               	movf	(?___fldiv+3)^(0+128),w
  4718  030B  00EB               	movwf	(___fltol@f1+3)^(0+128)
  4719  030C  083C               	movf	(?___fldiv+2)^(0+128),w
  4720  030D  00EA               	movwf	(___fltol@f1+2)^(0+128)
  4721  030E  083B               	movf	(?___fldiv+1)^(0+128),w
  4722  030F  00E9               	movwf	(___fltol@f1+1)^(0+128)
  4723  0310  083A               	movf	?___fldiv^(0+128),w
  4724  0311  00E8               	movwf	___fltol@f1^(0+128)
  4725  0312  319B  2399  3180   	fcall	___fltol
  4726  0315  0021               	movlb	1	; select bank1
  4727  0316  0869               	movf	(?___fltol+1)^(0+128),w
  4728  0317  0023               	movlb	3	; select bank3
  4729  0318  00DE               	movwf	(_delay_frame+1)^(0+384)
  4730  0319  0021               	movlb	1	; select bank1
  4731  031A  0868               	movf	?___fltol^(0+128),w
  4732  031B  0023               	movlb	3	; select bank3
  4733  031C  00DD               	movwf	_delay_frame^(0+384)
  4734                           
  4735                           ;main.c: 469:         time_move = (3.14159*valRadius_TL*angle_move*100)/(18*velocity_TL)
      +                          ;
  4736  031D  3040               	movlw	64
  4737  031E  0021               	movlb	1	; select bank1
  4738  031F  00A3               	movwf	(___flmul@b+3)^(0+128)
  4739  0320  3049               	movlw	73
  4740  0321  00A2               	movwf	(___flmul@b+2)^(0+128)
  4741  0322  300F               	movlw	15
  4742  0323  00A1               	movwf	(___flmul@b+1)^(0+128)
  4743  0324  30D0               	movlw	208
  4744  0325  00A0               	movwf	___flmul@b^(0+128)
  4745  0326  0023               	movlb	3	; select bank3
  4746  0327  086A               	movf	(_valRadius_TL+3)^(0+384),w
  4747  0328  0021               	movlb	1	; select bank1
  4748  0329  00A7               	movwf	(___flmul@a+3)^(0+128)
  4749  032A  0023               	movlb	3	; select bank3
  4750  032B  0869               	movf	(_valRadius_TL+2)^(0+384),w
  4751  032C  0021               	movlb	1	; select bank1
  4752  032D  00A6               	movwf	(___flmul@a+2)^(0+128)
  4753  032E  0023               	movlb	3	; select bank3
  4754  032F  0868               	movf	(_valRadius_TL+1)^(0+384),w
  4755  0330  0021               	movlb	1	; select bank1
  4756  0331  00A5               	movwf	(___flmul@a+1)^(0+128)
  4757  0332  0023               	movlb	3	; select bank3
  4758  0333  0867               	movf	_valRadius_TL^(0+384),w
  4759  0334  0021               	movlb	1	; select bank1
  4760  0335  00A4               	movwf	___flmul@a^(0+128)
  4761  0336  318D  257C  3180   	fcall	___flmul
  4762  0339  0021               	movlb	1	; select bank1
  4763  033A  0823               	movf	(?___flmul+3)^(0+128),w
  4764  033B  0026               	movlb	6	; select bank6
  4765  033C  00BB               	movwf	(_TimeLapseHandle$3255+3)^(0+768)
  4766  033D  0021               	movlb	1	; select bank1
  4767  033E  0822               	movf	(?___flmul+2)^(0+128),w
  4768  033F  0026               	movlb	6	; select bank6
  4769  0340  00BA               	movwf	(_TimeLapseHandle$3255+2)^(0+768)
  4770  0341  0021               	movlb	1	; select bank1
  4771  0342  0821               	movf	(?___flmul+1)^(0+128),w
  4772  0343  0026               	movlb	6	; select bank6
  4773  0344  00B9               	movwf	(_TimeLapseHandle$3255+1)^(0+768)
  4774  0345  0021               	movlb	1	; select bank1
  4775  0346  0820               	movf	?___flmul^(0+128),w
  4776  0347  0026               	movlb	6	; select bank6
  4777  0348  00B8               	movwf	_TimeLapseHandle$3255^(0+768)
  4778                           
  4779                           ;main.c: 469:         time_move = (3.14159*valRadius_TL*angle_move*100)/(18*velocity_TL)
      +                          ;
  4780  0349  0023               	movlb	3	; select bank3
  4781  034A  0844               	movf	(_angle_move+3)^(0+384),w
  4782  034B  0021               	movlb	1	; select bank1
  4783  034C  00A3               	movwf	(___flmul@b+3)^(0+128)
  4784  034D  0023               	movlb	3	; select bank3
  4785  034E  0843               	movf	(_angle_move+2)^(0+384),w
  4786  034F  0021               	movlb	1	; select bank1
  4787  0350  00A2               	movwf	(___flmul@b+2)^(0+128)
  4788  0351  0023               	movlb	3	; select bank3
  4789  0352  0842               	movf	(_angle_move+1)^(0+384),w
  4790  0353  0021               	movlb	1	; select bank1
  4791  0354  00A1               	movwf	(___flmul@b+1)^(0+128)
  4792  0355  0023               	movlb	3	; select bank3
  4793  0356  0841               	movf	_angle_move^(0+384),w
  4794  0357  0021               	movlb	1	; select bank1
  4795  0358  00A0               	movwf	___flmul@b^(0+128)
  4796  0359  0026               	movlb	6	; select bank6
  4797  035A  083B               	movf	(_TimeLapseHandle$3255+3)^(0+768),w
  4798  035B  0021               	movlb	1	; select bank1
  4799  035C  00A7               	movwf	(___flmul@a+3)^(0+128)
  4800  035D  0026               	movlb	6	; select bank6
  4801  035E  083A               	movf	(_TimeLapseHandle$3255+2)^(0+768),w
  4802  035F  0021               	movlb	1	; select bank1
  4803  0360  00A6               	movwf	(___flmul@a+2)^(0+128)
  4804  0361  0026               	movlb	6	; select bank6
  4805  0362  0839               	movf	(_TimeLapseHandle$3255+1)^(0+768),w
  4806  0363  0021               	movlb	1	; select bank1
  4807  0364  00A5               	movwf	(___flmul@a+1)^(0+128)
  4808  0365  0026               	movlb	6	; select bank6
  4809  0366  0838               	movf	_TimeLapseHandle$3255^(0+768),w
  4810  0367  0021               	movlb	1	; select bank1
  4811  0368  00A4               	movwf	___flmul@a^(0+128)
  4812  0369  318D  257C  3180   	fcall	___flmul
  4813  036C  0021               	movlb	1	; select bank1
  4814  036D  0823               	movf	(?___flmul+3)^(0+128),w
  4815  036E  0026               	movlb	6	; select bank6
  4816  036F  00B7               	movwf	(_TimeLapseHandle$3256+3)^(0+768)
  4817  0370  0021               	movlb	1	; select bank1
  4818  0371  0822               	movf	(?___flmul+2)^(0+128),w
  4819  0372  0026               	movlb	6	; select bank6
  4820  0373  00B6               	movwf	(_TimeLapseHandle$3256+2)^(0+768)
  4821  0374  0021               	movlb	1	; select bank1
  4822  0375  0821               	movf	(?___flmul+1)^(0+128),w
  4823  0376  0026               	movlb	6	; select bank6
  4824  0377  00B5               	movwf	(_TimeLapseHandle$3256+1)^(0+768)
  4825  0378  0021               	movlb	1	; select bank1
  4826  0379  0820               	movf	?___flmul^(0+128),w
  4827  037A  0026               	movlb	6	; select bank6
  4828  037B  00B4               	movwf	_TimeLapseHandle$3256^(0+768)
  4829                           
  4830                           ;main.c: 469:         time_move = (3.14159*valRadius_TL*angle_move*100)/(18*velocity_TL)
      +                          ;
  4831  037C  3044               	movlw	68
  4832  037D  0021               	movlb	1	; select bank1
  4833  037E  00BD               	movwf	(___fldiv@a+3)^(0+128)
  4834  037F  30E1               	movlw	225
  4835  0380  00BC               	movwf	(___fldiv@a+2)^(0+128)
  4836  0381  3000               	movlw	0
  4837  0382  00BB               	movwf	(___fldiv@a+1)^(0+128)
  4838  0383  3000               	movlw	0
  4839  0384  00BA               	movwf	___fldiv@a^(0+128)
  4840  0385  3042               	movlw	66
  4841  0386  00A3               	movwf	(___flmul@b+3)^(0+128)
  4842  0387  30C8               	movlw	200
  4843  0388  00A2               	movwf	(___flmul@b+2)^(0+128)
  4844  0389  3000               	movlw	0
  4845  038A  00A1               	movwf	(___flmul@b+1)^(0+128)
  4846  038B  3000               	movlw	0
  4847  038C  00A0               	movwf	___flmul@b^(0+128)
  4848  038D  0026               	movlb	6	; select bank6
  4849  038E  0837               	movf	(_TimeLapseHandle$3256+3)^(0+768),w
  4850  038F  0021               	movlb	1	; select bank1
  4851  0390  00A7               	movwf	(___flmul@a+3)^(0+128)
  4852  0391  0026               	movlb	6	; select bank6
  4853  0392  0836               	movf	(_TimeLapseHandle$3256+2)^(0+768),w
  4854  0393  0021               	movlb	1	; select bank1
  4855  0394  00A6               	movwf	(___flmul@a+2)^(0+128)
  4856  0395  0026               	movlb	6	; select bank6
  4857  0396  0835               	movf	(_TimeLapseHandle$3256+1)^(0+768),w
  4858  0397  0021               	movlb	1	; select bank1
  4859  0398  00A5               	movwf	(___flmul@a+1)^(0+128)
  4860  0399  0026               	movlb	6	; select bank6
  4861  039A  0834               	movf	_TimeLapseHandle$3256^(0+768),w
  4862  039B  0021               	movlb	1	; select bank1
  4863  039C  00A4               	movwf	___flmul@a^(0+128)
  4864  039D  318D  257C  3180   	fcall	___flmul
  4865  03A0  0021               	movlb	1	; select bank1
  4866  03A1  0823               	movf	(?___flmul+3)^(0+128),w
  4867  03A2  00C1               	movwf	(___fldiv@b+3)^(0+128)
  4868  03A3  0822               	movf	(?___flmul+2)^(0+128),w
  4869  03A4  00C0               	movwf	(___fldiv@b+2)^(0+128)
  4870  03A5  0821               	movf	(?___flmul+1)^(0+128),w
  4871  03A6  00BF               	movwf	(___fldiv@b+1)^(0+128)
  4872  03A7  0820               	movf	?___flmul^(0+128),w
  4873  03A8  00BE               	movwf	___fldiv@b^(0+128)
  4874  03A9  3192  2288  3180   	fcall	___fldiv
  4875  03AC  0021               	movlb	1	; select bank1
  4876  03AD  083D               	movf	(?___fldiv+3)^(0+128),w
  4877  03AE  0023               	movlb	3	; select bank3
  4878  03AF  00C0               	movwf	(_time_move+3)^(0+384)
  4879  03B0  0021               	movlb	1	; select bank1
  4880  03B1  083C               	movf	(?___fldiv+2)^(0+128),w
  4881  03B2  0023               	movlb	3	; select bank3
  4882  03B3  00BF               	movwf	(_time_move+2)^(0+384)
  4883  03B4  0021               	movlb	1	; select bank1
  4884  03B5  083B               	movf	(?___fldiv+1)^(0+128),w
  4885  03B6  0023               	movlb	3	; select bank3
  4886  03B7  00BE               	movwf	(_time_move+1)^(0+384)
  4887  03B8  0021               	movlb	1	; select bank1
  4888  03B9  083A               	movf	?___fldiv^(0+128),w
  4889  03BA  0023               	movlb	3	; select bank3
  4890  03BB  00BD               	movwf	_time_move^(0+384)
  4891                           
  4892                           ;main.c: 470:         omega_TL = velocity_TL/valRadius_TL;
  4893  03BC  086A               	movf	(_valRadius_TL+3)^(0+384),w
  4894  03BD  0021               	movlb	1	; select bank1
  4895  03BE  00BD               	movwf	(___fldiv@a+3)^(0+128)
  4896  03BF  0023               	movlb	3	; select bank3
  4897  03C0  0869               	movf	(_valRadius_TL+2)^(0+384),w
  4898  03C1  0021               	movlb	1	; select bank1
  4899  03C2  00BC               	movwf	(___fldiv@a+2)^(0+128)
  4900  03C3  0023               	movlb	3	; select bank3
  4901  03C4  0868               	movf	(_valRadius_TL+1)^(0+384),w
  4902  03C5  0021               	movlb	1	; select bank1
  4903  03C6  00BB               	movwf	(___fldiv@a+1)^(0+128)
  4904  03C7  0023               	movlb	3	; select bank3
  4905  03C8  0867               	movf	_valRadius_TL^(0+384),w
  4906  03C9  0021               	movlb	1	; select bank1
  4907  03CA  00BA               	movwf	___fldiv@a^(0+128)
  4908  03CB  3042               	movlw	66
  4909  03CC  00C1               	movwf	(___fldiv@b+3)^(0+128)
  4910  03CD  30C8               	movlw	200
  4911  03CE  00C0               	movwf	(___fldiv@b+2)^(0+128)
  4912  03CF  3000               	movlw	0
  4913  03D0  00BF               	movwf	(___fldiv@b+1)^(0+128)
  4914  03D1  3000               	movlw	0
  4915  03D2  00BE               	movwf	___fldiv@b^(0+128)
  4916  03D3  3192  2288  3180   	fcall	___fldiv
  4917  03D6  0021               	movlb	1	; select bank1
  4918  03D7  083D               	movf	(?___fldiv+3)^(0+128),w
  4919  03D8  0024               	movlb	4	; select bank4
  4920  03D9  00D8               	movwf	(_omega_TL+3)^(0+512)
  4921  03DA  0021               	movlb	1	; select bank1
  4922  03DB  083C               	movf	(?___fldiv+2)^(0+128),w
  4923  03DC  0024               	movlb	4	; select bank4
  4924  03DD  00D7               	movwf	(_omega_TL+2)^(0+512)
  4925  03DE  0021               	movlb	1	; select bank1
  4926  03DF  083B               	movf	(?___fldiv+1)^(0+128),w
  4927  03E0  0024               	movlb	4	; select bank4
  4928  03E1  00D6               	movwf	(_omega_TL+1)^(0+512)
  4929  03E2  0021               	movlb	1	; select bank1
  4930  03E3  083A               	movf	?___fldiv^(0+128),w
  4931  03E4  0024               	movlb	4	; select bank4
  4932  03E5  00D5               	movwf	_omega_TL^(0+512)
  4933  03E6                     l9007:
  4934                           
  4935                           ;main.c: 471:         flagCamera = 3;
  4936  03E6  3003               	movlw	3
  4937  03E7  0020               	movlb	0	; select bank0
  4938  03E8  00D3               	movwf	??_TimeLapseHandle
  4939  03E9  0853               	movf	??_TimeLapseHandle,w
  4940  03EA  0022               	movlb	2	; select bank2
  4941  03EB  00B5               	movwf	_flagCamera^(0+256)
  4942  03EC                     l1629:
  4943  03EC  0008               	return
  4944  03ED                     __end_of_TimeLapseHandle:
  4945                           
  4946                           	psect	text2
  4947  071F                     __ptext2:	
  4948 ;; *************** function _TimeLapseControl *****************
  4949 ;; Defined at:
  4950 ;;		line 475 in file "main.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;		None
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;  i               2   78[BANK1 ] int 
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  1    wreg      void 
  4957 ;; Registers used:
  4958 ;;		wreg, status,2, status,0, pclath, cstack
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4965 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4966 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4967 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4968 ;;Total ram usage:        4 bytes
  4969 ;; Hardware stack levels used: 1
  4970 ;; Hardware stack levels required when called: 6
  4971 ;; This function calls:
  4972 ;;		_EUSART1_Write
  4973 ;;		___fleq
  4974 ;;		___fltol
  4975 ;;		___xxtofl
  4976 ;; This function is called by:
  4977 ;;		_main
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           
  4982                           ;psect for function _TimeLapseControl
  4983  071F                     _TimeLapseControl:
  4984  071F                     l9009:	
  4985                           ;incstack = 0
  4986                           ; Regs used in _TimeLapseControl: [wreg+status,2+status,0+pclath+cstack]
  4987                           
  4988                           
  4989                           ;main.c: 477:     if(flagCamera == 3){
  4990  071F  3003               	movlw	3
  4991  0720  0022               	movlb	2	; select bank2
  4992  0721  0635               	xorwf	_flagCamera^(0+256),w
  4993  0722  1D03               	btfss	3,2
  4994  0723  2F25               	goto	u9491
  4995  0724  2F26               	goto	u9490
  4996  0725                     u9491:
  4997  0725  2FD3               	goto	l1640
  4998  0726                     u9490:
  4999  0726                     l9011:
  5000                           
  5001                           ;main.c: 478:         if(cnt_frame <= sum_frame){
  5002  0726  0020               	movlb	0	; select bank0
  5003  0727  085A               	movf	_cnt_frame,w
  5004  0728  0021               	movlb	1	; select bank1
  5005  0729  00EC               	movwf	??_TimeLapseControl^(0+128)
  5006  072A  01ED               	clrf	(??_TimeLapseControl^(0+128)+1)
  5007  072B  086D               	movf	(??_TimeLapseControl+1)^(0+128),w
  5008  072C  0022               	movlb	2	; select bank2
  5009  072D  0241               	subwf	(_sum_frame+1)^(0+256),w
  5010  072E  1D03               	skipz
  5011  072F  2F34               	goto	u9505
  5012  0730  0021               	movlb	1	; select bank1
  5013  0731  086C               	movf	??_TimeLapseControl^(0+128),w
  5014  0732  0022               	movlb	2	; select bank2
  5015  0733  0240               	subwf	_sum_frame^(0+256),w
  5016  0734                     u9505:
  5017  0734  1C03               	skipc
  5018  0735  2F37               	goto	u9501
  5019  0736  2F38               	goto	u9500
  5020  0737                     u9501:
  5021  0737  2FCD               	goto	l9035
  5022  0738                     u9500:
  5023  0738                     l9013:
  5024                           
  5025                           ;main.c: 479:             if(flag_stop == 0){
  5026  0738  0020               	movlb	0	; select bank0
  5027  0739  085E               	movf	_flag_stop,w
  5028  073A  1D03               	btfss	3,2
  5029  073B  2F3D               	goto	u9511
  5030  073C  2F3E               	goto	u9510
  5031  073D                     u9511:
  5032  073D  2FD3               	goto	l1640
  5033  073E                     u9510:
  5034  073E                     l9015:
  5035                           
  5036                           ;main.c: 480:                 cnt_frame++;
  5037  073E  3001               	movlw	1
  5038  073F  0021               	movlb	1	; select bank1
  5039  0740  00EC               	movwf	??_TimeLapseControl^(0+128)
  5040  0741  086C               	movf	??_TimeLapseControl^(0+128),w
  5041  0742  0020               	movlb	0	; select bank0
  5042  0743  07DA               	addwf	_cnt_frame,f
  5043  0744                     l9017:
  5044                           
  5045                           ;main.c: 481:                 EUSART1_Write('1');
  5046  0744  3031               	movlw	49
  5047  0745  319A  220B  3187   	fcall	_EUSART1_Write
  5048  0748                     l9019:
  5049                           
  5050                           ;main.c: 482:                 for(int i = 0; i < delay_frame; i++) _delay((unsigned long
      +                          )((1)*(16000000/4000.0)));
  5051  0748  0021               	movlb	1	; select bank1
  5052  0749  01EE               	clrf	TimeLapseControl@i^(0+128)
  5053  074A  01EF               	clrf	(TimeLapseControl@i+1)^(0+128)
  5054  074B  2F5A               	goto	l1635
  5055  074C                     l9021:
  5056  074C  3006               	movlw	6
  5057  074D  0021               	movlb	1	; select bank1
  5058  074E  00EC               	movwf	??_TimeLapseControl^(0+128)
  5059  074F  3030               	movlw	48
  5060  0750                     u9607:
  5061  0750  0B89               	decfsz	9,f
  5062  0751  2F50               	goto	u9607
  5063  0752  0BEC               	decfsz	??_TimeLapseControl^(0+128),f
  5064  0753  2F50               	goto	u9607
  5065  0754  0000               	nop
  5066  0755  3001               	movlw	1
  5067  0756  0021               	movlb	1	; select bank1
  5068  0757  07EE               	addwf	TimeLapseControl@i^(0+128),f
  5069  0758  3000               	movlw	0
  5070  0759  3DEF               	addwfc	(TimeLapseControl@i+1)^(0+128),f
  5071  075A                     l1635:
  5072  075A  0023               	movlb	3	; select bank3
  5073  075B  085E               	movf	(_delay_frame+1)^(0+384),w
  5074  075C  0021               	movlb	1	; select bank1
  5075  075D  026F               	subwf	(TimeLapseControl@i+1)^(0+128),w
  5076  075E  1D03               	skipz
  5077  075F  2F64               	goto	u9525
  5078  0760  0023               	movlb	3	; select bank3
  5079  0761  085D               	movf	_delay_frame^(0+384),w
  5080  0762  0021               	movlb	1	; select bank1
  5081  0763  026E               	subwf	TimeLapseControl@i^(0+128),w
  5082  0764                     u9525:
  5083  0764  1C03               	skipc
  5084  0765  2F67               	goto	u9521
  5085  0766  2F68               	goto	u9520
  5086  0767                     u9521:
  5087  0767  2F4C               	goto	l9021
  5088  0768                     u9520:
  5089  0768                     l9023:
  5090                           
  5091                           ;main.c: 483:                 if(totalTime != time_move) totalTime = time_move;
  5092  0768  0020               	movlb	0	; select bank0
  5093  0769  0858               	movf	_totalTime,w
  5094  076A  00C3               	movwf	___xxtofl@val
  5095  076B  0859               	movf	_totalTime+1,w
  5096  076C  00C4               	movwf	___xxtofl@val+1
  5097  076D  01C5               	clrf	___xxtofl@val+2
  5098  076E  01C6               	clrf	___xxtofl@val+3
  5099  076F  3000               	movlw	0
  5100  0770  319E  266F  3187   	fcall	___xxtofl
  5101  0773  0020               	movlb	0	; select bank0
  5102  0774  0846               	movf	?___xxtofl+3,w
  5103  0775  0021               	movlb	1	; select bank1
  5104  0776  00A3               	movwf	(___fleq@ff1+3)^(0+128)
  5105  0777  0020               	movlb	0	; select bank0
  5106  0778  0845               	movf	?___xxtofl+2,w
  5107  0779  0021               	movlb	1	; select bank1
  5108  077A  00A2               	movwf	(___fleq@ff1+2)^(0+128)
  5109  077B  0020               	movlb	0	; select bank0
  5110  077C  0844               	movf	?___xxtofl+1,w
  5111  077D  0021               	movlb	1	; select bank1
  5112  077E  00A1               	movwf	(___fleq@ff1+1)^(0+128)
  5113  077F  0020               	movlb	0	; select bank0
  5114  0780  0843               	movf	?___xxtofl,w
  5115  0781  0021               	movlb	1	; select bank1
  5116  0782  00A0               	movwf	___fleq@ff1^(0+128)
  5117  0783  0023               	movlb	3	; select bank3
  5118  0784  0840               	movf	(_time_move+3)^(0+384),w
  5119  0785  0021               	movlb	1	; select bank1
  5120  0786  00A7               	movwf	(___fleq@ff2+3)^(0+128)
  5121  0787  0023               	movlb	3	; select bank3
  5122  0788  083F               	movf	(_time_move+2)^(0+384),w
  5123  0789  0021               	movlb	1	; select bank1
  5124  078A  00A6               	movwf	(___fleq@ff2+2)^(0+128)
  5125  078B  0023               	movlb	3	; select bank3
  5126  078C  083E               	movf	(_time_move+1)^(0+384),w
  5127  078D  0021               	movlb	1	; select bank1
  5128  078E  00A5               	movwf	(___fleq@ff2+1)^(0+128)
  5129  078F  0023               	movlb	3	; select bank3
  5130  0790  083D               	movf	_time_move^(0+384),w
  5131  0791  0021               	movlb	1	; select bank1
  5132  0792  00A4               	movwf	___fleq@ff2^(0+128)
  5133  0793  319B  234A  3187   	fcall	___fleq
  5134  0796  1803               	btfsc	3,0
  5135  0797  2F99               	goto	u9531
  5136  0798  2F9A               	goto	u9530
  5137  0799                     u9531:
  5138  0799  2FB5               	goto	l9027
  5139  079A                     u9530:
  5140  079A                     l9025:
  5141  079A  0023               	movlb	3	; select bank3
  5142  079B  0840               	movf	(_time_move+3)^(0+384),w
  5143  079C  0021               	movlb	1	; select bank1
  5144  079D  00EB               	movwf	(___fltol@f1+3)^(0+128)
  5145  079E  0023               	movlb	3	; select bank3
  5146  079F  083F               	movf	(_time_move+2)^(0+384),w
  5147  07A0  0021               	movlb	1	; select bank1
  5148  07A1  00EA               	movwf	(___fltol@f1+2)^(0+128)
  5149  07A2  0023               	movlb	3	; select bank3
  5150  07A3  083E               	movf	(_time_move+1)^(0+384),w
  5151  07A4  0021               	movlb	1	; select bank1
  5152  07A5  00E9               	movwf	(___fltol@f1+1)^(0+128)
  5153  07A6  0023               	movlb	3	; select bank3
  5154  07A7  083D               	movf	_time_move^(0+384),w
  5155  07A8  0021               	movlb	1	; select bank1
  5156  07A9  00E8               	movwf	___fltol@f1^(0+128)
  5157  07AA  319B  2399  3187   	fcall	___fltol
  5158  07AD  0021               	movlb	1	; select bank1
  5159  07AE  0869               	movf	(?___fltol+1)^(0+128),w
  5160  07AF  0020               	movlb	0	; select bank0
  5161  07B0  00D9               	movwf	_totalTime+1
  5162  07B1  0021               	movlb	1	; select bank1
  5163  07B2  0868               	movf	?___fltol^(0+128),w
  5164  07B3  0020               	movlb	0	; select bank0
  5165  07B4  00D8               	movwf	_totalTime
  5166  07B5                     l9027:
  5167                           
  5168                           ;main.c: 484:                 flag_stop = 1;
  5169  07B5  0020               	movlb	0	; select bank0
  5170  07B6  01DE               	clrf	_flag_stop
  5171  07B7  0ADE               	incf	_flag_stop,f
  5172  07B8                     l9029:
  5173                           
  5174                           ;main.c: 485:                 cntTime = 0;
  5175  07B8  0022               	movlb	2	; select bank2
  5176  07B9  01B2               	clrf	_cntTime^(0+256)
  5177  07BA  01B3               	clrf	(_cntTime+1)^(0+256)
  5178  07BB                     l9031:
  5179                           
  5180                           ;main.c: 486:                 velocity_sys = velocity_TL;
  5181  07BB  3042               	movlw	66
  5182  07BC  0024               	movlb	4	; select bank4
  5183  07BD  00D4               	movwf	(_velocity_sys+3)^(0+512)
  5184  07BE  30C8               	movlw	200
  5185  07BF  00D3               	movwf	(_velocity_sys+2)^(0+512)
  5186  07C0  3000               	movlw	0
  5187  07C1  00D2               	movwf	(_velocity_sys+1)^(0+512)
  5188  07C2  3000               	movlw	0
  5189  07C3  00D1               	movwf	_velocity_sys^(0+512)
  5190  07C4                     l9033:
  5191                           
  5192                           ;main.c: 487:                 omega_sys = omega_TL;
  5193  07C4  0858               	movf	(_omega_TL+3)^(0+512),w
  5194  07C5  00D0               	movwf	(_omega_sys+3)^(0+512)
  5195  07C6  0857               	movf	(_omega_TL+2)^(0+512),w
  5196  07C7  00CF               	movwf	(_omega_sys+2)^(0+512)
  5197  07C8  0856               	movf	(_omega_TL+1)^(0+512),w
  5198  07C9  00CE               	movwf	(_omega_sys+1)^(0+512)
  5199  07CA  0855               	movf	_omega_TL^(0+512),w
  5200  07CB  00CD               	movwf	_omega_sys^(0+512)
  5201  07CC  2FD3               	goto	l1640
  5202  07CD                     l9035:
  5203                           
  5204                           ;main.c: 491:             EUSART1_Write('d');
  5205  07CD  3064               	movlw	100
  5206  07CE  319A  220B  3187   	fcall	_EUSART1_Write
  5207  07D1                     l9037:
  5208                           
  5209                           ;main.c: 492:             flagCamera = 0;
  5210  07D1  0022               	movlb	2	; select bank2
  5211  07D2  01B5               	clrf	_flagCamera^(0+256)
  5212  07D3                     l1640:
  5213  07D3  0008               	return
  5214  07D4                     __end_of_TimeLapseControl:
  5215                           
  5216                           	psect	text3
  5217  1A0B                     __ptext3:	
  5218 ;; *************** function _EUSART1_Write *****************
  5219 ;; Defined at:
  5220 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  txData          1    wreg     unsigned char 
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;  txData          1   14[BANK0 ] unsigned char 
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  1    wreg      void 
  5227 ;; Registers used:
  5228 ;;		wreg
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5235 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5237 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5238 ;;Total ram usage:        1 bytes
  5239 ;; Hardware stack levels used: 1
  5240 ;; Hardware stack levels required when called: 5
  5241 ;; This function calls:
  5242 ;;		Nothing
  5243 ;; This function is called by:
  5244 ;;		_TimeLapseControl
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           
  5249                           ;psect for function _EUSART1_Write
  5250  1A0B                     _EUSART1_Write:
  5251                           
  5252                           ;incstack = 0
  5253                           ; Regs used in _EUSART1_Write: [wreg]
  5254                           ;EUSART1_Write@txData stored from wreg
  5255  1A0B  0020               	movlb	0	; select bank0
  5256  1A0C  00AE               	movwf	EUSART1_Write@txData
  5257  1A0D                     l6783:
  5258  1A0D                     l531:	
  5259                           ;mcc_generated_files/eusart1.c: 135:     {;mcc_generated_files/eusart1.c: 136:     }
  5260                           
  5261                           
  5262                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  5263  1A0D  1E11               	btfss	17,4	;volatile
  5264  1A0E  2A10               	goto	u5511
  5265  1A0F  2A11               	goto	u5510
  5266  1A10                     u5511:
  5267  1A10  2A0D               	goto	l531
  5268  1A11                     u5510:
  5269  1A11                     l6785:
  5270                           
  5271                           ;mcc_generated_files/eusart1.c: 138:     TX1REG = txData;
  5272  1A11  082E               	movf	EUSART1_Write@txData,w
  5273  1A12  0023               	movlb	3	; select bank3
  5274  1A13  009A               	movwf	26	;volatile
  5275  1A14                     l534:
  5276  1A14  0008               	return
  5277  1A15                     __end_of_EUSART1_Write:
  5278                           
  5279                           	psect	text4
  5280  19A8                     __ptext4:	
  5281 ;; *************** function _SetUpModeHalf_step *****************
  5282 ;; Defined at:
  5283 ;;		line 190 in file "main.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;		None
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;		None
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  1    wreg      void 
  5290 ;; Registers used:
  5291 ;;		None
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5301 ;;Total ram usage:        0 bytes
  5302 ;; Hardware stack levels used: 1
  5303 ;; Hardware stack levels required when called: 5
  5304 ;; This function calls:
  5305 ;;		Nothing
  5306 ;; This function is called by:
  5307 ;;		_main
  5308 ;; This function uses a non-reentrant model
  5309 ;;
  5310                           
  5311                           
  5312                           ;psect for function _SetUpModeHalf_step
  5313  19A8                     _SetUpModeHalf_step:
  5314  19A8                     l6955:	
  5315                           ;incstack = 0
  5316                           ; Regs used in _SetUpModeHalf_step: []
  5317                           
  5318                           
  5319                           ;main.c: 192:     LATFbits.LATF0 = 1;
  5320  19A8  0027               	movlb	7	; select bank7
  5321  19A9  140C               	bsf	12,0	;volatile
  5322                           
  5323                           ;main.c: 193:     LATFbits.LATF1 = 0;
  5324  19AA  108C               	bcf	12,1	;volatile
  5325                           
  5326                           ;main.c: 194:     LATFbits.LATF4 = 1;
  5327  19AB  160C               	bsf	12,4	;volatile
  5328                           
  5329                           ;main.c: 195:     LATFbits.LATF5 = 0;
  5330  19AC  128C               	bcf	12,5	;volatile
  5331  19AD                     l1483:
  5332  19AD  0008               	return
  5333  19AE                     __end_of_SetUpModeHalf_step:
  5334                           
  5335                           	psect	text5
  5336  1A75                     __ptext5:	
  5337 ;; *************** function _SYSTEM_Initialize *****************
  5338 ;; Defined at:
  5339 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;		None
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;		None
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  1    wreg      void 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2, status,0, pclath, cstack
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5357 ;;Total ram usage:        0 bytes
  5358 ;; Hardware stack levels used: 1
  5359 ;; Hardware stack levels required when called: 7
  5360 ;; This function calls:
  5361 ;;		_EUSART1_Initialize
  5362 ;;		_EUSART2_Initialize
  5363 ;;		_I2C1_Initialize
  5364 ;;		_I2C2_Initialize
  5365 ;;		_OSCILLATOR_Initialize
  5366 ;;		_PIN_MANAGER_Initialize
  5367 ;;		_TMR1_Initialize
  5368 ;;		_WDT_Initialize
  5369 ;; This function is called by:
  5370 ;;		_main
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373                           
  5374                           
  5375                           ;psect for function _SYSTEM_Initialize
  5376  1A75                     _SYSTEM_Initialize:
  5377  1A75                     l6913:	
  5378                           ;incstack = 0
  5379                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5380                           
  5381                           
  5382                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
  5383  1A75  3199  21F7  319A   	fcall	_I2C1_Initialize
  5384                           
  5385                           ;mcc_generated_files/mcc.c: 54:     I2C2_Initialize();
  5386  1A78  319A  2201  319A   	fcall	_I2C2_Initialize
  5387                           
  5388                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  5389  1A7B  3188  2008  319A   	fcall	_PIN_MANAGER_Initialize
  5390                           
  5391                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  5392  1A7E  3188  2001  319A   	fcall	_OSCILLATOR_Initialize
  5393                           
  5394                           ;mcc_generated_files/mcc.c: 57:     WDT_Initialize();
  5395  1A81  3199  2197  319A   	fcall	_WDT_Initialize
  5396                           
  5397                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  5398  1A84  319A  22A8  319A   	fcall	_TMR1_Initialize
  5399                           
  5400                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  5401  1A87  3190  2007  319A   	fcall	_EUSART1_Initialize
  5402                           
  5403                           ;mcc_generated_files/mcc.c: 60:     EUSART2_Initialize();
  5404  1A8A  3187  27D4  319A   	fcall	_EUSART2_Initialize
  5405  1A8D                     l376:
  5406  1A8D  0008               	return
  5407  1A8E                     __end_of_SYSTEM_Initialize:
  5408                           
  5409                           	psect	text6
  5410  1997                     __ptext6:	
  5411 ;; *************** function _WDT_Initialize *****************
  5412 ;; Defined at:
  5413 ;;		line 73 in file "mcc_generated_files/mcc.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;		None
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;		None
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  1    wreg      void 
  5420 ;; Registers used:
  5421 ;;		wreg
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5431 ;;Total ram usage:        0 bytes
  5432 ;; Hardware stack levels used: 1
  5433 ;; Hardware stack levels required when called: 5
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_SYSTEM_Initialize
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           
  5442                           ;psect for function _WDT_Initialize
  5443  1997                     _WDT_Initialize:
  5444  1997                     l6727:	
  5445                           ;incstack = 0
  5446                           ; Regs used in _WDT_Initialize: [wreg]
  5447                           
  5448                           
  5449                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x16;
  5450  1997  3016               	movlw	22
  5451  1998  0021               	movlb	1	; select bank1
  5452  1999  0097               	movwf	23	;volatile
  5453  199A                     l382:
  5454  199A  0008               	return
  5455  199B                     __end_of_WDT_Initialize:
  5456                           
  5457                           	psect	text7
  5458  1AA8                     __ptext7:	
  5459 ;; *************** function _TMR1_Initialize *****************
  5460 ;; Defined at:
  5461 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;		None
  5464 ;; Auto vars:     Size  Location     Type
  5465 ;;		None
  5466 ;; Return value:  Size  Location     Type
  5467 ;;                  1    wreg      void 
  5468 ;; Registers used:
  5469 ;;		wreg, status,2, status,0, pclath, cstack
  5470 ;; Tracked objects:
  5471 ;;		On entry : 0/0
  5472 ;;		On exit  : 0/0
  5473 ;;		Unchanged: 0/0
  5474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5479 ;;Total ram usage:        0 bytes
  5480 ;; Hardware stack levels used: 1
  5481 ;; Hardware stack levels required when called: 6
  5482 ;; This function calls:
  5483 ;;		_TMR1_SetInterruptHandler
  5484 ;; This function is called by:
  5485 ;;		_SYSTEM_Initialize
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489                           
  5490                           ;psect for function _TMR1_Initialize
  5491  1AA8                     _TMR1_Initialize:
  5492  1AA8                     l6729:	
  5493                           ;incstack = 0
  5494                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5495                           
  5496                           
  5497                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  5498  1AA8  0020               	movlb	0	; select bank0
  5499  1AA9  0199               	clrf	25	;volatile
  5500  1AAA                     l6731:
  5501                           
  5502                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xC1;
  5503  1AAA  30C1               	movlw	193
  5504  1AAB  0097               	movwf	23	;volatile
  5505  1AAC                     l6733:
  5506                           
  5507                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x80;
  5508  1AAC  3080               	movlw	128
  5509  1AAD  0096               	movwf	22	;volatile
  5510  1AAE                     l6735:
  5511                           
  5512                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  5513  1AAE  1011               	bcf	17,0	;volatile
  5514  1AAF                     l6737:
  5515                           
  5516                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  5517  1AAF  0817               	movf	23,w	;volatile
  5518  1AB0  0022               	movlb	2	; select bank2
  5519  1AB1  00E2               	movwf	(_timer1ReloadVal+1)^(0+256)	;volatile
  5520  1AB2  0020               	movlb	0	; select bank0
  5521  1AB3  0816               	movf	22,w	;volatile
  5522  1AB4  0022               	movlb	2	; select bank2
  5523  1AB5  00E1               	movwf	_timer1ReloadVal^(0+256)	;volatile
  5524  1AB6                     l6739:
  5525                           
  5526                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  5527  1AB6  0021               	movlb	1	; select bank1
  5528  1AB7  1411               	bsf	17,0	;volatile
  5529  1AB8                     l6741:
  5530                           
  5531                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  5532  1AB8  3003               	movlw	low _TMR1_DefaultInterruptHandler
  5533  1AB9  0020               	movlb	0	; select bank0
  5534  1ABA  00AE               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  5535  1ABB  3000               	movlw	high _TMR1_DefaultInterruptHandler
  5536  1ABC  00AF               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  5537  1ABD  3199  21E4  319A   	fcall	_TMR1_SetInterruptHandler
  5538  1AC0                     l6743:
  5539                           
  5540                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x41;
  5541  1AC0  3041               	movlw	65
  5542  1AC1  0020               	movlb	0	; select bank0
  5543  1AC2  0098               	movwf	24	;volatile
  5544  1AC3                     l411:
  5545  1AC3  0008               	return
  5546  1AC4                     __end_of_TMR1_Initialize:
  5547                           
  5548                           	psect	text8
  5549  19E4                     __ptext8:	
  5550 ;; *************** function _TMR1_SetInterruptHandler *****************
  5551 ;; Defined at:
  5552 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  InterruptHan    2   14[BANK0 ] PTR FTN()void 
  5555 ;;		 -> T1_ROBOT_ISR(1), TMR1_DefaultInterruptHandler(1), 
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;		None
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      void 
  5560 ;; Registers used:
  5561 ;;		wreg
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5567 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5570 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5571 ;;Total ram usage:        2 bytes
  5572 ;; Hardware stack levels used: 1
  5573 ;; Hardware stack levels required when called: 5
  5574 ;; This function calls:
  5575 ;;		Nothing
  5576 ;; This function is called by:
  5577 ;;		_TMR1_Initialize
  5578 ;;		_main
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           
  5583                           ;psect for function _TMR1_SetInterruptHandler
  5584  19E4                     _TMR1_SetInterruptHandler:
  5585  19E4                     l6215:	
  5586                           ;incstack = 0
  5587                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  5588                           
  5589                           
  5590                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  5591  19E4  0020               	movlb	0	; select bank0
  5592  19E5  082F               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  5593  19E6  0024               	movlb	4	; select bank4
  5594  19E7  00EE               	movwf	(_TMR1_InterruptHandler+1)^(0+512)
  5595  19E8  0020               	movlb	0	; select bank0
  5596  19E9  082E               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  5597  19EA  0024               	movlb	4	; select bank4
  5598  19EB  00ED               	movwf	_TMR1_InterruptHandler^(0+512)
  5599  19EC                     l444:
  5600  19EC  0008               	return
  5601  19ED                     __end_of_TMR1_SetInterruptHandler:
  5602                           
  5603                           	psect	text9
  5604  0808                     __ptext9:	
  5605 ;; *************** function _PIN_MANAGER_Initialize *****************
  5606 ;; Defined at:
  5607 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;		None
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;		None
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  1    wreg      void 
  5614 ;; Registers used:
  5615 ;;		wreg, status,2
  5616 ;; Tracked objects:
  5617 ;;		On entry : 0/0
  5618 ;;		On exit  : 0/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5625 ;;Total ram usage:        0 bytes
  5626 ;; Hardware stack levels used: 1
  5627 ;; Hardware stack levels required when called: 5
  5628 ;; This function calls:
  5629 ;;		Nothing
  5630 ;; This function is called by:
  5631 ;;		_SYSTEM_Initialize
  5632 ;; This function uses a non-reentrant model
  5633 ;;
  5634                           
  5635                           
  5636                           ;psect for function _PIN_MANAGER_Initialize
  5637  0808                     _PIN_MANAGER_Initialize:
  5638  0808                     l6691:	
  5639                           ;incstack = 0
  5640                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5641                           
  5642                           
  5643                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  5644  0808  0022               	movlb	2	; select bank2
  5645  0809  0190               	clrf	16	;volatile
  5646                           
  5647                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  5648  080A  018F               	clrf	15	;volatile
  5649                           
  5650                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  5651  080B  018C               	clrf	12	;volatile
  5652                           
  5653                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
  5654  080C  0027               	movlb	7	; select bank7
  5655  080D  018C               	clrf	12	;volatile
  5656                           
  5657                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
  5658  080E  0022               	movlb	2	; select bank2
  5659  080F  018D               	clrf	13	;volatile
  5660                           
  5661                           ;mcc_generated_files/pin_manager.c: 65:     LATG = 0x00;
  5662  0810  0027               	movlb	7	; select bank7
  5663  0811  018D               	clrf	13	;volatile
  5664                           
  5665                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
  5666  0812  0022               	movlb	2	; select bank2
  5667  0813  018E               	clrf	14	;volatile
  5668  0814                     l6693:
  5669                           
  5670                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0xFF;
  5671  0814  30FF               	movlw	255
  5672  0815  0021               	movlb	1	; select bank1
  5673  0816  0090               	movwf	16	;volatile
  5674  0817                     l6695:
  5675                           
  5676                           ;mcc_generated_files/pin_manager.c: 72:     TRISF = 0x00;
  5677  0817  0026               	movlb	6	; select bank6
  5678  0818  018C               	clrf	12	;volatile
  5679                           
  5680                           ;mcc_generated_files/pin_manager.c: 73:     TRISA = 0xFF;
  5681  0819  30FF               	movlw	255
  5682  081A  0021               	movlb	1	; select bank1
  5683  081B  008C               	movwf	12	;volatile
  5684                           
  5685                           ;mcc_generated_files/pin_manager.c: 74:     TRISG = 0x3D;
  5686  081C  303D               	movlw	61
  5687  081D  0026               	movlb	6	; select bank6
  5688  081E  008D               	movwf	13	;volatile
  5689                           
  5690                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xF0;
  5691  081F  30F0               	movlw	240
  5692  0820  0021               	movlb	1	; select bank1
  5693  0821  008D               	movwf	13	;volatile
  5694                           
  5695                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0xBB;
  5696  0822  30BB               	movlw	187
  5697  0823  008E               	movwf	14	;volatile
  5698                           
  5699                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0xFF;
  5700  0824  30FF               	movlw	255
  5701  0825  008F               	movwf	15	;volatile
  5702                           
  5703                           ;mcc_generated_files/pin_manager.c: 82:     ANSELE = 0x07;
  5704  0826  3007               	movlw	7
  5705  0827  0023               	movlb	3	; select bank3
  5706  0828  0090               	movwf	16	;volatile
  5707                           
  5708                           ;mcc_generated_files/pin_manager.c: 83:     ANSELG = 0x18;
  5709  0829  3018               	movlw	24
  5710  082A  0028               	movlb	8	; select bank8
  5711  082B  008D               	movwf	13	;volatile
  5712                           
  5713                           ;mcc_generated_files/pin_manager.c: 84:     ANSELF = 0xFF;
  5714  082C  30FF               	movlw	255
  5715  082D  008C               	movwf	12	;volatile
  5716                           
  5717                           ;mcc_generated_files/pin_manager.c: 85:     ANSELA = 0x2F;
  5718  082E  302F               	movlw	47
  5719  082F  0023               	movlb	3	; select bank3
  5720  0830  008C               	movwf	12	;volatile
  5721  0831                     l6697:
  5722                           
  5723                           ;mcc_generated_files/pin_manager.c: 90:     WPUB = 0x00;
  5724  0831  0024               	movlb	4	; select bank4
  5725  0832  018D               	clrf	13	;volatile
  5726  0833                     l6699:
  5727                           
  5728                           ;mcc_generated_files/pin_manager.c: 91:     WPUG = 0x00;
  5729  0833  0029               	movlb	9	; select bank9
  5730  0834  018D               	clrf	13	;volatile
  5731  0835                     l6701:
  5732                           
  5733                           ;mcc_generated_files/pin_manager.c: 92:     OPTION_REGbits.nWPUEN = 1;
  5734  0835  0021               	movlb	1	; select bank1
  5735  0836  1795               	bsf	21,7	;volatile
  5736  0837                     l6703:
  5737                           
  5738                           ;mcc_generated_files/pin_manager.c: 98:     APFCON = 0x00;
  5739  0837  0022               	movlb	2	; select bank2
  5740  0838  019D               	clrf	29	;volatile
  5741  0839                     l346:
  5742  0839  0008               	return
  5743  083A                     __end_of_PIN_MANAGER_Initialize:
  5744                           
  5745                           	psect	text10
  5746  0801                     __ptext10:	
  5747 ;; *************** function _OSCILLATOR_Initialize *****************
  5748 ;; Defined at:
  5749 ;;		line 63 in file "mcc_generated_files/mcc.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;		None
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;		None
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  1    wreg      void 
  5756 ;; Registers used:
  5757 ;;		wreg, status,2
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5767 ;;Total ram usage:        0 bytes
  5768 ;; Hardware stack levels used: 1
  5769 ;; Hardware stack levels required when called: 5
  5770 ;; This function calls:
  5771 ;;		Nothing
  5772 ;; This function is called by:
  5773 ;;		_SYSTEM_Initialize
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           
  5778                           ;psect for function _OSCILLATOR_Initialize
  5779  0801                     _OSCILLATOR_Initialize:
  5780  0801                     l6721:	
  5781                           ;incstack = 0
  5782                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5783                           
  5784                           
  5785                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x7A;
  5786  0801  307A               	movlw	122
  5787  0802  0021               	movlb	1	; select bank1
  5788  0803  0099               	movwf	25	;volatile
  5789  0804                     l6723:
  5790                           
  5791                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  5792  0804  0198               	clrf	24	;volatile
  5793  0805                     l6725:
  5794                           
  5795                           ;mcc_generated_files/mcc.c: 70:     BORCON = 0x00;
  5796  0805  0022               	movlb	2	; select bank2
  5797  0806  0196               	clrf	22	;volatile
  5798  0807                     l379:
  5799  0807  0008               	return
  5800  0808                     __end_of_OSCILLATOR_Initialize:
  5801                           
  5802                           	psect	text11
  5803  1A01                     __ptext11:	
  5804 ;; *************** function _I2C2_Initialize *****************
  5805 ;; Defined at:
  5806 ;;		line 167 in file "mcc_generated_files/i2c2_master.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;		None
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;		None
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  1    wreg      void 
  5813 ;; Registers used:
  5814 ;;		wreg, status,2
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5824 ;;Total ram usage:        0 bytes
  5825 ;; Hardware stack levels used: 1
  5826 ;; Hardware stack levels required when called: 5
  5827 ;; This function calls:
  5828 ;;		Nothing
  5829 ;; This function is called by:
  5830 ;;		_SYSTEM_Initialize
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           
  5835                           ;psect for function _I2C2_Initialize
  5836  1A01                     _I2C2_Initialize:
  5837  1A01                     l6713:	
  5838                           ;incstack = 0
  5839                           ; Regs used in _I2C2_Initialize: [wreg+status,2]
  5840                           
  5841                           
  5842                           ;mcc_generated_files/i2c2_master.c: 169:     SSP2STAT = 0x80;
  5843  1A01  3080               	movlw	128
  5844  1A02  0024               	movlb	4	; select bank4
  5845  1A03  009C               	movwf	28	;volatile
  5846                           
  5847                           ;mcc_generated_files/i2c2_master.c: 170:     SSP2CON1 = 0x08;
  5848  1A04  3008               	movlw	8
  5849  1A05  009D               	movwf	29	;volatile
  5850  1A06                     l6715:
  5851                           
  5852                           ;mcc_generated_files/i2c2_master.c: 171:     SSP2CON2 = 0x00;
  5853  1A06  019E               	clrf	30	;volatile
  5854  1A07                     l6717:
  5855                           
  5856                           ;mcc_generated_files/i2c2_master.c: 172:     SSP2ADD = 0x27;
  5857  1A07  3027               	movlw	39
  5858  1A08  009A               	movwf	26	;volatile
  5859  1A09                     l6719:
  5860                           
  5861                           ;mcc_generated_files/i2c2_master.c: 173:     SSP2CON1bits.SSPEN = 0;
  5862  1A09  129D               	bcf	29,5	;volatile
  5863  1A0A                     l994:
  5864  1A0A  0008               	return
  5865  1A0B                     __end_of_I2C2_Initialize:
  5866                           
  5867                           	psect	text12
  5868  19F7                     __ptext12:	
  5869 ;; *************** function _I2C1_Initialize *****************
  5870 ;; Defined at:
  5871 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;		None
  5874 ;; Auto vars:     Size  Location     Type
  5875 ;;		None
  5876 ;; Return value:  Size  Location     Type
  5877 ;;                  1    wreg      void 
  5878 ;; Registers used:
  5879 ;;		wreg, status,2
  5880 ;; Tracked objects:
  5881 ;;		On entry : 0/0
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5889 ;;Total ram usage:        0 bytes
  5890 ;; Hardware stack levels used: 1
  5891 ;; Hardware stack levels required when called: 5
  5892 ;; This function calls:
  5893 ;;		Nothing
  5894 ;; This function is called by:
  5895 ;;		_SYSTEM_Initialize
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           
  5900                           ;psect for function _I2C1_Initialize
  5901  19F7                     _I2C1_Initialize:
  5902  19F7                     l6705:	
  5903                           ;incstack = 0
  5904                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  5905                           
  5906                           
  5907                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
  5908  19F7  3080               	movlw	128
  5909  19F8  0024               	movlb	4	; select bank4
  5910  19F9  0094               	movwf	20	;volatile
  5911                           
  5912                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
  5913  19FA  3008               	movlw	8
  5914  19FB  0095               	movwf	21	;volatile
  5915  19FC                     l6707:
  5916                           
  5917                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
  5918  19FC  0196               	clrf	22	;volatile
  5919  19FD                     l6709:
  5920                           
  5921                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x27;
  5922  19FD  3027               	movlw	39
  5923  19FE  0092               	movwf	18	;volatile
  5924  19FF                     l6711:
  5925                           
  5926                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
  5927  19FF  1295               	bcf	21,5	;volatile
  5928  1A00                     l659:
  5929  1A00  0008               	return
  5930  1A01                     __end_of_I2C1_Initialize:
  5931                           
  5932                           	psect	text13
  5933  07D4                     __ptext13:	
  5934 ;; *************** function _EUSART2_Initialize *****************
  5935 ;; Defined at:
  5936 ;;		line 66 in file "mcc_generated_files/eusart2.c"
  5937 ;; Parameters:    Size  Location     Type
  5938 ;;		None
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;		None
  5941 ;; Return value:  Size  Location     Type
  5942 ;;                  1    wreg      void 
  5943 ;; Registers used:
  5944 ;;		wreg, status,2, status,0, pclath, cstack
  5945 ;; Tracked objects:
  5946 ;;		On entry : 0/0
  5947 ;;		On exit  : 0/0
  5948 ;;		Unchanged: 0/0
  5949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5954 ;;Total ram usage:        0 bytes
  5955 ;; Hardware stack levels used: 1
  5956 ;; Hardware stack levels required when called: 6
  5957 ;; This function calls:
  5958 ;;		_EUSART2_SetErrorHandler
  5959 ;;		_EUSART2_SetFramingErrorHandler
  5960 ;;		_EUSART2_SetOverrunErrorHandler
  5961 ;; This function is called by:
  5962 ;;		_SYSTEM_Initialize
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966                           
  5967                           ;psect for function _EUSART2_Initialize
  5968  07D4                     _EUSART2_Initialize:
  5969  07D4                     l6755:	
  5970                           ;incstack = 0
  5971                           ; Regs used in _EUSART2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5972                           
  5973                           
  5974                           ;mcc_generated_files/eusart2.c: 71:     BAUD2CON = 0x08;
  5975  07D4  3008               	movlw	8
  5976  07D5  0029               	movlb	9	; select bank9
  5977  07D6  0097               	movwf	23	;volatile
  5978                           
  5979                           ;mcc_generated_files/eusart2.c: 74:     RC2STA = 0x90;
  5980  07D7  3090               	movlw	144
  5981  07D8  0095               	movwf	21	;volatile
  5982                           
  5983                           ;mcc_generated_files/eusart2.c: 77:     TX2STA = 0x24;
  5984  07D9  3024               	movlw	36
  5985  07DA  0096               	movwf	22	;volatile
  5986                           
  5987                           ;mcc_generated_files/eusart2.c: 80:     SP2BRGL = 0xA0;
  5988  07DB  30A0               	movlw	160
  5989  07DC  0093               	movwf	19	;volatile
  5990                           
  5991                           ;mcc_generated_files/eusart2.c: 83:     SP2BRGH = 0x01;
  5992  07DD  3001               	movlw	1
  5993  07DE  0094               	movwf	20	;volatile
  5994  07DF                     l6757:
  5995                           
  5996                           ;mcc_generated_files/eusart2.c: 86:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultFr
      +                          amingErrorHandler);
  5997  07DF  3000               	movlw	0
  5998  07E0  0020               	movlb	0	; select bank0
  5999  07E1  00AE               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler
  6000  07E2  3000               	movlw	0
  6001  07E3  00AF               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler+1
  6002  07E4  3199  21D2  3187   	fcall	_EUSART2_SetFramingErrorHandler
  6003  07E7                     l6759:
  6004                           
  6005                           ;mcc_generated_files/eusart2.c: 87:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultOv
      +                          errunErrorHandler);
  6006  07E7  3000               	movlw	0
  6007  07E8  0020               	movlb	0	; select bank0
  6008  07E9  00AE               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler
  6009  07EA  3000               	movlw	0
  6010  07EB  00AF               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler+1
  6011  07EC  3199  21DB  3187   	fcall	_EUSART2_SetOverrunErrorHandler
  6012  07EF                     l6761:
  6013                           
  6014                           ;mcc_generated_files/eusart2.c: 88:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHand
      +                          ler);
  6015  07EF  3000               	movlw	0
  6016  07F0  0020               	movlb	0	; select bank0
  6017  07F1  00AE               	movwf	EUSART2_SetErrorHandler@interruptHandler
  6018  07F2  3000               	movlw	0
  6019  07F3  00AF               	movwf	EUSART2_SetErrorHandler@interruptHandler+1
  6020  07F4  3199  21C9  3187   	fcall	_EUSART2_SetErrorHandler
  6021  07F7                     l6763:
  6022                           
  6023                           ;mcc_generated_files/eusart2.c: 90:     eusart2RxLastError.status = 0;
  6024  07F7  0022               	movlb	2	; select bank2
  6025  07F8  01BB               	clrf	_eusart2RxLastError^(0+256)	;volatile
  6026  07F9                     l1267:
  6027  07F9  0008               	return
  6028  07FA                     __end_of_EUSART2_Initialize:
  6029                           
  6030                           	psect	text14
  6031  19DB                     __ptext14:	
  6032 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  6033 ;; Defined at:
  6034 ;;		line 161 in file "mcc_generated_files/eusart2.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  6037 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;		None
  6040 ;; Return value:  Size  Location     Type
  6041 ;;                  1    wreg      void 
  6042 ;; Registers used:
  6043 ;;		wreg
  6044 ;; Tracked objects:
  6045 ;;		On entry : 0/0
  6046 ;;		On exit  : 0/0
  6047 ;;		Unchanged: 0/0
  6048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6049 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6052 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6053 ;;Total ram usage:        2 bytes
  6054 ;; Hardware stack levels used: 1
  6055 ;; Hardware stack levels required when called: 5
  6056 ;; This function calls:
  6057 ;;		Nothing
  6058 ;; This function is called by:
  6059 ;;		_EUSART2_Initialize
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           
  6064                           ;psect for function _EUSART2_SetOverrunErrorHandler
  6065  19DB                     _EUSART2_SetOverrunErrorHandler:
  6066  19DB                     l6225:	
  6067                           ;incstack = 0
  6068                           ; Regs used in _EUSART2_SetOverrunErrorHandler: [wreg]
  6069                           
  6070                           
  6071                           ;mcc_generated_files/eusart2.c: 162:     EUSART2_OverrunErrorHandler = interruptHandler;
  6072  19DB  0020               	movlb	0	; select bank0
  6073  19DC  082F               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler+1,w
  6074  19DD  0025               	movlb	5	; select bank5
  6075  19DE  00D5               	movwf	(_EUSART2_OverrunErrorHandler+1)^(0+640)
  6076  19DF  0020               	movlb	0	; select bank0
  6077  19E0  082E               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler,w
  6078  19E1  0025               	movlb	5	; select bank5
  6079  19E2  00D4               	movwf	_EUSART2_OverrunErrorHandler^(0+640)
  6080  19E3                     l1309:
  6081  19E3  0008               	return
  6082  19E4                     __end_of_EUSART2_SetOverrunErrorHandler:
  6083                           
  6084                           	psect	text15
  6085  19D2                     __ptext15:	
  6086 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  6087 ;; Defined at:
  6088 ;;		line 157 in file "mcc_generated_files/eusart2.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  6091 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;		None
  6094 ;; Return value:  Size  Location     Type
  6095 ;;                  1    wreg      void 
  6096 ;; Registers used:
  6097 ;;		wreg
  6098 ;; Tracked objects:
  6099 ;;		On entry : 0/0
  6100 ;;		On exit  : 0/0
  6101 ;;		Unchanged: 0/0
  6102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6103 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6106 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6107 ;;Total ram usage:        2 bytes
  6108 ;; Hardware stack levels used: 1
  6109 ;; Hardware stack levels required when called: 5
  6110 ;; This function calls:
  6111 ;;		Nothing
  6112 ;; This function is called by:
  6113 ;;		_EUSART2_Initialize
  6114 ;; This function uses a non-reentrant model
  6115 ;;
  6116                           
  6117                           
  6118                           ;psect for function _EUSART2_SetFramingErrorHandler
  6119  19D2                     _EUSART2_SetFramingErrorHandler:
  6120  19D2                     l6223:	
  6121                           ;incstack = 0
  6122                           ; Regs used in _EUSART2_SetFramingErrorHandler: [wreg]
  6123                           
  6124                           
  6125                           ;mcc_generated_files/eusart2.c: 158:     EUSART2_FramingErrorHandler = interruptHandler;
  6126  19D2  0020               	movlb	0	; select bank0
  6127  19D3  082F               	movf	EUSART2_SetFramingErrorHandler@interruptHandler+1,w
  6128  19D4  0025               	movlb	5	; select bank5
  6129  19D5  00D7               	movwf	(_EUSART2_FramingErrorHandler+1)^(0+640)
  6130  19D6  0020               	movlb	0	; select bank0
  6131  19D7  082E               	movf	EUSART2_SetFramingErrorHandler@interruptHandler,w
  6132  19D8  0025               	movlb	5	; select bank5
  6133  19D9  00D6               	movwf	_EUSART2_FramingErrorHandler^(0+640)
  6134  19DA                     l1306:
  6135  19DA  0008               	return
  6136  19DB                     __end_of_EUSART2_SetFramingErrorHandler:
  6137                           
  6138                           	psect	text16
  6139  19C9                     __ptext16:	
  6140 ;; *************** function _EUSART2_SetErrorHandler *****************
  6141 ;; Defined at:
  6142 ;;		line 165 in file "mcc_generated_files/eusart2.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  6145 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;		None
  6148 ;; Return value:  Size  Location     Type
  6149 ;;                  1    wreg      void 
  6150 ;; Registers used:
  6151 ;;		wreg
  6152 ;; Tracked objects:
  6153 ;;		On entry : 0/0
  6154 ;;		On exit  : 0/0
  6155 ;;		Unchanged: 0/0
  6156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6157 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6160 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6161 ;;Total ram usage:        2 bytes
  6162 ;; Hardware stack levels used: 1
  6163 ;; Hardware stack levels required when called: 5
  6164 ;; This function calls:
  6165 ;;		Nothing
  6166 ;; This function is called by:
  6167 ;;		_EUSART2_Initialize
  6168 ;; This function uses a non-reentrant model
  6169 ;;
  6170                           
  6171                           
  6172                           ;psect for function _EUSART2_SetErrorHandler
  6173  19C9                     _EUSART2_SetErrorHandler:
  6174  19C9                     l6227:	
  6175                           ;incstack = 0
  6176                           ; Regs used in _EUSART2_SetErrorHandler: [wreg]
  6177                           
  6178                           
  6179                           ;mcc_generated_files/eusart2.c: 166:     EUSART2_ErrorHandler = interruptHandler;
  6180  19C9  0020               	movlb	0	; select bank0
  6181  19CA  082F               	movf	EUSART2_SetErrorHandler@interruptHandler+1,w
  6182  19CB  0025               	movlb	5	; select bank5
  6183  19CC  00D3               	movwf	(_EUSART2_ErrorHandler+1)^(0+640)
  6184  19CD  0020               	movlb	0	; select bank0
  6185  19CE  082E               	movf	EUSART2_SetErrorHandler@interruptHandler,w
  6186  19CF  0025               	movlb	5	; select bank5
  6187  19D0  00D2               	movwf	_EUSART2_ErrorHandler^(0+640)
  6188  19D1                     l1312:
  6189  19D1  0008               	return
  6190  19D2                     __end_of_EUSART2_SetErrorHandler:
  6191                           
  6192                           	psect	text17
  6193  1007                     __ptext17:	
  6194 ;; *************** function _EUSART1_Initialize *****************
  6195 ;; Defined at:
  6196 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;		None
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;		None
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  1    wreg      void 
  6203 ;; Registers used:
  6204 ;;		wreg, status,2, status,0, pclath, cstack
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;Total ram usage:        0 bytes
  6215 ;; Hardware stack levels used: 1
  6216 ;; Hardware stack levels required when called: 6
  6217 ;; This function calls:
  6218 ;;		_EUSART1_SetErrorHandler
  6219 ;;		_EUSART1_SetFramingErrorHandler
  6220 ;;		_EUSART1_SetOverrunErrorHandler
  6221 ;; This function is called by:
  6222 ;;		_SYSTEM_Initialize
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           
  6227                           ;psect for function _EUSART1_Initialize
  6228  1007                     _EUSART1_Initialize:
  6229  1007                     l6745:	
  6230                           ;incstack = 0
  6231                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6232                           
  6233                           
  6234                           ;mcc_generated_files/eusart1.c: 71:     BAUD1CON = 0x08;
  6235  1007  3008               	movlw	8
  6236  1008  0023               	movlb	3	; select bank3
  6237  1009  009F               	movwf	31	;volatile
  6238                           
  6239                           ;mcc_generated_files/eusart1.c: 74:     RC1STA = 0x90;
  6240  100A  3090               	movlw	144
  6241  100B  009D               	movwf	29	;volatile
  6242                           
  6243                           ;mcc_generated_files/eusart1.c: 77:     TX1STA = 0x24;
  6244  100C  3024               	movlw	36
  6245  100D  009E               	movwf	30	;volatile
  6246                           
  6247                           ;mcc_generated_files/eusart1.c: 80:     SP1BRGL = 0xA0;
  6248  100E  30A0               	movlw	160
  6249  100F  009B               	movwf	27	;volatile
  6250                           
  6251                           ;mcc_generated_files/eusart1.c: 83:     SP1BRGH = 0x01;
  6252  1010  3001               	movlw	1
  6253  1011  009C               	movwf	28	;volatile
  6254  1012                     l6747:
  6255                           
  6256                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  6257  1012  3000               	movlw	0
  6258  1013  0020               	movlb	0	; select bank0
  6259  1014  00AE               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  6260  1015  3000               	movlw	0
  6261  1016  00AF               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  6262  1017  3199  21B7  3190   	fcall	_EUSART1_SetFramingErrorHandler
  6263  101A                     l6749:
  6264                           
  6265                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  6266  101A  3000               	movlw	0
  6267  101B  0020               	movlb	0	; select bank0
  6268  101C  00AE               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  6269  101D  3000               	movlw	0
  6270  101E  00AF               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  6271  101F  3199  21C0  3190   	fcall	_EUSART1_SetOverrunErrorHandler
  6272  1022                     l6751:
  6273                           
  6274                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  6275  1022  3000               	movlw	0
  6276  1023  0020               	movlb	0	; select bank0
  6277  1024  00AE               	movwf	EUSART1_SetErrorHandler@interruptHandler
  6278  1025  3000               	movlw	0
  6279  1026  00AF               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  6280  1027  3199  21AE  3190   	fcall	_EUSART1_SetErrorHandler
  6281  102A                     l6753:
  6282                           
  6283                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  6284  102A  0020               	movlb	0	; select bank0
  6285  102B  01DF               	clrf	_eusart1RxLastError	;volatile
  6286  102C                     l507:
  6287  102C  0008               	return
  6288  102D                     __end_of_EUSART1_Initialize:
  6289                           
  6290                           	psect	text18
  6291  19C0                     __ptext18:	
  6292 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  6293 ;; Defined at:
  6294 ;;		line 161 in file "mcc_generated_files/eusart1.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  6297 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;		None
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  1    wreg      void 
  6302 ;; Registers used:
  6303 ;;		wreg
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6309 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6312 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6313 ;;Total ram usage:        2 bytes
  6314 ;; Hardware stack levels used: 1
  6315 ;; Hardware stack levels required when called: 5
  6316 ;; This function calls:
  6317 ;;		Nothing
  6318 ;; This function is called by:
  6319 ;;		_EUSART1_Initialize
  6320 ;; This function uses a non-reentrant model
  6321 ;;
  6322                           
  6323                           
  6324                           ;psect for function _EUSART1_SetOverrunErrorHandler
  6325  19C0                     _EUSART1_SetOverrunErrorHandler:
  6326  19C0                     l6219:	
  6327                           ;incstack = 0
  6328                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  6329                           
  6330                           
  6331                           ;mcc_generated_files/eusart1.c: 162:     EUSART1_OverrunErrorHandler = interruptHandler;
  6332  19C0  0020               	movlb	0	; select bank0
  6333  19C1  082F               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  6334  19C2  0025               	movlb	5	; select bank5
  6335  19C3  00DB               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+640)
  6336  19C4  0020               	movlb	0	; select bank0
  6337  19C5  082E               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  6338  19C6  0025               	movlb	5	; select bank5
  6339  19C7  00DA               	movwf	_EUSART1_OverrunErrorHandler^(0+640)
  6340  19C8                     l549:
  6341  19C8  0008               	return
  6342  19C9                     __end_of_EUSART1_SetOverrunErrorHandler:
  6343                           
  6344                           	psect	text19
  6345  19B7                     __ptext19:	
  6346 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  6347 ;; Defined at:
  6348 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  6349 ;; Parameters:    Size  Location     Type
  6350 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  6351 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;		None
  6354 ;; Return value:  Size  Location     Type
  6355 ;;                  1    wreg      void 
  6356 ;; Registers used:
  6357 ;;		wreg
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6363 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6366 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6367 ;;Total ram usage:        2 bytes
  6368 ;; Hardware stack levels used: 1
  6369 ;; Hardware stack levels required when called: 5
  6370 ;; This function calls:
  6371 ;;		Nothing
  6372 ;; This function is called by:
  6373 ;;		_EUSART1_Initialize
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           
  6378                           ;psect for function _EUSART1_SetFramingErrorHandler
  6379  19B7                     _EUSART1_SetFramingErrorHandler:
  6380  19B7                     l6217:	
  6381                           ;incstack = 0
  6382                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  6383                           
  6384                           
  6385                           ;mcc_generated_files/eusart1.c: 158:     EUSART1_FramingErrorHandler = interruptHandler;
  6386  19B7  0020               	movlb	0	; select bank0
  6387  19B8  082F               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  6388  19B9  0025               	movlb	5	; select bank5
  6389  19BA  00DD               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+640)
  6390  19BB  0020               	movlb	0	; select bank0
  6391  19BC  082E               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  6392  19BD  0025               	movlb	5	; select bank5
  6393  19BE  00DC               	movwf	_EUSART1_FramingErrorHandler^(0+640)
  6394  19BF                     l546:
  6395  19BF  0008               	return
  6396  19C0                     __end_of_EUSART1_SetFramingErrorHandler:
  6397                           
  6398                           	psect	text20
  6399  19AE                     __ptext20:	
  6400 ;; *************** function _EUSART1_SetErrorHandler *****************
  6401 ;; Defined at:
  6402 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  6405 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;		None
  6408 ;; Return value:  Size  Location     Type
  6409 ;;                  1    wreg      void 
  6410 ;; Registers used:
  6411 ;;		wreg
  6412 ;; Tracked objects:
  6413 ;;		On entry : 0/0
  6414 ;;		On exit  : 0/0
  6415 ;;		Unchanged: 0/0
  6416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6417 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6420 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6421 ;;Total ram usage:        2 bytes
  6422 ;; Hardware stack levels used: 1
  6423 ;; Hardware stack levels required when called: 5
  6424 ;; This function calls:
  6425 ;;		Nothing
  6426 ;; This function is called by:
  6427 ;;		_EUSART1_Initialize
  6428 ;; This function uses a non-reentrant model
  6429 ;;
  6430                           
  6431                           
  6432                           ;psect for function _EUSART1_SetErrorHandler
  6433  19AE                     _EUSART1_SetErrorHandler:
  6434  19AE                     l6221:	
  6435                           ;incstack = 0
  6436                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  6437                           
  6438                           
  6439                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_ErrorHandler = interruptHandler;
  6440  19AE  0020               	movlb	0	; select bank0
  6441  19AF  082F               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  6442  19B0  0025               	movlb	5	; select bank5
  6443  19B1  00D9               	movwf	(_EUSART1_ErrorHandler+1)^(0+640)
  6444  19B2  0020               	movlb	0	; select bank0
  6445  19B3  082E               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  6446  19B4  0025               	movlb	5	; select bank5
  6447  19B5  00D8               	movwf	_EUSART1_ErrorHandler^(0+640)
  6448  19B6                     l552:
  6449  19B6  0008               	return
  6450  19B7                     __end_of_EUSART1_SetErrorHandler:
  6451                           
  6452                           	psect	text21
  6453  083A                     __ptext21:	
  6454 ;; *************** function _ManualHandle *****************
  6455 ;; Defined at:
  6456 ;;		line 198 in file "main.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;		None
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;  j               2   22[BANK1 ] int 
  6461 ;;  j               2   20[BANK1 ] int 
  6462 ;;  i               2   24[BANK1 ] int 
  6463 ;;  bufferManual   20    0[BANK1 ] unsigned char [20]
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  1    wreg      void 
  6466 ;; Registers used:
  6467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6474 ;;      Locals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  6475 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6476 ;;      Totals:         0       1      26       0       0       0       0       0       0       0       0       0       
      +0       0
  6477 ;;Total ram usage:       27 bytes
  6478 ;; Hardware stack levels used: 1
  6479 ;; Hardware stack levels required when called: 7
  6480 ;; This function calls:
  6481 ;;		___xxtofl
  6482 ;;		_atoi
  6483 ;;		_strlen
  6484 ;; This function is called by:
  6485 ;;		_main
  6486 ;; This function uses a non-reentrant model
  6487 ;;
  6488                           
  6489                           
  6490                           ;psect for function _ManualHandle
  6491  083A                     _ManualHandle:
  6492  083A                     l8597:	
  6493                           ;incstack = 0
  6494                           ; Regs used in _ManualHandle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6495                           
  6496                           
  6497                           ;main.c: 200:     char bufferManual_t[20];;main.c: 201:     if((buffer_sys[0] == 'M') ||
      +                           (flagManual == 1)){
  6498  083A  304D               	movlw	77
  6499  083B  0025               	movlb	5	; select bank5
  6500  083C  0620               	xorwf	_buffer_sys^(0+640),w
  6501  083D  1903               	btfsc	3,2
  6502  083E  2840               	goto	u8711
  6503  083F  2841               	goto	u8710
  6504  0840                     u8711:
  6505  0840  2847               	goto	l1488
  6506  0841                     u8710:
  6507  0841                     l8599:
  6508  0841  0020               	movlb	0	; select bank0
  6509  0842  035D               	decf	_flagManual,w
  6510  0843  1D03               	btfss	3,2
  6511  0844  2846               	goto	u8721
  6512  0845  2847               	goto	u8720
  6513  0846                     u8721:
  6514  0846  2934               	goto	l1505
  6515  0847                     u8720:
  6516  0847                     l1488:
  6517                           
  6518                           ;main.c: 202:         flagManual = 1;
  6519  0847  0020               	movlb	0	; select bank0
  6520  0848  01DD               	clrf	_flagManual
  6521  0849  0ADD               	incf	_flagManual,f
  6522  084A                     l8601:
  6523                           
  6524                           ;main.c: 203:         for(int i = 0; i < strlen(buffer_sys); i++){
  6525  084A  0021               	movlb	1	; select bank1
  6526  084B  01B8               	clrf	ManualHandle@i^(0+128)
  6527  084C  01B9               	clrf	(ManualHandle@i+1)^(0+128)
  6528  084D  291E               	goto	l8641
  6529  084E                     l8603:
  6530                           
  6531                           ;main.c: 204:             if(buffer_sys[0] == 'M'){
  6532  084E  304D               	movlw	77
  6533  084F  0025               	movlb	5	; select bank5
  6534  0850  0620               	xorwf	_buffer_sys^(0+640),w
  6535  0851  1D03               	btfss	3,2
  6536  0852  2854               	goto	u8731
  6537  0853  2855               	goto	u8730
  6538  0854                     u8731:
  6539  0854  285B               	goto	l8607
  6540  0855                     u8730:
  6541  0855                     l8605:
  6542                           
  6543                           ;main.c: 205:                 buffer_sys[0] = '0';
  6544  0855  3030               	movlw	48
  6545  0856  0020               	movlb	0	; select bank0
  6546  0857  00D1               	movwf	??_ManualHandle
  6547  0858  0851               	movf	??_ManualHandle,w
  6548  0859  0025               	movlb	5	; select bank5
  6549  085A  00A0               	movwf	_buffer_sys^(0+640)
  6550  085B                     l8607:
  6551                           
  6552                           ;main.c: 207:             if((buffer_sys[i] == 'v') || (buffer_sys[i] == '#')){
  6553  085B  0021               	movlb	1	; select bank1
  6554  085C  0838               	movf	ManualHandle@i^(0+128),w
  6555  085D  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  6556  085E  0086               	movwf	6
  6557  085F  3002               	movlw	2	; select bank5/6
  6558  0860  0087               	movwf	7
  6559  0861  3076               	movlw	118
  6560  0862  0601               	xorwf	1,w
  6561  0863  1903               	btfsc	3,2
  6562  0864  2866               	goto	u8741
  6563  0865  2867               	goto	u8740
  6564  0866                     u8741:
  6565  0866  2872               	goto	l8611
  6566  0867                     u8740:
  6567  0867                     l8609:
  6568  0867  0838               	movf	ManualHandle@i^(0+128),w
  6569  0868  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  6570  0869  0086               	movwf	6
  6571  086A  3002               	movlw	2	; select bank5/6
  6572  086B  0087               	movwf	7
  6573  086C  3023               	movlw	35
  6574  086D  0601               	xorwf	1,w
  6575  086E  1D03               	btfss	3,2
  6576  086F  2871               	goto	u8751
  6577  0870  2872               	goto	u8750
  6578  0871                     u8751:
  6579  0871  2902               	goto	l8635
  6580  0872                     u8750:
  6581  0872                     l8611:
  6582                           
  6583                           ;main.c: 208:                 if((buffer_sys[i] == 'v')){
  6584  0872  0838               	movf	ManualHandle@i^(0+128),w
  6585  0873  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  6586  0874  0086               	movwf	6
  6587  0875  3002               	movlw	2	; select bank5/6
  6588  0876  0087               	movwf	7
  6589  0877  3076               	movlw	118
  6590  0878  0601               	xorwf	1,w
  6591  0879  1D03               	btfss	3,2
  6592  087A  287C               	goto	u8761
  6593  087B  287D               	goto	u8760
  6594  087C                     u8761:
  6595  087C  28C9               	goto	l8625
  6596  087D                     u8760:
  6597  087D                     l8613:
  6598                           
  6599                           ;main.c: 209:                     velManual = atoi(bufferManual_t);
  6600  087D  30A0               	movlw	low ManualHandle@bufferManual_t
  6601  087E  0020               	movlb	0	; select bank0
  6602  087F  00B4               	movwf	atoi@s
  6603  0880  3000               	movlw	high ManualHandle@bufferManual_t
  6604  0881  00B5               	movwf	atoi@s+1
  6605  0882  3190  202D  3188   	fcall	_atoi
  6606  0885  0020               	movlb	0	; select bank0
  6607  0886  0834               	movf	?_atoi,w
  6608  0887  00C3               	movwf	___xxtofl@val
  6609  0888  0835               	movf	?_atoi+1,w
  6610  0889  00C4               	movwf	___xxtofl@val+1
  6611  088A  0D89               	rlf	9,f
  6612  088B  3B89               	subwfb	9,f
  6613  088C  0989               	comf	9,f
  6614  088D  00C5               	movwf	___xxtofl@val+2
  6615  088E  00C6               	movwf	___xxtofl@val+3
  6616  088F  3001               	movlw	1
  6617  0890  319E  266F  3188   	fcall	___xxtofl
  6618  0893  0020               	movlb	0	; select bank0
  6619  0894  0846               	movf	?___xxtofl+3,w
  6620  0895  00D7               	movwf	_velManual+3
  6621  0896  0845               	movf	?___xxtofl+2,w
  6622  0897  00D6               	movwf	_velManual+2
  6623  0898  0844               	movf	?___xxtofl+1,w
  6624  0899  00D5               	movwf	_velManual+1
  6625  089A  0843               	movf	?___xxtofl,w
  6626  089B  00D4               	movwf	_velManual
  6627  089C                     l8615:
  6628                           
  6629                           ;main.c: 210:                     for(int j = 0; j < strlen(bufferManual_t);j++){
  6630  089C  0021               	movlb	1	; select bank1
  6631  089D  01B4               	clrf	ManualHandle@j^(0+128)
  6632  089E  01B5               	clrf	(ManualHandle@j+1)^(0+128)
  6633  089F  28B0               	goto	l8621
  6634  08A0                     l8617:
  6635                           
  6636                           ;main.c: 211:                         bufferManual_t[j] = ' ';
  6637  08A0  3020               	movlw	32
  6638  08A1  0020               	movlb	0	; select bank0
  6639  08A2  00D1               	movwf	??_ManualHandle
  6640  08A3  0021               	movlb	1	; select bank1
  6641  08A4  0834               	movf	ManualHandle@j^(0+128),w
  6642  08A5  3EA0               	addlw	(low (ManualHandle@bufferManual_t| 0))& (0+255)
  6643  08A6  0086               	movwf	6
  6644  08A7  0187               	clrf	7
  6645  08A8  0020               	movlb	0	; select bank0
  6646  08A9  0851               	movf	??_ManualHandle,w
  6647  08AA  0081               	movwf	1
  6648  08AB                     l8619:
  6649                           
  6650                           ;main.c: 212:                     }
  6651  08AB  3001               	movlw	1
  6652  08AC  0021               	movlb	1	; select bank1
  6653  08AD  07B4               	addwf	ManualHandle@j^(0+128),f
  6654  08AE  3000               	movlw	0
  6655  08AF  3DB5               	addwfc	(ManualHandle@j+1)^(0+128),f
  6656  08B0                     l8621:
  6657  08B0  30A0               	movlw	low ManualHandle@bufferManual_t
  6658  08B1  0020               	movlb	0	; select bank0
  6659  08B2  00AE               	movwf	strlen@s
  6660  08B3  3000               	movlw	high ManualHandle@bufferManual_t
  6661  08B4  00AF               	movwf	strlen@s+1
  6662  08B5  319A  228E  3188   	fcall	_strlen
  6663  08B8  0020               	movlb	0	; select bank0
  6664  08B9  082F               	movf	?_strlen+1,w
  6665  08BA  0021               	movlb	1	; select bank1
  6666  08BB  0235               	subwf	(ManualHandle@j+1)^(0+128),w
  6667  08BC  1D03               	skipz
  6668  08BD  28C2               	goto	u8775
  6669  08BE  0020               	movlb	0	; select bank0
  6670  08BF  082E               	movf	?_strlen,w
  6671  08C0  0021               	movlb	1	; select bank1
  6672  08C1  0234               	subwf	ManualHandle@j^(0+128),w
  6673  08C2                     u8775:
  6674  08C2  1C03               	skipc
  6675  08C3  28C5               	goto	u8771
  6676  08C4  28C6               	goto	u8770
  6677  08C5                     u8771:
  6678  08C5  28A0               	goto	l8617
  6679  08C6                     u8770:
  6680  08C6                     l8623:
  6681                           
  6682                           ;main.c: 213:                     cntManual = 0;
  6683  08C6  0022               	movlb	2	; select bank2
  6684  08C7  01B0               	clrf	_cntManual^(0+256)
  6685  08C8  01B1               	clrf	(_cntManual+1)^(0+256)
  6686  08C9                     l8625:
  6687                           
  6688                           ;main.c: 215:                 if(buffer_sys[i] == '#'){
  6689  08C9  0021               	movlb	1	; select bank1
  6690  08CA  0838               	movf	ManualHandle@i^(0+128),w
  6691  08CB  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  6692  08CC  0086               	movwf	6
  6693  08CD  3002               	movlw	2	; select bank5/6
  6694  08CE  0087               	movwf	7
  6695  08CF  3023               	movlw	35
  6696  08D0  0601               	xorwf	1,w
  6697  08D1  1D03               	btfss	3,2
  6698  08D2  28D4               	goto	u8781
  6699  08D3  28D5               	goto	u8780
  6700  08D4                     u8781:
  6701  08D4  2919               	goto	l8639
  6702  08D5                     u8780:
  6703  08D5                     l8627:
  6704                           
  6705                           ;main.c: 216:                     flagManual = 0;
  6706  08D5  0020               	movlb	0	; select bank0
  6707  08D6  01DD               	clrf	_flagManual
  6708                           
  6709                           ;main.c: 218:                     for(int j = 0; j < strlen(bufferManual_t);j++){
  6710  08D7  0021               	movlb	1	; select bank1
  6711  08D8  01B6               	clrf	ManualHandle@j_2313^(0+128)
  6712  08D9  01B7               	clrf	(ManualHandle@j_2313+1)^(0+128)
  6713  08DA  28EB               	goto	l8633
  6714  08DB                     l8629:
  6715                           
  6716                           ;main.c: 219:                         bufferManual_t[j] = ' ';
  6717  08DB  3020               	movlw	32
  6718  08DC  0020               	movlb	0	; select bank0
  6719  08DD  00D1               	movwf	??_ManualHandle
  6720  08DE  0021               	movlb	1	; select bank1
  6721  08DF  0836               	movf	ManualHandle@j_2313^(0+128),w
  6722  08E0  3EA0               	addlw	(low (ManualHandle@bufferManual_t| 0))& (0+255)
  6723  08E1  0086               	movwf	6
  6724  08E2  0187               	clrf	7
  6725  08E3  0020               	movlb	0	; select bank0
  6726  08E4  0851               	movf	??_ManualHandle,w
  6727  08E5  0081               	movwf	1
  6728  08E6                     l8631:
  6729                           
  6730                           ;main.c: 220:                     }
  6731  08E6  3001               	movlw	1
  6732  08E7  0021               	movlb	1	; select bank1
  6733  08E8  07B6               	addwf	ManualHandle@j_2313^(0+128),f
  6734  08E9  3000               	movlw	0
  6735  08EA  3DB7               	addwfc	(ManualHandle@j_2313+1)^(0+128),f
  6736  08EB                     l8633:
  6737  08EB  30A0               	movlw	low ManualHandle@bufferManual_t
  6738  08EC  0020               	movlb	0	; select bank0
  6739  08ED  00AE               	movwf	strlen@s
  6740  08EE  3000               	movlw	high ManualHandle@bufferManual_t
  6741  08EF  00AF               	movwf	strlen@s+1
  6742  08F0  319A  228E  3188   	fcall	_strlen
  6743  08F3  0020               	movlb	0	; select bank0
  6744  08F4  082F               	movf	?_strlen+1,w
  6745  08F5  0021               	movlb	1	; select bank1
  6746  08F6  0237               	subwf	(ManualHandle@j_2313+1)^(0+128),w
  6747  08F7  1D03               	skipz
  6748  08F8  28FD               	goto	u8795
  6749  08F9  0020               	movlb	0	; select bank0
  6750  08FA  082E               	movf	?_strlen,w
  6751  08FB  0021               	movlb	1	; select bank1
  6752  08FC  0236               	subwf	ManualHandle@j_2313^(0+128),w
  6753  08FD                     u8795:
  6754  08FD  1C03               	skipc
  6755  08FE  2900               	goto	u8791
  6756  08FF  2901               	goto	u8790
  6757  0900                     u8791:
  6758  0900  28DB               	goto	l8629
  6759  0901                     u8790:
  6760  0901  2919               	goto	l8639
  6761  0902                     l8635:
  6762                           
  6763                           ;main.c: 224:                 bufferManual_t[cntManual] = buffer_sys[i];
  6764  0902  0838               	movf	ManualHandle@i^(0+128),w
  6765  0903  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  6766  0904  0086               	movwf	6
  6767  0905  3002               	movlw	2	; select bank5/6
  6768  0906  0087               	movwf	7
  6769  0907  0801               	movf	1,w
  6770  0908  0020               	movlb	0	; select bank0
  6771  0909  00D1               	movwf	??_ManualHandle
  6772  090A  0022               	movlb	2	; select bank2
  6773  090B  0830               	movf	_cntManual^(0+256),w
  6774  090C  3EA0               	addlw	(low (ManualHandle@bufferManual_t| 0))& (0+255)
  6775  090D  0086               	movwf	6
  6776  090E  0187               	clrf	7
  6777  090F  0020               	movlb	0	; select bank0
  6778  0910  0851               	movf	??_ManualHandle,w
  6779  0911  0081               	movwf	1
  6780  0912                     l8637:
  6781                           
  6782                           ;main.c: 225:                 cntManual = cntManual + 1;
  6783  0912  0022               	movlb	2	; select bank2
  6784  0913  0830               	movf	_cntManual^(0+256),w
  6785  0914  3E01               	addlw	1
  6786  0915  00B0               	movwf	_cntManual^(0+256)
  6787  0916  3000               	movlw	0
  6788  0917  3D31               	addwfc	(_cntManual+1)^(0+256),w
  6789  0918  00B1               	movwf	(_cntManual+1)^(0+256)
  6790  0919                     l8639:
  6791                           
  6792                           ;main.c: 227:         }
  6793  0919  3001               	movlw	1
  6794  091A  0021               	movlb	1	; select bank1
  6795  091B  07B8               	addwf	ManualHandle@i^(0+128),f
  6796  091C  3000               	movlw	0
  6797  091D  3DB9               	addwfc	(ManualHandle@i+1)^(0+128),f
  6798  091E                     l8641:
  6799  091E  30A0               	movlw	low _buffer_sys
  6800  091F  0020               	movlb	0	; select bank0
  6801  0920  00AE               	movwf	strlen@s
  6802  0921  3002               	movlw	high _buffer_sys
  6803  0922  00AF               	movwf	strlen@s+1
  6804  0923  319A  228E  3188   	fcall	_strlen
  6805  0926  0020               	movlb	0	; select bank0
  6806  0927  082F               	movf	?_strlen+1,w
  6807  0928  0021               	movlb	1	; select bank1
  6808  0929  0239               	subwf	(ManualHandle@i+1)^(0+128),w
  6809  092A  1D03               	skipz
  6810  092B  2930               	goto	u8805
  6811  092C  0020               	movlb	0	; select bank0
  6812  092D  082E               	movf	?_strlen,w
  6813  092E  0021               	movlb	1	; select bank1
  6814  092F  0238               	subwf	ManualHandle@i^(0+128),w
  6815  0930                     u8805:
  6816  0930  1C03               	skipc
  6817  0931  2933               	goto	u8801
  6818  0932  2934               	goto	u8800
  6819  0933                     u8801:
  6820  0933  284E               	goto	l8603
  6821  0934                     u8800:
  6822  0934                     l1505:
  6823  0934  0008               	return
  6824  0935                     __end_of_ManualHandle:
  6825                           
  6826                           	psect	text22
  6827  143C                     __ptext22:	
  6828 ;; *************** function _ManualControl *****************
  6829 ;; Defined at:
  6830 ;;		line 231 in file "main.c"
  6831 ;; Parameters:    Size  Location     Type
  6832 ;;		None
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;		None
  6835 ;; Return value:  Size  Location     Type
  6836 ;;                  1    wreg      void 
  6837 ;; Registers used:
  6838 ;;		wreg, status,2, status,0, pclath, cstack
  6839 ;; Tracked objects:
  6840 ;;		On entry : 0/0
  6841 ;;		On exit  : 0/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6848 ;;Total ram usage:        0 bytes
  6849 ;; Hardware stack levels used: 1
  6850 ;; Hardware stack levels required when called: 6
  6851 ;; This function calls:
  6852 ;;		___fleq
  6853 ;;		___flge
  6854 ;;		___flneg
  6855 ;; This function is called by:
  6856 ;;		_main
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860                           
  6861                           ;psect for function _ManualControl
  6862  143C                     _ManualControl:
  6863  143C                     l8643:	
  6864                           ;incstack = 0
  6865                           ; Regs used in _ManualControl: [wreg+status,2+status,0+pclath+cstack]
  6866                           
  6867                           
  6868                           ;main.c: 233:     if(buffer_sys[0] == 'T'){
  6869  143C  3054               	movlw	84
  6870  143D  0025               	movlb	5	; select bank5
  6871  143E  0620               	xorwf	_buffer_sys^(0+640),w
  6872  143F  1D03               	btfss	3,2
  6873  1440  2C42               	goto	u8811
  6874  1441  2C43               	goto	u8810
  6875  1442                     u8811:
  6876  1442  2C97               	goto	l8657
  6877  1443                     u8810:
  6878  1443                     l8645:
  6879                           
  6880                           ;main.c: 234:         cnt_sys = 0;
  6881  1443  0022               	movlb	2	; select bank2
  6882  1444  01B4               	clrf	_cnt_sys^(0+256)
  6883  1445                     l8647:
  6884                           
  6885                           ;main.c: 235:         totalTime = 100000;
  6886  1445  30A0               	movlw	160
  6887  1446  0020               	movlb	0	; select bank0
  6888  1447  00D8               	movwf	_totalTime
  6889  1448  3086               	movlw	134
  6890  1449  00D9               	movwf	_totalTime+1
  6891  144A                     l8649:
  6892                           
  6893                           ;main.c: 236:         velManual_t = velManual;
  6894  144A  0857               	movf	_velManual+3,w
  6895  144B  0023               	movlb	3	; select bank3
  6896  144C  00D8               	movwf	(_velManual_t+3)^(0+384)
  6897  144D  0020               	movlb	0	; select bank0
  6898  144E  0856               	movf	_velManual+2,w
  6899  144F  0023               	movlb	3	; select bank3
  6900  1450  00D7               	movwf	(_velManual_t+2)^(0+384)
  6901  1451  0020               	movlb	0	; select bank0
  6902  1452  0855               	movf	_velManual+1,w
  6903  1453  0023               	movlb	3	; select bank3
  6904  1454  00D6               	movwf	(_velManual_t+1)^(0+384)
  6905  1455  0020               	movlb	0	; select bank0
  6906  1456  0854               	movf	_velManual,w
  6907  1457  0023               	movlb	3	; select bank3
  6908  1458  00D5               	movwf	_velManual_t^(0+384)
  6909  1459                     l8651:
  6910                           
  6911                           ;main.c: 237:         if(velManual < 0) velManual = -velManual;
  6912  1459  0020               	movlb	0	; select bank0
  6913  145A  0857               	movf	_velManual+3,w
  6914  145B  00B1               	movwf	___flge@ff1+3
  6915  145C  0856               	movf	_velManual+2,w
  6916  145D  00B0               	movwf	___flge@ff1+2
  6917  145E  0855               	movf	_velManual+1,w
  6918  145F  00AF               	movwf	___flge@ff1+1
  6919  1460  0854               	movf	_velManual,w
  6920  1461  00AE               	movwf	___flge@ff1
  6921  1462  3000               	movlw	0
  6922  1463  00B5               	movwf	___flge@ff2+3
  6923  1464  3000               	movlw	0
  6924  1465  00B4               	movwf	___flge@ff2+2
  6925  1466  3000               	movlw	0
  6926  1467  00B3               	movwf	___flge@ff2+1
  6927  1468  3000               	movlw	0
  6928  1469  00B2               	movwf	___flge@ff2
  6929  146A  319C  24AD  3194   	fcall	___flge
  6930  146D  1803               	btfsc	3,0
  6931  146E  2C70               	goto	u8821
  6932  146F  2C71               	goto	u8820
  6933  1470                     u8821:
  6934  1470  2C86               	goto	l8655
  6935  1471                     u8820:
  6936  1471                     l8653:
  6937  1471  0020               	movlb	0	; select bank0
  6938  1472  0857               	movf	_velManual+3,w
  6939  1473  00B1               	movwf	___flneg@f1+3
  6940  1474  0856               	movf	_velManual+2,w
  6941  1475  00B0               	movwf	___flneg@f1+2
  6942  1476  0855               	movf	_velManual+1,w
  6943  1477  00AF               	movwf	___flneg@f1+1
  6944  1478  0854               	movf	_velManual,w
  6945  1479  00AE               	movwf	___flneg@f1
  6946  147A  319A  2215  3194   	fcall	___flneg
  6947  147D  0020               	movlb	0	; select bank0
  6948  147E  0831               	movf	?___flneg+3,w
  6949  147F  00D7               	movwf	_velManual+3
  6950  1480  0830               	movf	?___flneg+2,w
  6951  1481  00D6               	movwf	_velManual+2
  6952  1482  082F               	movf	?___flneg+1,w
  6953  1483  00D5               	movwf	_velManual+1
  6954  1484  082E               	movf	?___flneg,w
  6955  1485  00D4               	movwf	_velManual
  6956  1486                     l8655:
  6957                           
  6958                           ;main.c: 238:         velocity_sys = velManual;
  6959  1486  0020               	movlb	0	; select bank0
  6960  1487  0857               	movf	_velManual+3,w
  6961  1488  0024               	movlb	4	; select bank4
  6962  1489  00D4               	movwf	(_velocity_sys+3)^(0+512)
  6963  148A  0020               	movlb	0	; select bank0
  6964  148B  0856               	movf	_velManual+2,w
  6965  148C  0024               	movlb	4	; select bank4
  6966  148D  00D3               	movwf	(_velocity_sys+2)^(0+512)
  6967  148E  0020               	movlb	0	; select bank0
  6968  148F  0855               	movf	_velManual+1,w
  6969  1490  0024               	movlb	4	; select bank4
  6970  1491  00D2               	movwf	(_velocity_sys+1)^(0+512)
  6971  1492  0020               	movlb	0	; select bank0
  6972  1493  0854               	movf	_velManual,w
  6973  1494  0024               	movlb	4	; select bank4
  6974  1495  00D1               	movwf	_velocity_sys^(0+512)
  6975                           
  6976                           ;main.c: 241:     }
  6977  1496  2E07               	goto	l1522
  6978  1497                     l8657:
  6979  1497  3042               	movlw	66
  6980  1498  0620               	xorwf	_buffer_sys^(0+640),w
  6981  1499  1D03               	btfss	3,2
  6982  149A  2C9C               	goto	u8831
  6983  149B  2C9D               	goto	u8830
  6984  149C                     u8831:
  6985  149C  2CCC               	goto	l8671
  6986  149D                     u8830:
  6987  149D                     l8659:
  6988                           
  6989                           ;main.c: 243:         cnt_sys = 0;
  6990  149D  0022               	movlb	2	; select bank2
  6991  149E  01B4               	clrf	_cnt_sys^(0+256)
  6992  149F                     l8661:
  6993                           
  6994                           ;main.c: 244:         totalTime = 100000;
  6995  149F  30A0               	movlw	160
  6996  14A0  0020               	movlb	0	; select bank0
  6997  14A1  00D8               	movwf	_totalTime
  6998  14A2  3086               	movlw	134
  6999  14A3  00D9               	movwf	_totalTime+1
  7000  14A4                     l8663:
  7001                           
  7002                           ;main.c: 245:         velManual_t = velManual;
  7003  14A4  0857               	movf	_velManual+3,w
  7004  14A5  0023               	movlb	3	; select bank3
  7005  14A6  00D8               	movwf	(_velManual_t+3)^(0+384)
  7006  14A7  0020               	movlb	0	; select bank0
  7007  14A8  0856               	movf	_velManual+2,w
  7008  14A9  0023               	movlb	3	; select bank3
  7009  14AA  00D7               	movwf	(_velManual_t+2)^(0+384)
  7010  14AB  0020               	movlb	0	; select bank0
  7011  14AC  0855               	movf	_velManual+1,w
  7012  14AD  0023               	movlb	3	; select bank3
  7013  14AE  00D6               	movwf	(_velManual_t+1)^(0+384)
  7014  14AF  0020               	movlb	0	; select bank0
  7015  14B0  0854               	movf	_velManual,w
  7016  14B1  0023               	movlb	3	; select bank3
  7017  14B2  00D5               	movwf	_velManual_t^(0+384)
  7018  14B3                     l8665:
  7019                           
  7020                           ;main.c: 246:         if(velManual > 0) velManual = -velManual;
  7021  14B3  3000               	movlw	0
  7022  14B4  0020               	movlb	0	; select bank0
  7023  14B5  00B1               	movwf	___flge@ff1+3
  7024  14B6  3000               	movlw	0
  7025  14B7  00B0               	movwf	___flge@ff1+2
  7026  14B8  3000               	movlw	0
  7027  14B9  00AF               	movwf	___flge@ff1+1
  7028  14BA  3000               	movlw	0
  7029  14BB  00AE               	movwf	___flge@ff1
  7030  14BC  0857               	movf	_velManual+3,w
  7031  14BD  00B5               	movwf	___flge@ff2+3
  7032  14BE  0856               	movf	_velManual+2,w
  7033  14BF  00B4               	movwf	___flge@ff2+2
  7034  14C0  0855               	movf	_velManual+1,w
  7035  14C1  00B3               	movwf	___flge@ff2+1
  7036  14C2  0854               	movf	_velManual,w
  7037  14C3  00B2               	movwf	___flge@ff2
  7038  14C4  319C  24AD  3194   	fcall	___flge
  7039  14C7  1803               	btfsc	3,0
  7040  14C8  2CCA               	goto	u8841
  7041  14C9  2CCB               	goto	u8840
  7042  14CA                     u8841:
  7043  14CA  2C86               	goto	l8655
  7044  14CB                     u8840:
  7045  14CB  2C71               	goto	l8653
  7046  14CC                     l8671:
  7047  14CC  304C               	movlw	76
  7048  14CD  0620               	xorwf	_buffer_sys^(0+640),w
  7049  14CE  1D03               	btfss	3,2
  7050  14CF  2CD1               	goto	u8851
  7051  14D0  2CD2               	goto	u8850
  7052  14D1                     u8851:
  7053  14D1  2D3A               	goto	l8681
  7054  14D2                     u8850:
  7055  14D2                     l8673:
  7056                           
  7057                           ;main.c: 252:         cnt_sys = 0;
  7058  14D2  0022               	movlb	2	; select bank2
  7059  14D3  01B4               	clrf	_cnt_sys^(0+256)
  7060  14D4                     l8675:
  7061                           
  7062                           ;main.c: 253:         totalTime = 100000;
  7063  14D4  30A0               	movlw	160
  7064  14D5  0020               	movlb	0	; select bank0
  7065  14D6  00D8               	movwf	_totalTime
  7066  14D7  3086               	movlw	134
  7067  14D8  00D9               	movwf	_totalTime+1
  7068  14D9                     l8677:
  7069                           
  7070                           ;main.c: 254:         if(velManual != 0) velManual_t = velManual;
  7071  14D9  0857               	movf	_velManual+3,w
  7072  14DA  0021               	movlb	1	; select bank1
  7073  14DB  00A3               	movwf	(___fleq@ff1+3)^(0+128)
  7074  14DC  0020               	movlb	0	; select bank0
  7075  14DD  0856               	movf	_velManual+2,w
  7076  14DE  0021               	movlb	1	; select bank1
  7077  14DF  00A2               	movwf	(___fleq@ff1+2)^(0+128)
  7078  14E0  0020               	movlb	0	; select bank0
  7079  14E1  0855               	movf	_velManual+1,w
  7080  14E2  0021               	movlb	1	; select bank1
  7081  14E3  00A1               	movwf	(___fleq@ff1+1)^(0+128)
  7082  14E4  0020               	movlb	0	; select bank0
  7083  14E5  0854               	movf	_velManual,w
  7084  14E6  0021               	movlb	1	; select bank1
  7085  14E7  00A0               	movwf	___fleq@ff1^(0+128)
  7086  14E8  3000               	movlw	0
  7087  14E9  00A7               	movwf	(___fleq@ff2+3)^(0+128)
  7088  14EA  3000               	movlw	0
  7089  14EB  00A6               	movwf	(___fleq@ff2+2)^(0+128)
  7090  14EC  3000               	movlw	0
  7091  14ED  00A5               	movwf	(___fleq@ff2+1)^(0+128)
  7092  14EE  3000               	movlw	0
  7093  14EF  00A4               	movwf	___fleq@ff2^(0+128)
  7094  14F0  319B  234A  3194   	fcall	___fleq
  7095  14F3  1803               	btfsc	3,0
  7096  14F4  2CF6               	goto	u8861
  7097  14F5  2CF7               	goto	u8860
  7098  14F6                     u8861:
  7099  14F6  2D07               	goto	l1515
  7100  14F7                     u8860:
  7101  14F7                     l8679:
  7102  14F7  0020               	movlb	0	; select bank0
  7103  14F8  0857               	movf	_velManual+3,w
  7104  14F9  0023               	movlb	3	; select bank3
  7105  14FA  00D8               	movwf	(_velManual_t+3)^(0+384)
  7106  14FB  0020               	movlb	0	; select bank0
  7107  14FC  0856               	movf	_velManual+2,w
  7108  14FD  0023               	movlb	3	; select bank3
  7109  14FE  00D7               	movwf	(_velManual_t+2)^(0+384)
  7110  14FF  0020               	movlb	0	; select bank0
  7111  1500  0855               	movf	_velManual+1,w
  7112  1501  0023               	movlb	3	; select bank3
  7113  1502  00D6               	movwf	(_velManual_t+1)^(0+384)
  7114  1503  0020               	movlb	0	; select bank0
  7115  1504  0854               	movf	_velManual,w
  7116  1505  0023               	movlb	3	; select bank3
  7117  1506  00D5               	movwf	_velManual_t^(0+384)
  7118  1507                     l1515:
  7119                           
  7120                           ;main.c: 255:         velManual = 0;
  7121  1507  3000               	movlw	0
  7122  1508  0020               	movlb	0	; select bank0
  7123  1509  00D7               	movwf	_velManual+3
  7124  150A  3000               	movlw	0
  7125  150B  00D6               	movwf	_velManual+2
  7126  150C  3000               	movlw	0
  7127  150D  00D5               	movwf	_velManual+1
  7128  150E  3000               	movlw	0
  7129  150F  00D4               	movwf	_velManual
  7130                           
  7131                           ;main.c: 256:         omegaManual = 7/2;
  7132  1510  3040               	movlw	64
  7133  1511  0023               	movlb	3	; select bank3
  7134  1512  00D4               	movwf	(_omegaManual+3)^(0+384)
  7135  1513  3040               	movlw	64
  7136  1514  00D3               	movwf	(_omegaManual+2)^(0+384)
  7137  1515  3000               	movlw	0
  7138  1516  00D2               	movwf	(_omegaManual+1)^(0+384)
  7139  1517  3000               	movlw	0
  7140  1518  00D1               	movwf	_omegaManual^(0+384)
  7141                           
  7142                           ;main.c: 257:         velocity_sys = velManual;
  7143  1519  0020               	movlb	0	; select bank0
  7144  151A  0857               	movf	_velManual+3,w
  7145  151B  0024               	movlb	4	; select bank4
  7146  151C  00D4               	movwf	(_velocity_sys+3)^(0+512)
  7147  151D  0020               	movlb	0	; select bank0
  7148  151E  0856               	movf	_velManual+2,w
  7149  151F  0024               	movlb	4	; select bank4
  7150  1520  00D3               	movwf	(_velocity_sys+2)^(0+512)
  7151  1521  0020               	movlb	0	; select bank0
  7152  1522  0855               	movf	_velManual+1,w
  7153  1523  0024               	movlb	4	; select bank4
  7154  1524  00D2               	movwf	(_velocity_sys+1)^(0+512)
  7155  1525  0020               	movlb	0	; select bank0
  7156  1526  0854               	movf	_velManual,w
  7157  1527  0024               	movlb	4	; select bank4
  7158  1528  00D1               	movwf	_velocity_sys^(0+512)
  7159                           
  7160                           ;main.c: 258:         omega_sys = omegaManual;
  7161  1529  0023               	movlb	3	; select bank3
  7162  152A  0854               	movf	(_omegaManual+3)^(0+384),w
  7163  152B  0024               	movlb	4	; select bank4
  7164  152C  00D0               	movwf	(_omega_sys+3)^(0+512)
  7165  152D  0023               	movlb	3	; select bank3
  7166  152E  0853               	movf	(_omegaManual+2)^(0+384),w
  7167  152F  0024               	movlb	4	; select bank4
  7168  1530  00CF               	movwf	(_omega_sys+2)^(0+512)
  7169  1531  0023               	movlb	3	; select bank3
  7170  1532  0852               	movf	(_omegaManual+1)^(0+384),w
  7171  1533  0024               	movlb	4	; select bank4
  7172  1534  00CE               	movwf	(_omega_sys+1)^(0+512)
  7173  1535  0023               	movlb	3	; select bank3
  7174  1536  0851               	movf	_omegaManual^(0+384),w
  7175  1537  0024               	movlb	4	; select bank4
  7176  1538  00CD               	movwf	_omega_sys^(0+512)
  7177                           
  7178                           ;main.c: 259:     }
  7179  1539  2E07               	goto	l1522
  7180  153A                     l8681:
  7181  153A  3052               	movlw	82
  7182  153B  0620               	xorwf	_buffer_sys^(0+640),w
  7183  153C  1D03               	btfss	3,2
  7184  153D  2D3F               	goto	u8871
  7185  153E  2D40               	goto	u8870
  7186  153F                     u8871:
  7187  153F  2DA8               	goto	l8691
  7188  1540                     u8870:
  7189  1540                     l8683:
  7190                           
  7191                           ;main.c: 261:         cnt_sys = 0;
  7192  1540  0022               	movlb	2	; select bank2
  7193  1541  01B4               	clrf	_cnt_sys^(0+256)
  7194  1542                     l8685:
  7195                           
  7196                           ;main.c: 262:         totalTime = 100000;
  7197  1542  30A0               	movlw	160
  7198  1543  0020               	movlb	0	; select bank0
  7199  1544  00D8               	movwf	_totalTime
  7200  1545  3086               	movlw	134
  7201  1546  00D9               	movwf	_totalTime+1
  7202  1547                     l8687:
  7203                           
  7204                           ;main.c: 263:         if(velManual != 0) velManual_t = velManual;
  7205  1547  0857               	movf	_velManual+3,w
  7206  1548  0021               	movlb	1	; select bank1
  7207  1549  00A3               	movwf	(___fleq@ff1+3)^(0+128)
  7208  154A  0020               	movlb	0	; select bank0
  7209  154B  0856               	movf	_velManual+2,w
  7210  154C  0021               	movlb	1	; select bank1
  7211  154D  00A2               	movwf	(___fleq@ff1+2)^(0+128)
  7212  154E  0020               	movlb	0	; select bank0
  7213  154F  0855               	movf	_velManual+1,w
  7214  1550  0021               	movlb	1	; select bank1
  7215  1551  00A1               	movwf	(___fleq@ff1+1)^(0+128)
  7216  1552  0020               	movlb	0	; select bank0
  7217  1553  0854               	movf	_velManual,w
  7218  1554  0021               	movlb	1	; select bank1
  7219  1555  00A0               	movwf	___fleq@ff1^(0+128)
  7220  1556  3000               	movlw	0
  7221  1557  00A7               	movwf	(___fleq@ff2+3)^(0+128)
  7222  1558  3000               	movlw	0
  7223  1559  00A6               	movwf	(___fleq@ff2+2)^(0+128)
  7224  155A  3000               	movlw	0
  7225  155B  00A5               	movwf	(___fleq@ff2+1)^(0+128)
  7226  155C  3000               	movlw	0
  7227  155D  00A4               	movwf	___fleq@ff2^(0+128)
  7228  155E  319B  234A  3194   	fcall	___fleq
  7229  1561  1803               	btfsc	3,0
  7230  1562  2D64               	goto	u8881
  7231  1563  2D65               	goto	u8880
  7232  1564                     u8881:
  7233  1564  2D75               	goto	l1518
  7234  1565                     u8880:
  7235  1565                     l8689:
  7236  1565  0020               	movlb	0	; select bank0
  7237  1566  0857               	movf	_velManual+3,w
  7238  1567  0023               	movlb	3	; select bank3
  7239  1568  00D8               	movwf	(_velManual_t+3)^(0+384)
  7240  1569  0020               	movlb	0	; select bank0
  7241  156A  0856               	movf	_velManual+2,w
  7242  156B  0023               	movlb	3	; select bank3
  7243  156C  00D7               	movwf	(_velManual_t+2)^(0+384)
  7244  156D  0020               	movlb	0	; select bank0
  7245  156E  0855               	movf	_velManual+1,w
  7246  156F  0023               	movlb	3	; select bank3
  7247  1570  00D6               	movwf	(_velManual_t+1)^(0+384)
  7248  1571  0020               	movlb	0	; select bank0
  7249  1572  0854               	movf	_velManual,w
  7250  1573  0023               	movlb	3	; select bank3
  7251  1574  00D5               	movwf	_velManual_t^(0+384)
  7252  1575                     l1518:
  7253                           
  7254                           ;main.c: 264:         velManual = 0;
  7255  1575  3000               	movlw	0
  7256  1576  0020               	movlb	0	; select bank0
  7257  1577  00D7               	movwf	_velManual+3
  7258  1578  3000               	movlw	0
  7259  1579  00D6               	movwf	_velManual+2
  7260  157A  3000               	movlw	0
  7261  157B  00D5               	movwf	_velManual+1
  7262  157C  3000               	movlw	0
  7263  157D  00D4               	movwf	_velManual
  7264                           
  7265                           ;main.c: 265:         omegaManual = -7/2;
  7266  157E  30C0               	movlw	192
  7267  157F  0023               	movlb	3	; select bank3
  7268  1580  00D4               	movwf	(_omegaManual+3)^(0+384)
  7269  1581  3040               	movlw	64
  7270  1582  00D3               	movwf	(_omegaManual+2)^(0+384)
  7271  1583  3000               	movlw	0
  7272  1584  00D2               	movwf	(_omegaManual+1)^(0+384)
  7273  1585  3000               	movlw	0
  7274  1586  00D1               	movwf	_omegaManual^(0+384)
  7275                           
  7276                           ;main.c: 266:         velocity_sys = velManual;
  7277  1587  0020               	movlb	0	; select bank0
  7278  1588  0857               	movf	_velManual+3,w
  7279  1589  0024               	movlb	4	; select bank4
  7280  158A  00D4               	movwf	(_velocity_sys+3)^(0+512)
  7281  158B  0020               	movlb	0	; select bank0
  7282  158C  0856               	movf	_velManual+2,w
  7283  158D  0024               	movlb	4	; select bank4
  7284  158E  00D3               	movwf	(_velocity_sys+2)^(0+512)
  7285  158F  0020               	movlb	0	; select bank0
  7286  1590  0855               	movf	_velManual+1,w
  7287  1591  0024               	movlb	4	; select bank4
  7288  1592  00D2               	movwf	(_velocity_sys+1)^(0+512)
  7289  1593  0020               	movlb	0	; select bank0
  7290  1594  0854               	movf	_velManual,w
  7291  1595  0024               	movlb	4	; select bank4
  7292  1596  00D1               	movwf	_velocity_sys^(0+512)
  7293                           
  7294                           ;main.c: 267:         omega_sys = omegaManual;
  7295  1597  0023               	movlb	3	; select bank3
  7296  1598  0854               	movf	(_omegaManual+3)^(0+384),w
  7297  1599  0024               	movlb	4	; select bank4
  7298  159A  00D0               	movwf	(_omega_sys+3)^(0+512)
  7299  159B  0023               	movlb	3	; select bank3
  7300  159C  0853               	movf	(_omegaManual+2)^(0+384),w
  7301  159D  0024               	movlb	4	; select bank4
  7302  159E  00CF               	movwf	(_omega_sys+2)^(0+512)
  7303  159F  0023               	movlb	3	; select bank3
  7304  15A0  0852               	movf	(_omegaManual+1)^(0+384),w
  7305  15A1  0024               	movlb	4	; select bank4
  7306  15A2  00CE               	movwf	(_omega_sys+1)^(0+512)
  7307  15A3  0023               	movlb	3	; select bank3
  7308  15A4  0851               	movf	_omegaManual^(0+384),w
  7309  15A5  0024               	movlb	4	; select bank4
  7310  15A6  00CD               	movwf	_omega_sys^(0+512)
  7311                           
  7312                           ;main.c: 268:     }
  7313  15A7  2E07               	goto	l1522
  7314  15A8                     l8691:
  7315  15A8  304E               	movlw	78
  7316  15A9  0620               	xorwf	_buffer_sys^(0+640),w
  7317  15AA  1D03               	btfss	3,2
  7318  15AB  2DAD               	goto	u8891
  7319  15AC  2DAE               	goto	u8890
  7320  15AD                     u8891:
  7321  15AD  2E07               	goto	l1513
  7322  15AE                     u8890:
  7323  15AE                     l8693:
  7324                           
  7325                           ;main.c: 270:         cnt_sys = 0;
  7326  15AE  0022               	movlb	2	; select bank2
  7327  15AF  01B4               	clrf	_cnt_sys^(0+256)
  7328                           
  7329                           ;main.c: 271:         cntTime = 0;
  7330  15B0  01B2               	clrf	_cntTime^(0+256)
  7331  15B1  01B3               	clrf	(_cntTime+1)^(0+256)
  7332  15B2                     l8695:
  7333                           
  7334                           ;main.c: 272:         if(velManual_t != velManual) velManual = velManual_t;
  7335  15B2  0023               	movlb	3	; select bank3
  7336  15B3  0858               	movf	(_velManual_t+3)^(0+384),w
  7337  15B4  0021               	movlb	1	; select bank1
  7338  15B5  00A3               	movwf	(___fleq@ff1+3)^(0+128)
  7339  15B6  0023               	movlb	3	; select bank3
  7340  15B7  0857               	movf	(_velManual_t+2)^(0+384),w
  7341  15B8  0021               	movlb	1	; select bank1
  7342  15B9  00A2               	movwf	(___fleq@ff1+2)^(0+128)
  7343  15BA  0023               	movlb	3	; select bank3
  7344  15BB  0856               	movf	(_velManual_t+1)^(0+384),w
  7345  15BC  0021               	movlb	1	; select bank1
  7346  15BD  00A1               	movwf	(___fleq@ff1+1)^(0+128)
  7347  15BE  0023               	movlb	3	; select bank3
  7348  15BF  0855               	movf	_velManual_t^(0+384),w
  7349  15C0  0021               	movlb	1	; select bank1
  7350  15C1  00A0               	movwf	___fleq@ff1^(0+128)
  7351  15C2  0020               	movlb	0	; select bank0
  7352  15C3  0857               	movf	_velManual+3,w
  7353  15C4  0021               	movlb	1	; select bank1
  7354  15C5  00A7               	movwf	(___fleq@ff2+3)^(0+128)
  7355  15C6  0020               	movlb	0	; select bank0
  7356  15C7  0856               	movf	_velManual+2,w
  7357  15C8  0021               	movlb	1	; select bank1
  7358  15C9  00A6               	movwf	(___fleq@ff2+2)^(0+128)
  7359  15CA  0020               	movlb	0	; select bank0
  7360  15CB  0855               	movf	_velManual+1,w
  7361  15CC  0021               	movlb	1	; select bank1
  7362  15CD  00A5               	movwf	(___fleq@ff2+1)^(0+128)
  7363  15CE  0020               	movlb	0	; select bank0
  7364  15CF  0854               	movf	_velManual,w
  7365  15D0  0021               	movlb	1	; select bank1
  7366  15D1  00A4               	movwf	___fleq@ff2^(0+128)
  7367  15D2  319B  234A  3194   	fcall	___fleq
  7368  15D5  1803               	btfsc	3,0
  7369  15D6  2DD8               	goto	u8901
  7370  15D7  2DD9               	goto	u8900
  7371  15D8                     u8901:
  7372  15D8  2DE9               	goto	l1521
  7373  15D9                     u8900:
  7374  15D9                     l8697:
  7375  15D9  0023               	movlb	3	; select bank3
  7376  15DA  0858               	movf	(_velManual_t+3)^(0+384),w
  7377  15DB  0020               	movlb	0	; select bank0
  7378  15DC  00D7               	movwf	_velManual+3
  7379  15DD  0023               	movlb	3	; select bank3
  7380  15DE  0857               	movf	(_velManual_t+2)^(0+384),w
  7381  15DF  0020               	movlb	0	; select bank0
  7382  15E0  00D6               	movwf	_velManual+2
  7383  15E1  0023               	movlb	3	; select bank3
  7384  15E2  0856               	movf	(_velManual_t+1)^(0+384),w
  7385  15E3  0020               	movlb	0	; select bank0
  7386  15E4  00D5               	movwf	_velManual+1
  7387  15E5  0023               	movlb	3	; select bank3
  7388  15E6  0855               	movf	_velManual_t^(0+384),w
  7389  15E7  0020               	movlb	0	; select bank0
  7390  15E8  00D4               	movwf	_velManual
  7391  15E9                     l1521:
  7392                           
  7393                           ;main.c: 273:         omegaManual = 0;
  7394  15E9  3000               	movlw	0
  7395  15EA  0023               	movlb	3	; select bank3
  7396  15EB  00D4               	movwf	(_omegaManual+3)^(0+384)
  7397  15EC  3000               	movlw	0
  7398  15ED  00D3               	movwf	(_omegaManual+2)^(0+384)
  7399  15EE  3000               	movlw	0
  7400  15EF  00D2               	movwf	(_omegaManual+1)^(0+384)
  7401  15F0  3000               	movlw	0
  7402  15F1  00D1               	movwf	_omegaManual^(0+384)
  7403  15F2                     l8699:
  7404                           
  7405                           ;main.c: 274:         totalTime = 0;
  7406  15F2  0020               	movlb	0	; select bank0
  7407  15F3  01D8               	clrf	_totalTime
  7408  15F4  01D9               	clrf	_totalTime+1
  7409  15F5                     l8701:
  7410                           
  7411                           ;main.c: 275:         velocity_sys = 0;
  7412  15F5  3000               	movlw	0
  7413  15F6  0024               	movlb	4	; select bank4
  7414  15F7  00D4               	movwf	(_velocity_sys+3)^(0+512)
  7415  15F8  3000               	movlw	0
  7416  15F9  00D3               	movwf	(_velocity_sys+2)^(0+512)
  7417  15FA  3000               	movlw	0
  7418  15FB  00D2               	movwf	(_velocity_sys+1)^(0+512)
  7419  15FC  3000               	movlw	0
  7420  15FD  00D1               	movwf	_velocity_sys^(0+512)
  7421  15FE                     l8703:
  7422                           
  7423                           ;main.c: 276:         omega_sys = 0;
  7424  15FE  3000               	movlw	0
  7425  15FF  00D0               	movwf	(_omega_sys+3)^(0+512)
  7426  1600  3000               	movlw	0
  7427  1601  00CF               	movwf	(_omega_sys+2)^(0+512)
  7428  1602  3000               	movlw	0
  7429  1603  00CE               	movwf	(_omega_sys+1)^(0+512)
  7430  1604  3000               	movlw	0
  7431  1605  00CD               	movwf	_omega_sys^(0+512)
  7432  1606  2E07               	goto	l1522
  7433  1607                     l1513:
  7434  1607                     l1522:
  7435  1607  0008               	return
  7436  1608                     __end_of_ManualControl:
  7437                           
  7438                           	psect	text23
  7439  19ED                     __ptext23:	
  7440 ;; *************** function _EUSART2_Write *****************
  7441 ;; Defined at:
  7442 ;;		line 132 in file "mcc_generated_files/eusart2.c"
  7443 ;; Parameters:    Size  Location     Type
  7444 ;;  txData          1    wreg     unsigned char 
  7445 ;; Auto vars:     Size  Location     Type
  7446 ;;  txData          1   14[BANK0 ] unsigned char 
  7447 ;; Return value:  Size  Location     Type
  7448 ;;                  1    wreg      void 
  7449 ;; Registers used:
  7450 ;;		wreg
  7451 ;; Tracked objects:
  7452 ;;		On entry : 0/0
  7453 ;;		On exit  : 0/0
  7454 ;;		Unchanged: 0/0
  7455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7457 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7459 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7460 ;;Total ram usage:        1 bytes
  7461 ;; Hardware stack levels used: 1
  7462 ;; Hardware stack levels required when called: 5
  7463 ;; This function calls:
  7464 ;;		Nothing
  7465 ;; This function is called by:
  7466 ;;		_main
  7467 ;;		_putch
  7468 ;; This function uses a non-reentrant model
  7469 ;;
  7470                           
  7471                           
  7472                           ;psect for function _EUSART2_Write
  7473  19ED                     _EUSART2_Write:
  7474                           
  7475                           ;incstack = 0
  7476                           ; Regs used in _EUSART2_Write: [wreg]
  7477                           ;EUSART2_Write@txData stored from wreg
  7478  19ED  0020               	movlb	0	; select bank0
  7479  19EE  00AE               	movwf	EUSART2_Write@txData
  7480  19EF                     l6935:
  7481  19EF                     l1291:	
  7482                           ;mcc_generated_files/eusart2.c: 135:     {;mcc_generated_files/eusart2.c: 136:     }
  7483                           
  7484                           
  7485                           ;mcc_generated_files/eusart2.c: 134:     while(0 == PIR4bits.TX2IF)
  7486  19EF  1E14               	btfss	20,4	;volatile
  7487  19F0  29F2               	goto	u5801
  7488  19F1  29F3               	goto	u5800
  7489  19F2                     u5801:
  7490  19F2  29EF               	goto	l1291
  7491  19F3                     u5800:
  7492  19F3                     l6937:
  7493                           
  7494                           ;mcc_generated_files/eusart2.c: 138:     TX2REG = txData;
  7495  19F3  082E               	movf	EUSART2_Write@txData,w
  7496  19F4  0029               	movlb	9	; select bank9
  7497  19F5  0092               	movwf	18	;volatile
  7498  19F6                     l1294:
  7499  19F6  0008               	return
  7500  19F7                     __end_of_EUSART2_Write:
  7501                           
  7502                           	psect	text24
  7503  19A3                     __ptext24:	
  7504 ;; *************** function _EUSART1_is_rx_ready *****************
  7505 ;; Defined at:
  7506 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;		None
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;		None
  7511 ;; Return value:  Size  Location     Type
  7512 ;;                  1    wreg      _Bool 
  7513 ;; Registers used:
  7514 ;;		wreg, status,2, status,0
  7515 ;; Tracked objects:
  7516 ;;		On entry : 0/0
  7517 ;;		On exit  : 0/0
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7524 ;;Total ram usage:        0 bytes
  7525 ;; Hardware stack levels used: 1
  7526 ;; Hardware stack levels required when called: 5
  7527 ;; This function calls:
  7528 ;;		Nothing
  7529 ;; This function is called by:
  7530 ;;		_main
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           
  7535                           ;psect for function _EUSART1_is_rx_ready
  7536  19A3                     _EUSART1_is_rx_ready:
  7537  19A3                     l6919:	
  7538                           ;incstack = 0
  7539                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
  7540                           
  7541                           
  7542                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  7543  19A3  0020               	movlb	0	; select bank0
  7544  19A4  0E11               	swapf	17,w	;volatile
  7545  19A5  0C89               	rrf	9,f
  7546  19A6  3901               	andlw	1
  7547  19A7                     l515:
  7548  19A7  0008               	return
  7549  19A8                     __end_of_EUSART1_is_rx_ready:
  7550                           
  7551                           	psect	text25
  7552  1A3C                     __ptext25:	
  7553 ;; *************** function _EUSART1_Read *****************
  7554 ;; Defined at:
  7555 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  7556 ;; Parameters:    Size  Location     Type
  7557 ;;		None
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;		None
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  1    wreg      unsigned char 
  7562 ;; Registers used:
  7563 ;;		wreg, status,2
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7573 ;;Total ram usage:        0 bytes
  7574 ;; Hardware stack levels used: 1
  7575 ;; Hardware stack levels required when called: 5
  7576 ;; This function calls:
  7577 ;;		Nothing
  7578 ;; This function is called by:
  7579 ;;		_main
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           
  7584                           ;psect for function _EUSART1_Read
  7585  1A3C                     _EUSART1_Read:
  7586  1A3C                     l6923:	
  7587                           ;incstack = 0
  7588                           ; Regs used in _EUSART1_Read: [wreg+status,2]
  7589                           
  7590  1A3C                     l524:	
  7591                           ;mcc_generated_files/eusart1.c: 116:     {;mcc_generated_files/eusart1.c: 117:     }
  7592                           
  7593                           
  7594                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  7595  1A3C  0020               	movlb	0	; select bank0
  7596  1A3D  1E91               	btfss	17,5	;volatile
  7597  1A3E  2A40               	goto	u5781
  7598  1A3F  2A41               	goto	u5780
  7599  1A40                     u5781:
  7600  1A40  2A3C               	goto	l524
  7601  1A41                     u5780:
  7602  1A41                     l6925:
  7603                           
  7604                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  7605  1A41  01DF               	clrf	_eusart1RxLastError	;volatile
  7606  1A42                     l6927:
  7607                           
  7608                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RC1STAbits.OERR)
  7609  1A42  0023               	movlb	3	; select bank3
  7610  1A43  1C9D               	btfss	29,1	;volatile
  7611  1A44  2A46               	goto	u5791
  7612  1A45  2A47               	goto	u5790
  7613  1A46                     u5791:
  7614  1A46  2A49               	goto	l6931
  7615  1A47                     u5790:
  7616  1A47                     l6929:
  7617                           
  7618                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          C1STAbits.CREN = 0;
  7619  1A47  121D               	bcf	29,4	;volatile
  7620                           
  7621                           ;mcc_generated_files/eusart1.c: 126:         RC1STAbits.CREN = 1;
  7622  1A48  161D               	bsf	29,4	;volatile
  7623  1A49                     l6931:
  7624                           
  7625                           ;mcc_generated_files/eusart1.c: 129:     return RC1REG;
  7626  1A49  0819               	movf	25,w	;volatile
  7627  1A4A                     l528:
  7628  1A4A  0008               	return
  7629  1A4B                     __end_of_EUSART1_Read:
  7630                           
  7631                           	psect	text26
  7632  10DA                     __ptext26:	
  7633 ;; *************** function _AutoLineHandle *****************
  7634 ;; Defined at:
  7635 ;;		line 339 in file "main.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;		None
  7638 ;; Auto vars:     Size  Location     Type
  7639 ;;  j               2   26[BANK1 ] int 
  7640 ;;  j               2   24[BANK1 ] int 
  7641 ;;  j               2   22[BANK1 ] int 
  7642 ;;  j               2   20[BANK1 ] int 
  7643 ;;  i               2   28[BANK1 ] int 
  7644 ;;  bufferALine_   20    0[BANK1 ] unsigned char [20]
  7645 ;; Return value:  Size  Location     Type
  7646 ;;                  1    wreg      void 
  7647 ;; Registers used:
  7648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/0
  7651 ;;		On exit  : 0/0
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7655 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  7656 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7657 ;;      Totals:         0       1      30       0       0       0       0       0       0       0       0       0       
      +0       0
  7658 ;;Total ram usage:       31 bytes
  7659 ;; Hardware stack levels used: 1
  7660 ;; Hardware stack levels required when called: 7
  7661 ;; This function calls:
  7662 ;;		___xxtofl
  7663 ;;		_atoi
  7664 ;;		_strlen
  7665 ;; This function is called by:
  7666 ;;		_main
  7667 ;; This function uses a non-reentrant model
  7668 ;;
  7669                           
  7670                           
  7671                           ;psect for function _AutoLineHandle
  7672  10DA                     _AutoLineHandle:
  7673  10DA                     l8799:	
  7674                           ;incstack = 0
  7675                           ; Regs used in _AutoLineHandle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7676                           
  7677                           
  7678                           ;main.c: 341:     char bufferALine_t[20];;main.c: 342:     if((buffer_sys[0] == 'S') || 
      +                          (flagALine == 1)){
  7679  10DA  3053               	movlw	83
  7680  10DB  0025               	movlb	5	; select bank5
  7681  10DC  0620               	xorwf	_buffer_sys^(0+640),w
  7682  10DD  1903               	btfsc	3,2
  7683  10DE  28E0               	goto	u9091
  7684  10DF  28E1               	goto	u9090
  7685  10E0                     u9091:
  7686  10E0  28E7               	goto	l1559
  7687  10E1                     u9090:
  7688  10E1                     l8801:
  7689  10E1  0020               	movlb	0	; select bank0
  7690  10E2  035C               	decf	_flagALine,w
  7691  10E3  1D03               	btfss	3,2
  7692  10E4  28E6               	goto	u9101
  7693  10E5  28E7               	goto	u9100
  7694  10E6                     u9101:
  7695  10E6  2A87               	goto	l1586
  7696  10E7                     u9100:
  7697  10E7                     l1559:
  7698                           
  7699                           ;main.c: 343:         flagALine = 1;
  7700  10E7  0020               	movlb	0	; select bank0
  7701  10E8  01DC               	clrf	_flagALine
  7702  10E9  0ADC               	incf	_flagALine,f
  7703  10EA                     l8803:
  7704                           
  7705                           ;main.c: 344:         for(int i = 0; i < strlen(buffer_sys); i++){
  7706  10EA  0021               	movlb	1	; select bank1
  7707  10EB  01BC               	clrf	AutoLineHandle@i^(0+128)
  7708  10EC  01BD               	clrf	(AutoLineHandle@i+1)^(0+128)
  7709  10ED  2A71               	goto	l8881
  7710  10EE                     l8805:
  7711                           
  7712                           ;main.c: 345:             if(buffer_sys[0] == 'S'){
  7713  10EE  3053               	movlw	83
  7714  10EF  0025               	movlb	5	; select bank5
  7715  10F0  0620               	xorwf	_buffer_sys^(0+640),w
  7716  10F1  1D03               	btfss	3,2
  7717  10F2  28F4               	goto	u9111
  7718  10F3  28F5               	goto	u9110
  7719  10F4                     u9111:
  7720  10F4  28FB               	goto	l8809
  7721  10F5                     u9110:
  7722  10F5                     l8807:
  7723                           
  7724                           ;main.c: 346:                 buffer_sys[0] = '0';
  7725  10F5  3030               	movlw	48
  7726  10F6  0020               	movlb	0	; select bank0
  7727  10F7  00D1               	movwf	??_AutoLineHandle
  7728  10F8  0851               	movf	??_AutoLineHandle,w
  7729  10F9  0025               	movlb	5	; select bank5
  7730  10FA  00A0               	movwf	_buffer_sys^(0+640)
  7731  10FB                     l8809:
  7732                           
  7733                           ;main.c: 348:             if((buffer_sys[i] == 'v') || (buffer_sys[i] == 'l') || (buffer
      +                          _sys[i] == 'd') || (buffer_sys[i] == '#')){
  7734  10FB  0021               	movlb	1	; select bank1
  7735  10FC  083C               	movf	AutoLineHandle@i^(0+128),w
  7736  10FD  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  7737  10FE  0086               	movwf	6
  7738  10FF  3002               	movlw	2	; select bank5/6
  7739  1100  0087               	movwf	7
  7740  1101  3076               	movlw	118
  7741  1102  0601               	xorwf	1,w
  7742  1103  1903               	btfsc	3,2
  7743  1104  2906               	goto	u9121
  7744  1105  2907               	goto	u9120
  7745  1106                     u9121:
  7746  1106  2928               	goto	l8817
  7747  1107                     u9120:
  7748  1107                     l8811:
  7749  1107  083C               	movf	AutoLineHandle@i^(0+128),w
  7750  1108  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  7751  1109  0086               	movwf	6
  7752  110A  3002               	movlw	2	; select bank5/6
  7753  110B  0087               	movwf	7
  7754  110C  306C               	movlw	108
  7755  110D  0601               	xorwf	1,w
  7756  110E  1903               	btfsc	3,2
  7757  110F  2911               	goto	u9131
  7758  1110  2912               	goto	u9130
  7759  1111                     u9131:
  7760  1111  2928               	goto	l8817
  7761  1112                     u9130:
  7762  1112                     l8813:
  7763  1112  083C               	movf	AutoLineHandle@i^(0+128),w
  7764  1113  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  7765  1114  0086               	movwf	6
  7766  1115  3002               	movlw	2	; select bank5/6
  7767  1116  0087               	movwf	7
  7768  1117  3064               	movlw	100
  7769  1118  0601               	xorwf	1,w
  7770  1119  1903               	btfsc	3,2
  7771  111A  291C               	goto	u9141
  7772  111B  291D               	goto	u9140
  7773  111C                     u9141:
  7774  111C  2928               	goto	l8817
  7775  111D                     u9140:
  7776  111D                     l8815:
  7777  111D  083C               	movf	AutoLineHandle@i^(0+128),w
  7778  111E  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  7779  111F  0086               	movwf	6
  7780  1120  3002               	movlw	2	; select bank5/6
  7781  1121  0087               	movwf	7
  7782  1122  3023               	movlw	35
  7783  1123  0601               	xorwf	1,w
  7784  1124  1D03               	btfss	3,2
  7785  1125  2927               	goto	u9151
  7786  1126  2928               	goto	u9150
  7787  1127                     u9151:
  7788  1127  2A59               	goto	l8875
  7789  1128                     u9150:
  7790  1128                     l8817:
  7791                           
  7792                           ;main.c: 349:                 if((buffer_sys[i] == 'v')){
  7793  1128  083C               	movf	AutoLineHandle@i^(0+128),w
  7794  1129  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  7795  112A  0086               	movwf	6
  7796  112B  3002               	movlw	2	; select bank5/6
  7797  112C  0087               	movwf	7
  7798  112D  3076               	movlw	118
  7799  112E  0601               	xorwf	1,w
  7800  112F  1D03               	btfss	3,2
  7801  1130  2932               	goto	u9161
  7802  1131  2933               	goto	u9160
  7803  1132                     u9161:
  7804  1132  2985               	goto	l8831
  7805  1133                     u9160:
  7806  1133                     l8819:
  7807                           
  7808                           ;main.c: 350:                     velALine = atoi(bufferALine_t);
  7809  1133  30A0               	movlw	low AutoLineHandle@bufferALine_t
  7810  1134  0020               	movlb	0	; select bank0
  7811  1135  00B4               	movwf	atoi@s
  7812  1136  3000               	movlw	high AutoLineHandle@bufferALine_t
  7813  1137  00B5               	movwf	atoi@s+1
  7814  1138  3190  202D  3190   	fcall	_atoi
  7815  113B  0020               	movlb	0	; select bank0
  7816  113C  0834               	movf	?_atoi,w
  7817  113D  00C3               	movwf	___xxtofl@val
  7818  113E  0835               	movf	?_atoi+1,w
  7819  113F  00C4               	movwf	___xxtofl@val+1
  7820  1140  0D89               	rlf	9,f
  7821  1141  3B89               	subwfb	9,f
  7822  1142  0989               	comf	9,f
  7823  1143  00C5               	movwf	___xxtofl@val+2
  7824  1144  00C6               	movwf	___xxtofl@val+3
  7825  1145  3001               	movlw	1
  7826  1146  319E  266F  3190   	fcall	___xxtofl
  7827  1149  0020               	movlb	0	; select bank0
  7828  114A  0846               	movf	?___xxtofl+3,w
  7829  114B  0023               	movlb	3	; select bank3
  7830  114C  00D0               	movwf	(_velALine+3)^(0+384)
  7831  114D  0020               	movlb	0	; select bank0
  7832  114E  0845               	movf	?___xxtofl+2,w
  7833  114F  0023               	movlb	3	; select bank3
  7834  1150  00CF               	movwf	(_velALine+2)^(0+384)
  7835  1151  0020               	movlb	0	; select bank0
  7836  1152  0844               	movf	?___xxtofl+1,w
  7837  1153  0023               	movlb	3	; select bank3
  7838  1154  00CE               	movwf	(_velALine+1)^(0+384)
  7839  1155  0020               	movlb	0	; select bank0
  7840  1156  0843               	movf	?___xxtofl,w
  7841  1157  0023               	movlb	3	; select bank3
  7842  1158  00CD               	movwf	_velALine^(0+384)
  7843  1159                     l8821:
  7844                           
  7845                           ;main.c: 352:                     for(int j = 0; j < strlen(bufferALine_t);j++){
  7846  1159  0021               	movlb	1	; select bank1
  7847  115A  01B4               	clrf	AutoLineHandle@j^(0+128)
  7848  115B  01B5               	clrf	(AutoLineHandle@j+1)^(0+128)
  7849  115C  296D               	goto	l8827
  7850  115D                     l8823:
  7851                           
  7852                           ;main.c: 353:                         bufferALine_t[j] = ' ';
  7853  115D  3020               	movlw	32
  7854  115E  0020               	movlb	0	; select bank0
  7855  115F  00D1               	movwf	??_AutoLineHandle
  7856  1160  0021               	movlb	1	; select bank1
  7857  1161  0834               	movf	AutoLineHandle@j^(0+128),w
  7858  1162  3EA0               	addlw	(low (AutoLineHandle@bufferALine_t| 0))& (0+255)
  7859  1163  0086               	movwf	6
  7860  1164  0187               	clrf	7
  7861  1165  0020               	movlb	0	; select bank0
  7862  1166  0851               	movf	??_AutoLineHandle,w
  7863  1167  0081               	movwf	1
  7864  1168                     l8825:
  7865                           
  7866                           ;main.c: 354:                     }
  7867  1168  3001               	movlw	1
  7868  1169  0021               	movlb	1	; select bank1
  7869  116A  07B4               	addwf	AutoLineHandle@j^(0+128),f
  7870  116B  3000               	movlw	0
  7871  116C  3DB5               	addwfc	(AutoLineHandle@j+1)^(0+128),f
  7872  116D                     l8827:
  7873  116D  30A0               	movlw	low AutoLineHandle@bufferALine_t
  7874  116E  0020               	movlb	0	; select bank0
  7875  116F  00AE               	movwf	strlen@s
  7876  1170  3000               	movlw	high AutoLineHandle@bufferALine_t
  7877  1171  00AF               	movwf	strlen@s+1
  7878  1172  319A  228E  3190   	fcall	_strlen
  7879  1175  0020               	movlb	0	; select bank0
  7880  1176  082F               	movf	?_strlen+1,w
  7881  1177  0021               	movlb	1	; select bank1
  7882  1178  0235               	subwf	(AutoLineHandle@j+1)^(0+128),w
  7883  1179  1D03               	skipz
  7884  117A  297F               	goto	u9175
  7885  117B  0020               	movlb	0	; select bank0
  7886  117C  082E               	movf	?_strlen,w
  7887  117D  0021               	movlb	1	; select bank1
  7888  117E  0234               	subwf	AutoLineHandle@j^(0+128),w
  7889  117F                     u9175:
  7890  117F  1C03               	skipc
  7891  1180  2982               	goto	u9171
  7892  1181  2983               	goto	u9170
  7893  1182                     u9171:
  7894  1182  295D               	goto	l8823
  7895  1183                     u9170:
  7896  1183                     l8829:
  7897                           
  7898                           ;main.c: 355:                     cntALine = 0;
  7899  1183  0020               	movlb	0	; select bank0
  7900  1184  01DB               	clrf	_cntALine
  7901  1185                     l8831:
  7902                           
  7903                           ;main.c: 357:                 if(buffer_sys[i] == 'l'){
  7904  1185  0021               	movlb	1	; select bank1
  7905  1186  083C               	movf	AutoLineHandle@i^(0+128),w
  7906  1187  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  7907  1188  0086               	movwf	6
  7908  1189  3002               	movlw	2	; select bank5/6
  7909  118A  0087               	movwf	7
  7910  118B  306C               	movlw	108
  7911  118C  0601               	xorwf	1,w
  7912  118D  1D03               	btfss	3,2
  7913  118E  2990               	goto	u9181
  7914  118F  2991               	goto	u9180
  7915  1190                     u9181:
  7916  1190  29CD               	goto	l8845
  7917  1191                     u9180:
  7918  1191                     l8833:
  7919                           
  7920                           ;main.c: 358:                     length_ALine = atoi(bufferALine_t);
  7921  1191  30A0               	movlw	low AutoLineHandle@bufferALine_t
  7922  1192  0020               	movlb	0	; select bank0
  7923  1193  00B4               	movwf	atoi@s
  7924  1194  3000               	movlw	high AutoLineHandle@bufferALine_t
  7925  1195  00B5               	movwf	atoi@s+1
  7926  1196  3190  202D  3190   	fcall	_atoi
  7927  1199  0020               	movlb	0	; select bank0
  7928  119A  0835               	movf	?_atoi+1,w
  7929  119B  0023               	movlb	3	; select bank3
  7930  119C  00E2               	movwf	(_length_ALine+1)^(0+384)
  7931  119D  0020               	movlb	0	; select bank0
  7932  119E  0834               	movf	?_atoi,w
  7933  119F  0023               	movlb	3	; select bank3
  7934  11A0  00E1               	movwf	_length_ALine^(0+384)
  7935  11A1                     l8835:
  7936                           
  7937                           ;main.c: 360:                     for(int j = 0; j < strlen(bufferALine_t);j++){
  7938  11A1  0021               	movlb	1	; select bank1
  7939  11A2  01B6               	clrf	AutoLineHandle@j_2326^(0+128)
  7940  11A3  01B7               	clrf	(AutoLineHandle@j_2326+1)^(0+128)
  7941  11A4  29B5               	goto	l8841
  7942  11A5                     l8837:
  7943                           
  7944                           ;main.c: 361:                         bufferALine_t[j] = ' ';
  7945  11A5  3020               	movlw	32
  7946  11A6  0020               	movlb	0	; select bank0
  7947  11A7  00D1               	movwf	??_AutoLineHandle
  7948  11A8  0021               	movlb	1	; select bank1
  7949  11A9  0836               	movf	AutoLineHandle@j_2326^(0+128),w
  7950  11AA  3EA0               	addlw	(low (AutoLineHandle@bufferALine_t| 0))& (0+255)
  7951  11AB  0086               	movwf	6
  7952  11AC  0187               	clrf	7
  7953  11AD  0020               	movlb	0	; select bank0
  7954  11AE  0851               	movf	??_AutoLineHandle,w
  7955  11AF  0081               	movwf	1
  7956  11B0                     l8839:
  7957                           
  7958                           ;main.c: 362:                     }
  7959  11B0  3001               	movlw	1
  7960  11B1  0021               	movlb	1	; select bank1
  7961  11B2  07B6               	addwf	AutoLineHandle@j_2326^(0+128),f
  7962  11B3  3000               	movlw	0
  7963  11B4  3DB7               	addwfc	(AutoLineHandle@j_2326+1)^(0+128),f
  7964  11B5                     l8841:
  7965  11B5  30A0               	movlw	low AutoLineHandle@bufferALine_t
  7966  11B6  0020               	movlb	0	; select bank0
  7967  11B7  00AE               	movwf	strlen@s
  7968  11B8  3000               	movlw	high AutoLineHandle@bufferALine_t
  7969  11B9  00AF               	movwf	strlen@s+1
  7970  11BA  319A  228E  3190   	fcall	_strlen
  7971  11BD  0020               	movlb	0	; select bank0
  7972  11BE  082F               	movf	?_strlen+1,w
  7973  11BF  0021               	movlb	1	; select bank1
  7974  11C0  0237               	subwf	(AutoLineHandle@j_2326+1)^(0+128),w
  7975  11C1  1D03               	skipz
  7976  11C2  29C7               	goto	u9195
  7977  11C3  0020               	movlb	0	; select bank0
  7978  11C4  082E               	movf	?_strlen,w
  7979  11C5  0021               	movlb	1	; select bank1
  7980  11C6  0236               	subwf	AutoLineHandle@j_2326^(0+128),w
  7981  11C7                     u9195:
  7982  11C7  1C03               	skipc
  7983  11C8  29CA               	goto	u9191
  7984  11C9  29CB               	goto	u9190
  7985  11CA                     u9191:
  7986  11CA  29A5               	goto	l8837
  7987  11CB                     u9190:
  7988  11CB                     l8843:
  7989                           
  7990                           ;main.c: 363:                     cntALine = 0;
  7991  11CB  0020               	movlb	0	; select bank0
  7992  11CC  01DB               	clrf	_cntALine
  7993  11CD                     l8845:
  7994                           
  7995                           ;main.c: 365:                 if(buffer_sys[i] == 'd'){
  7996  11CD  0021               	movlb	1	; select bank1
  7997  11CE  083C               	movf	AutoLineHandle@i^(0+128),w
  7998  11CF  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  7999  11D0  0086               	movwf	6
  8000  11D1  3002               	movlw	2	; select bank5/6
  8001  11D2  0087               	movwf	7
  8002  11D3  3064               	movlw	100
  8003  11D4  0601               	xorwf	1,w
  8004  11D5  1D03               	btfss	3,2
  8005  11D6  29D8               	goto	u9201
  8006  11D7  29D9               	goto	u9200
  8007  11D8                     u9201:
  8008  11D8  2A12               	goto	l8859
  8009  11D9                     u9200:
  8010  11D9                     l8847:
  8011                           
  8012                           ;main.c: 366:                     direct_ALine = atoi(bufferALine_t);
  8013  11D9  30A0               	movlw	low AutoLineHandle@bufferALine_t
  8014  11DA  0020               	movlb	0	; select bank0
  8015  11DB  00B4               	movwf	atoi@s
  8016  11DC  3000               	movlw	high AutoLineHandle@bufferALine_t
  8017  11DD  00B5               	movwf	atoi@s+1
  8018  11DE  3190  202D  3190   	fcall	_atoi
  8019  11E1  0020               	movlb	0	; select bank0
  8020  11E2  0835               	movf	?_atoi+1,w
  8021  11E3  00E1               	movwf	_direct_ALine+1
  8022  11E4  0834               	movf	?_atoi,w
  8023  11E5  00E0               	movwf	_direct_ALine
  8024  11E6                     l8849:
  8025                           
  8026                           ;main.c: 368:                     for(int j = 0; j < strlen(bufferALine_t);j++){
  8027  11E6  0021               	movlb	1	; select bank1
  8028  11E7  01B8               	clrf	AutoLineHandle@j_2327^(0+128)
  8029  11E8  01B9               	clrf	(AutoLineHandle@j_2327+1)^(0+128)
  8030  11E9  29FA               	goto	l8855
  8031  11EA                     l8851:
  8032                           
  8033                           ;main.c: 369:                         bufferALine_t[j] = ' ';
  8034  11EA  3020               	movlw	32
  8035  11EB  0020               	movlb	0	; select bank0
  8036  11EC  00D1               	movwf	??_AutoLineHandle
  8037  11ED  0021               	movlb	1	; select bank1
  8038  11EE  0838               	movf	AutoLineHandle@j_2327^(0+128),w
  8039  11EF  3EA0               	addlw	(low (AutoLineHandle@bufferALine_t| 0))& (0+255)
  8040  11F0  0086               	movwf	6
  8041  11F1  0187               	clrf	7
  8042  11F2  0020               	movlb	0	; select bank0
  8043  11F3  0851               	movf	??_AutoLineHandle,w
  8044  11F4  0081               	movwf	1
  8045  11F5                     l8853:
  8046                           
  8047                           ;main.c: 370:                     }
  8048  11F5  3001               	movlw	1
  8049  11F6  0021               	movlb	1	; select bank1
  8050  11F7  07B8               	addwf	AutoLineHandle@j_2327^(0+128),f
  8051  11F8  3000               	movlw	0
  8052  11F9  3DB9               	addwfc	(AutoLineHandle@j_2327+1)^(0+128),f
  8053  11FA                     l8855:
  8054  11FA  30A0               	movlw	low AutoLineHandle@bufferALine_t
  8055  11FB  0020               	movlb	0	; select bank0
  8056  11FC  00AE               	movwf	strlen@s
  8057  11FD  3000               	movlw	high AutoLineHandle@bufferALine_t
  8058  11FE  00AF               	movwf	strlen@s+1
  8059  11FF  319A  228E  3190   	fcall	_strlen
  8060  1202  0020               	movlb	0	; select bank0
  8061  1203  082F               	movf	?_strlen+1,w
  8062  1204  0021               	movlb	1	; select bank1
  8063  1205  0239               	subwf	(AutoLineHandle@j_2327+1)^(0+128),w
  8064  1206  1D03               	skipz
  8065  1207  2A0C               	goto	u9215
  8066  1208  0020               	movlb	0	; select bank0
  8067  1209  082E               	movf	?_strlen,w
  8068  120A  0021               	movlb	1	; select bank1
  8069  120B  0238               	subwf	AutoLineHandle@j_2327^(0+128),w
  8070  120C                     u9215:
  8071  120C  1C03               	skipc
  8072  120D  2A0F               	goto	u9211
  8073  120E  2A10               	goto	u9210
  8074  120F                     u9211:
  8075  120F  29EA               	goto	l8851
  8076  1210                     u9210:
  8077  1210                     l8857:
  8078                           
  8079                           ;main.c: 371:                     cntALine = 0;
  8080  1210  0020               	movlb	0	; select bank0
  8081  1211  01DB               	clrf	_cntALine
  8082  1212                     l8859:
  8083                           
  8084                           ;main.c: 373:                 if(buffer_sys[i] == '#'){
  8085  1212  0021               	movlb	1	; select bank1
  8086  1213  083C               	movf	AutoLineHandle@i^(0+128),w
  8087  1214  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  8088  1215  0086               	movwf	6
  8089  1216  3002               	movlw	2	; select bank5/6
  8090  1217  0087               	movwf	7
  8091  1218  3023               	movlw	35
  8092  1219  0601               	xorwf	1,w
  8093  121A  1D03               	btfss	3,2
  8094  121B  2A1D               	goto	u9221
  8095  121C  2A1E               	goto	u9220
  8096  121D                     u9221:
  8097  121D  2A6C               	goto	l8879
  8098  121E                     u9220:
  8099  121E                     l8861:
  8100                           
  8101                           ;main.c: 374:                     if(direct_ALine != 0) flagALine = 2;
  8102  121E  0020               	movlb	0	; select bank0
  8103  121F  0860               	movf	_direct_ALine,w
  8104  1220  0461               	iorwf	_direct_ALine+1,w
  8105  1221  1903               	btfsc	3,2
  8106  1222  2A24               	goto	u9231
  8107  1223  2A25               	goto	u9230
  8108  1224                     u9231:
  8109  1224  2A2A               	goto	l8865
  8110  1225                     u9230:
  8111  1225                     l8863:
  8112  1225  3002               	movlw	2
  8113  1226  00D1               	movwf	??_AutoLineHandle
  8114  1227  0851               	movf	??_AutoLineHandle,w
  8115  1228  00DC               	movwf	_flagALine
  8116  1229  2A2E               	goto	l8867
  8117  122A                     l8865:
  8118  122A  3003               	movlw	3
  8119  122B  00D1               	movwf	??_AutoLineHandle
  8120  122C  0851               	movf	??_AutoLineHandle,w
  8121  122D  00DC               	movwf	_flagALine
  8122  122E                     l8867:
  8123                           
  8124                           ;main.c: 377:                     for(int j = 0; j < strlen(bufferALine_t);j++){
  8125  122E  0021               	movlb	1	; select bank1
  8126  122F  01BA               	clrf	AutoLineHandle@j_2328^(0+128)
  8127  1230  01BB               	clrf	(AutoLineHandle@j_2328+1)^(0+128)
  8128  1231  2A42               	goto	l8873
  8129  1232                     l8869:
  8130                           
  8131                           ;main.c: 378:                         bufferALine_t[j] = ' ';
  8132  1232  3020               	movlw	32
  8133  1233  0020               	movlb	0	; select bank0
  8134  1234  00D1               	movwf	??_AutoLineHandle
  8135  1235  0021               	movlb	1	; select bank1
  8136  1236  083A               	movf	AutoLineHandle@j_2328^(0+128),w
  8137  1237  3EA0               	addlw	(low (AutoLineHandle@bufferALine_t| 0))& (0+255)
  8138  1238  0086               	movwf	6
  8139  1239  0187               	clrf	7
  8140  123A  0020               	movlb	0	; select bank0
  8141  123B  0851               	movf	??_AutoLineHandle,w
  8142  123C  0081               	movwf	1
  8143  123D                     l8871:
  8144                           
  8145                           ;main.c: 379:                     }
  8146  123D  3001               	movlw	1
  8147  123E  0021               	movlb	1	; select bank1
  8148  123F  07BA               	addwf	AutoLineHandle@j_2328^(0+128),f
  8149  1240  3000               	movlw	0
  8150  1241  3DBB               	addwfc	(AutoLineHandle@j_2328+1)^(0+128),f
  8151  1242                     l8873:
  8152  1242  30A0               	movlw	low AutoLineHandle@bufferALine_t
  8153  1243  0020               	movlb	0	; select bank0
  8154  1244  00AE               	movwf	strlen@s
  8155  1245  3000               	movlw	high AutoLineHandle@bufferALine_t
  8156  1246  00AF               	movwf	strlen@s+1
  8157  1247  319A  228E  3190   	fcall	_strlen
  8158  124A  0020               	movlb	0	; select bank0
  8159  124B  082F               	movf	?_strlen+1,w
  8160  124C  0021               	movlb	1	; select bank1
  8161  124D  023B               	subwf	(AutoLineHandle@j_2328+1)^(0+128),w
  8162  124E  1D03               	skipz
  8163  124F  2A54               	goto	u9245
  8164  1250  0020               	movlb	0	; select bank0
  8165  1251  082E               	movf	?_strlen,w
  8166  1252  0021               	movlb	1	; select bank1
  8167  1253  023A               	subwf	AutoLineHandle@j_2328^(0+128),w
  8168  1254                     u9245:
  8169  1254  1C03               	skipc
  8170  1255  2A57               	goto	u9241
  8171  1256  2A58               	goto	u9240
  8172  1257                     u9241:
  8173  1257  2A32               	goto	l8869
  8174  1258                     u9240:
  8175  1258  2A6C               	goto	l8879
  8176  1259                     l8875:
  8177                           
  8178                           ;main.c: 383:                 bufferALine_t[cntALine] = buffer_sys[i];
  8179  1259  083C               	movf	AutoLineHandle@i^(0+128),w
  8180  125A  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  8181  125B  0086               	movwf	6
  8182  125C  3002               	movlw	2	; select bank5/6
  8183  125D  0087               	movwf	7
  8184  125E  0801               	movf	1,w
  8185  125F  0020               	movlb	0	; select bank0
  8186  1260  00D1               	movwf	??_AutoLineHandle
  8187  1261  085B               	movf	_cntALine,w
  8188  1262  3EA0               	addlw	(low (AutoLineHandle@bufferALine_t| 0))& (0+255)
  8189  1263  0086               	movwf	6
  8190  1264  0187               	clrf	7
  8191  1265  0851               	movf	??_AutoLineHandle,w
  8192  1266  0081               	movwf	1
  8193  1267                     l8877:
  8194                           
  8195                           ;main.c: 384:                 cntALine = cntALine + 1;
  8196  1267  085B               	movf	_cntALine,w
  8197  1268  3E01               	addlw	1
  8198  1269  00D1               	movwf	??_AutoLineHandle
  8199  126A  0851               	movf	??_AutoLineHandle,w
  8200  126B  00DB               	movwf	_cntALine
  8201  126C                     l8879:
  8202                           
  8203                           ;main.c: 386:         }
  8204  126C  3001               	movlw	1
  8205  126D  0021               	movlb	1	; select bank1
  8206  126E  07BC               	addwf	AutoLineHandle@i^(0+128),f
  8207  126F  3000               	movlw	0
  8208  1270  3DBD               	addwfc	(AutoLineHandle@i+1)^(0+128),f
  8209  1271                     l8881:
  8210  1271  30A0               	movlw	low _buffer_sys
  8211  1272  0020               	movlb	0	; select bank0
  8212  1273  00AE               	movwf	strlen@s
  8213  1274  3002               	movlw	high _buffer_sys
  8214  1275  00AF               	movwf	strlen@s+1
  8215  1276  319A  228E  3190   	fcall	_strlen
  8216  1279  0020               	movlb	0	; select bank0
  8217  127A  082F               	movf	?_strlen+1,w
  8218  127B  0021               	movlb	1	; select bank1
  8219  127C  023D               	subwf	(AutoLineHandle@i+1)^(0+128),w
  8220  127D  1D03               	skipz
  8221  127E  2A83               	goto	u9255
  8222  127F  0020               	movlb	0	; select bank0
  8223  1280  082E               	movf	?_strlen,w
  8224  1281  0021               	movlb	1	; select bank1
  8225  1282  023C               	subwf	AutoLineHandle@i^(0+128),w
  8226  1283                     u9255:
  8227  1283  1C03               	skipc
  8228  1284  2A86               	goto	u9251
  8229  1285  2A87               	goto	u9250
  8230  1286                     u9251:
  8231  1286  28EE               	goto	l8805
  8232  1287                     u9250:
  8233  1287                     l1586:
  8234  1287  0008               	return
  8235  1288                     __end_of_AutoLineHandle:
  8236                           
  8237                           	psect	text27
  8238  0935                     __ptext27:	
  8239 ;; *************** function _AutoLineControl *****************
  8240 ;; Defined at:
  8241 ;;		line 390 in file "main.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;		None
  8244 ;; Auto vars:     Size  Location     Type
  8245 ;;		None
  8246 ;; Return value:  Size  Location     Type
  8247 ;;                  1    wreg      void 
  8248 ;; Registers used:
  8249 ;;		wreg, status,2, status,0, pclath, cstack
  8250 ;; Tracked objects:
  8251 ;;		On entry : 0/0
  8252 ;;		On exit  : 0/0
  8253 ;;		Unchanged: 0/0
  8254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8256 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8257 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8258 ;;      Totals:         0       1       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8259 ;;Total ram usage:        5 bytes
  8260 ;; Hardware stack levels used: 1
  8261 ;; Hardware stack levels required when called: 8
  8262 ;; This function calls:
  8263 ;;		_KE
  8264 ;;		___fladd
  8265 ;;		___fldiv
  8266 ;;		___fleq
  8267 ;;		___flmul
  8268 ;;		___fltol
  8269 ;;		___xxtofl
  8270 ;; This function is called by:
  8271 ;;		_main
  8272 ;; This function uses a non-reentrant model
  8273 ;;
  8274                           
  8275                           
  8276                           ;psect for function _AutoLineControl
  8277  0935                     _AutoLineControl:
  8278  0935                     l8883:	
  8279                           ;incstack = 0
  8280                           ; Regs used in _AutoLineControl: [wreg+status,2+status,0+pclath+cstack]
  8281                           
  8282                           
  8283                           ;main.c: 392:     if(flagALine == 2){
  8284  0935  3002               	movlw	2
  8285  0936  0020               	movlb	0	; select bank0
  8286  0937  065C               	xorwf	_flagALine,w
  8287  0938  1D03               	btfss	3,2
  8288  0939  293B               	goto	u9261
  8289  093A  293C               	goto	u9260
  8290  093B                     u9261:
  8291  093B  2A6C               	goto	l8907
  8292  093C                     u9260:
  8293  093C                     l8885:
  8294                           
  8295                           ;main.c: 393:         if(direct_ALine < 0){
  8296  093C  1FE1               	btfss	_direct_ALine+1,7
  8297  093D  293F               	goto	u9271
  8298  093E  2940               	goto	u9270
  8299  093F                     u9271:
  8300  093F  294F               	goto	l8891
  8301  0940                     u9270:
  8302  0940                     l8887:
  8303                           
  8304                           ;main.c: 394:             direct_ALine = -direct_ALine;
  8305  0940  09E0               	comf	_direct_ALine,f
  8306  0941  09E1               	comf	_direct_ALine+1,f
  8307  0942  0AE0               	incf	_direct_ALine,f
  8308  0943  1903               	skipnz
  8309  0944  0AE1               	incf	_direct_ALine+1,f
  8310  0945                     l8889:
  8311                           
  8312                           ;main.c: 395:             omegaALine = -3;
  8313  0945  30C0               	movlw	192
  8314  0946  0023               	movlb	3	; select bank3
  8315  0947  00CC               	movwf	(_omegaALine+3)^(0+384)
  8316  0948  3040               	movlw	64
  8317  0949  00CB               	movwf	(_omegaALine+2)^(0+384)
  8318  094A  3000               	movlw	0
  8319  094B  00CA               	movwf	(_omegaALine+1)^(0+384)
  8320  094C  3000               	movlw	0
  8321  094D  00C9               	movwf	_omegaALine^(0+384)
  8322                           
  8323                           ;main.c: 396:         }
  8324  094E  2958               	goto	l8893
  8325  094F                     l8891:
  8326  094F  3040               	movlw	64
  8327  0950  0023               	movlb	3	; select bank3
  8328  0951  00CC               	movwf	(_omegaALine+3)^(0+384)
  8329  0952  3040               	movlw	64
  8330  0953  00CB               	movwf	(_omegaALine+2)^(0+384)
  8331  0954  3000               	movlw	0
  8332  0955  00CA               	movwf	(_omegaALine+1)^(0+384)
  8333  0956  3000               	movlw	0
  8334  0957  00C9               	movwf	_omegaALine^(0+384)
  8335  0958                     l8893:
  8336                           
  8337                           ;main.c: 398:         timeALine = (2*3.14159*69.5*direct_ALine*100)/3753;
  8338  0958  3043               	movlw	67
  8339  0959  0021               	movlb	1	; select bank1
  8340  095A  00A3               	movwf	(___flmul@b+3)^(0+128)
  8341  095B  30DA               	movlw	218
  8342  095C  00A2               	movwf	(___flmul@b+2)^(0+128)
  8343  095D  3057               	movlw	87
  8344  095E  00A1               	movwf	(___flmul@b+1)^(0+128)
  8345  095F  302B               	movlw	43
  8346  0960  00A0               	movwf	___flmul@b^(0+128)
  8347  0961  0020               	movlb	0	; select bank0
  8348  0962  0860               	movf	_direct_ALine,w
  8349  0963  00C3               	movwf	___xxtofl@val
  8350  0964  0861               	movf	_direct_ALine+1,w
  8351  0965  00C4               	movwf	___xxtofl@val+1
  8352  0966  0D89               	rlf	9,f
  8353  0967  3B89               	subwfb	9,f
  8354  0968  0989               	comf	9,f
  8355  0969  00C5               	movwf	___xxtofl@val+2
  8356  096A  00C6               	movwf	___xxtofl@val+3
  8357  096B  3001               	movlw	1
  8358  096C  319E  266F  3189   	fcall	___xxtofl
  8359  096F  0020               	movlb	0	; select bank0
  8360  0970  0846               	movf	?___xxtofl+3,w
  8361  0971  0021               	movlb	1	; select bank1
  8362  0972  00A7               	movwf	(___flmul@a+3)^(0+128)
  8363  0973  0020               	movlb	0	; select bank0
  8364  0974  0845               	movf	?___xxtofl+2,w
  8365  0975  0021               	movlb	1	; select bank1
  8366  0976  00A6               	movwf	(___flmul@a+2)^(0+128)
  8367  0977  0020               	movlb	0	; select bank0
  8368  0978  0844               	movf	?___xxtofl+1,w
  8369  0979  0021               	movlb	1	; select bank1
  8370  097A  00A5               	movwf	(___flmul@a+1)^(0+128)
  8371  097B  0020               	movlb	0	; select bank0
  8372  097C  0843               	movf	?___xxtofl,w
  8373  097D  0021               	movlb	1	; select bank1
  8374  097E  00A4               	movwf	___flmul@a^(0+128)
  8375  097F  318D  257C  3189   	fcall	___flmul
  8376  0982  0021               	movlb	1	; select bank1
  8377  0983  0823               	movf	(?___flmul+3)^(0+128),w
  8378  0984  0022               	movlb	2	; select bank2
  8379  0985  00DA               	movwf	(_AutoLineControl$3254+3)^(0+256)
  8380  0986  0021               	movlb	1	; select bank1
  8381  0987  0822               	movf	(?___flmul+2)^(0+128),w
  8382  0988  0022               	movlb	2	; select bank2
  8383  0989  00D9               	movwf	(_AutoLineControl$3254+2)^(0+256)
  8384  098A  0021               	movlb	1	; select bank1
  8385  098B  0821               	movf	(?___flmul+1)^(0+128),w
  8386  098C  0022               	movlb	2	; select bank2
  8387  098D  00D8               	movwf	(_AutoLineControl$3254+1)^(0+256)
  8388  098E  0021               	movlb	1	; select bank1
  8389  098F  0820               	movf	?___flmul^(0+128),w
  8390  0990  0022               	movlb	2	; select bank2
  8391  0991  00D7               	movwf	_AutoLineControl$3254^(0+256)
  8392  0992                     l8895:
  8393                           
  8394                           ;main.c: 398:         timeALine = (2*3.14159*69.5*direct_ALine*100)/3753;
  8395  0992  3045               	movlw	69
  8396  0993  0021               	movlb	1	; select bank1
  8397  0994  00BD               	movwf	(___fldiv@a+3)^(0+128)
  8398  0995  306A               	movlw	106
  8399  0996  00BC               	movwf	(___fldiv@a+2)^(0+128)
  8400  0997  3090               	movlw	144
  8401  0998  00BB               	movwf	(___fldiv@a+1)^(0+128)
  8402  0999  3000               	movlw	0
  8403  099A  00BA               	movwf	___fldiv@a^(0+128)
  8404  099B  3042               	movlw	66
  8405  099C  00A3               	movwf	(___flmul@b+3)^(0+128)
  8406  099D  30C8               	movlw	200
  8407  099E  00A2               	movwf	(___flmul@b+2)^(0+128)
  8408  099F  3000               	movlw	0
  8409  09A0  00A1               	movwf	(___flmul@b+1)^(0+128)
  8410  09A1  3000               	movlw	0
  8411  09A2  00A0               	movwf	___flmul@b^(0+128)
  8412  09A3  0022               	movlb	2	; select bank2
  8413  09A4  085A               	movf	(_AutoLineControl$3254+3)^(0+256),w
  8414  09A5  0021               	movlb	1	; select bank1
  8415  09A6  00A7               	movwf	(___flmul@a+3)^(0+128)
  8416  09A7  0022               	movlb	2	; select bank2
  8417  09A8  0859               	movf	(_AutoLineControl$3254+2)^(0+256),w
  8418  09A9  0021               	movlb	1	; select bank1
  8419  09AA  00A6               	movwf	(___flmul@a+2)^(0+128)
  8420  09AB  0022               	movlb	2	; select bank2
  8421  09AC  0858               	movf	(_AutoLineControl$3254+1)^(0+256),w
  8422  09AD  0021               	movlb	1	; select bank1
  8423  09AE  00A5               	movwf	(___flmul@a+1)^(0+128)
  8424  09AF  0022               	movlb	2	; select bank2
  8425  09B0  0857               	movf	_AutoLineControl$3254^(0+256),w
  8426  09B1  0021               	movlb	1	; select bank1
  8427  09B2  00A4               	movwf	___flmul@a^(0+128)
  8428  09B3  318D  257C  3189   	fcall	___flmul
  8429  09B6  0021               	movlb	1	; select bank1
  8430  09B7  0823               	movf	(?___flmul+3)^(0+128),w
  8431  09B8  00C1               	movwf	(___fldiv@b+3)^(0+128)
  8432  09B9  0822               	movf	(?___flmul+2)^(0+128),w
  8433  09BA  00C0               	movwf	(___fldiv@b+2)^(0+128)
  8434  09BB  0821               	movf	(?___flmul+1)^(0+128),w
  8435  09BC  00BF               	movwf	(___fldiv@b+1)^(0+128)
  8436  09BD  0820               	movf	?___flmul^(0+128),w
  8437  09BE  00BE               	movwf	___fldiv@b^(0+128)
  8438  09BF  3192  2288  3189   	fcall	___fldiv
  8439  09C2  0021               	movlb	1	; select bank1
  8440  09C3  083D               	movf	(?___fldiv+3)^(0+128),w
  8441  09C4  0022               	movlb	2	; select bank2
  8442  09C5  00A7               	movwf	(_timeALine+3)^(0+256)
  8443  09C6  0021               	movlb	1	; select bank1
  8444  09C7  083C               	movf	(?___fldiv+2)^(0+128),w
  8445  09C8  0022               	movlb	2	; select bank2
  8446  09C9  00A6               	movwf	(_timeALine+2)^(0+256)
  8447  09CA  0021               	movlb	1	; select bank1
  8448  09CB  083B               	movf	(?___fldiv+1)^(0+128),w
  8449  09CC  0022               	movlb	2	; select bank2
  8450  09CD  00A5               	movwf	(_timeALine+1)^(0+256)
  8451  09CE  0021               	movlb	1	; select bank1
  8452  09CF  083A               	movf	?___fldiv^(0+128),w
  8453  09D0  0022               	movlb	2	; select bank2
  8454  09D1  00A4               	movwf	_timeALine^(0+256)
  8455  09D2                     l8897:
  8456                           
  8457                           ;main.c: 399:         cntTime = 0;
  8458  09D2  01B2               	clrf	_cntTime^(0+256)
  8459  09D3  01B3               	clrf	(_cntTime+1)^(0+256)
  8460  09D4                     l8899:
  8461                           
  8462                           ;main.c: 400:         if(totalTime != timeALine) totalTime = timeALine-135;
  8463  09D4  0020               	movlb	0	; select bank0
  8464  09D5  0858               	movf	_totalTime,w
  8465  09D6  00C3               	movwf	___xxtofl@val
  8466  09D7  0859               	movf	_totalTime+1,w
  8467  09D8  00C4               	movwf	___xxtofl@val+1
  8468  09D9  01C5               	clrf	___xxtofl@val+2
  8469  09DA  01C6               	clrf	___xxtofl@val+3
  8470  09DB  3000               	movlw	0
  8471  09DC  319E  266F  3189   	fcall	___xxtofl
  8472  09DF  0020               	movlb	0	; select bank0
  8473  09E0  0846               	movf	?___xxtofl+3,w
  8474  09E1  0021               	movlb	1	; select bank1
  8475  09E2  00A3               	movwf	(___fleq@ff1+3)^(0+128)
  8476  09E3  0020               	movlb	0	; select bank0
  8477  09E4  0845               	movf	?___xxtofl+2,w
  8478  09E5  0021               	movlb	1	; select bank1
  8479  09E6  00A2               	movwf	(___fleq@ff1+2)^(0+128)
  8480  09E7  0020               	movlb	0	; select bank0
  8481  09E8  0844               	movf	?___xxtofl+1,w
  8482  09E9  0021               	movlb	1	; select bank1
  8483  09EA  00A1               	movwf	(___fleq@ff1+1)^(0+128)
  8484  09EB  0020               	movlb	0	; select bank0
  8485  09EC  0843               	movf	?___xxtofl,w
  8486  09ED  0021               	movlb	1	; select bank1
  8487  09EE  00A0               	movwf	___fleq@ff1^(0+128)
  8488  09EF  0022               	movlb	2	; select bank2
  8489  09F0  0827               	movf	(_timeALine+3)^(0+256),w
  8490  09F1  0021               	movlb	1	; select bank1
  8491  09F2  00A7               	movwf	(___fleq@ff2+3)^(0+128)
  8492  09F3  0022               	movlb	2	; select bank2
  8493  09F4  0826               	movf	(_timeALine+2)^(0+256),w
  8494  09F5  0021               	movlb	1	; select bank1
  8495  09F6  00A6               	movwf	(___fleq@ff2+2)^(0+128)
  8496  09F7  0022               	movlb	2	; select bank2
  8497  09F8  0825               	movf	(_timeALine+1)^(0+256),w
  8498  09F9  0021               	movlb	1	; select bank1
  8499  09FA  00A5               	movwf	(___fleq@ff2+1)^(0+128)
  8500  09FB  0022               	movlb	2	; select bank2
  8501  09FC  0824               	movf	_timeALine^(0+256),w
  8502  09FD  0021               	movlb	1	; select bank1
  8503  09FE  00A4               	movwf	___fleq@ff2^(0+128)
  8504  09FF  319B  234A  3189   	fcall	___fleq
  8505  0A02  1803               	btfsc	3,0
  8506  0A03  2A05               	goto	u9281
  8507  0A04  2A06               	goto	u9280
  8508  0A05                     u9281:
  8509  0A05  2A35               	goto	l1592
  8510  0A06                     u9280:
  8511  0A06                     l8901:
  8512  0A06  0022               	movlb	2	; select bank2
  8513  0A07  0827               	movf	(_timeALine+3)^(0+256),w
  8514  0A08  0021               	movlb	1	; select bank1
  8515  0A09  00DB               	movwf	(___fladd@a+3)^(0+128)
  8516  0A0A  0022               	movlb	2	; select bank2
  8517  0A0B  0826               	movf	(_timeALine+2)^(0+256),w
  8518  0A0C  0021               	movlb	1	; select bank1
  8519  0A0D  00DA               	movwf	(___fladd@a+2)^(0+128)
  8520  0A0E  0022               	movlb	2	; select bank2
  8521  0A0F  0825               	movf	(_timeALine+1)^(0+256),w
  8522  0A10  0021               	movlb	1	; select bank1
  8523  0A11  00D9               	movwf	(___fladd@a+1)^(0+128)
  8524  0A12  0022               	movlb	2	; select bank2
  8525  0A13  0824               	movf	_timeALine^(0+256),w
  8526  0A14  0021               	movlb	1	; select bank1
  8527  0A15  00D8               	movwf	___fladd@a^(0+128)
  8528  0A16  30C3               	movlw	195
  8529  0A17  00D7               	movwf	(___fladd@b+3)^(0+128)
  8530  0A18  3007               	movlw	7
  8531  0A19  00D6               	movwf	(___fladd@b+2)^(0+128)
  8532  0A1A  3000               	movlw	0
  8533  0A1B  00D5               	movwf	(___fladd@b+1)^(0+128)
  8534  0A1C  3000               	movlw	0
  8535  0A1D  00D4               	movwf	___fladd@b^(0+128)
  8536  0A1E  318B  2344  3189   	fcall	___fladd
  8537  0A21  0021               	movlb	1	; select bank1
  8538  0A22  0857               	movf	(?___fladd+3)^(0+128),w
  8539  0A23  00EB               	movwf	(___fltol@f1+3)^(0+128)
  8540  0A24  0856               	movf	(?___fladd+2)^(0+128),w
  8541  0A25  00EA               	movwf	(___fltol@f1+2)^(0+128)
  8542  0A26  0855               	movf	(?___fladd+1)^(0+128),w
  8543  0A27  00E9               	movwf	(___fltol@f1+1)^(0+128)
  8544  0A28  0854               	movf	?___fladd^(0+128),w
  8545  0A29  00E8               	movwf	___fltol@f1^(0+128)
  8546  0A2A  319B  2399  3189   	fcall	___fltol
  8547  0A2D  0021               	movlb	1	; select bank1
  8548  0A2E  0869               	movf	(?___fltol+1)^(0+128),w
  8549  0A2F  0020               	movlb	0	; select bank0
  8550  0A30  00D9               	movwf	_totalTime+1
  8551  0A31  0021               	movlb	1	; select bank1
  8552  0A32  0868               	movf	?___fltol^(0+128),w
  8553  0A33  0020               	movlb	0	; select bank0
  8554  0A34  00D8               	movwf	_totalTime
  8555  0A35                     l1592:
  8556                           
  8557                           ;main.c: 401:         KE(omegaALine,0);
  8558  0A35  0023               	movlb	3	; select bank3
  8559  0A36  084C               	movf	(_omegaALine+3)^(0+384),w
  8560  0A37  0022               	movlb	2	; select bank2
  8561  0A38  00CA               	movwf	(KE@Omega_body+3)^(0+256)
  8562  0A39  0023               	movlb	3	; select bank3
  8563  0A3A  084B               	movf	(_omegaALine+2)^(0+384),w
  8564  0A3B  0022               	movlb	2	; select bank2
  8565  0A3C  00C9               	movwf	(KE@Omega_body+2)^(0+256)
  8566  0A3D  0023               	movlb	3	; select bank3
  8567  0A3E  084A               	movf	(_omegaALine+1)^(0+384),w
  8568  0A3F  0022               	movlb	2	; select bank2
  8569  0A40  00C8               	movwf	(KE@Omega_body+1)^(0+256)
  8570  0A41  0023               	movlb	3	; select bank3
  8571  0A42  0849               	movf	_omegaALine^(0+384),w
  8572  0A43  0022               	movlb	2	; select bank2
  8573  0A44  00C7               	movwf	KE@Omega_body^(0+256)
  8574  0A45  3000               	movlw	0
  8575  0A46  00CE               	movwf	(KE@Velocity_body+3)^(0+256)
  8576  0A47  3000               	movlw	0
  8577  0A48  00CD               	movwf	(KE@Velocity_body+2)^(0+256)
  8578  0A49  3000               	movlw	0
  8579  0A4A  00CC               	movwf	(KE@Velocity_body+1)^(0+256)
  8580  0A4B  3000               	movlw	0
  8581  0A4C  00CB               	movwf	KE@Velocity_body^(0+256)
  8582  0A4D  3196  2608  3189   	fcall	_KE
  8583  0A50                     l8903:	
  8584                           ;main.c: 402:         while(cntTime < totalTime);
  8585                           
  8586  0A50  0020               	movlb	0	; select bank0
  8587  0A51  0859               	movf	_totalTime+1,w
  8588  0A52  0022               	movlb	2	; select bank2
  8589  0A53  0233               	subwf	(_cntTime+1)^(0+256),w
  8590  0A54  1D03               	skipz
  8591  0A55  2A5A               	goto	u9295
  8592  0A56  0020               	movlb	0	; select bank0
  8593  0A57  0858               	movf	_totalTime,w
  8594  0A58  0022               	movlb	2	; select bank2
  8595  0A59  0232               	subwf	_cntTime^(0+256),w
  8596  0A5A                     u9295:
  8597  0A5A  1C03               	skipc
  8598  0A5B  2A5D               	goto	u9291
  8599  0A5C  2A5E               	goto	u9290
  8600  0A5D                     u9291:
  8601  0A5D  2A50               	goto	l8903
  8602  0A5E                     u9290:
  8603  0A5E                     l8905:
  8604                           
  8605                           ;main.c: 403:         flagALine = 3;
  8606  0A5E  3003               	movlw	3
  8607  0A5F  0020               	movlb	0	; select bank0
  8608  0A60  00D3               	movwf	??_AutoLineControl
  8609  0A61  0853               	movf	??_AutoLineControl,w
  8610  0A62  00DC               	movwf	_flagALine
  8611                           
  8612                           ;main.c: 404:         timeALine = 0;
  8613  0A63  3000               	movlw	0
  8614  0A64  0022               	movlb	2	; select bank2
  8615  0A65  00A7               	movwf	(_timeALine+3)^(0+256)
  8616  0A66  3000               	movlw	0
  8617  0A67  00A6               	movwf	(_timeALine+2)^(0+256)
  8618  0A68  3000               	movlw	0
  8619  0A69  00A5               	movwf	(_timeALine+1)^(0+256)
  8620  0A6A  3000               	movlw	0
  8621  0A6B  00A4               	movwf	_timeALine^(0+256)
  8622  0A6C                     l8907:
  8623                           
  8624                           ;main.c: 406:     if (flagALine == 3){
  8625  0A6C  3003               	movlw	3
  8626  0A6D  0020               	movlb	0	; select bank0
  8627  0A6E  065C               	xorwf	_flagALine,w
  8628  0A6F  1D03               	btfss	3,2
  8629  0A70  2A72               	goto	u9301
  8630  0A71  2A73               	goto	u9300
  8631  0A72                     u9301:
  8632  0A72  2B43               	goto	l1598
  8633  0A73                     u9300:
  8634  0A73                     l8909:
  8635                           
  8636                           ;main.c: 407:         timeALine = (length_ALine/velALine)*1000;
  8637  0A73  3044               	movlw	68
  8638  0A74  0021               	movlb	1	; select bank1
  8639  0A75  00A3               	movwf	(___flmul@b+3)^(0+128)
  8640  0A76  307A               	movlw	122
  8641  0A77  00A2               	movwf	(___flmul@b+2)^(0+128)
  8642  0A78  3000               	movlw	0
  8643  0A79  00A1               	movwf	(___flmul@b+1)^(0+128)
  8644  0A7A  3000               	movlw	0
  8645  0A7B  00A0               	movwf	___flmul@b^(0+128)
  8646  0A7C  0023               	movlb	3	; select bank3
  8647  0A7D  0850               	movf	(_velALine+3)^(0+384),w
  8648  0A7E  0021               	movlb	1	; select bank1
  8649  0A7F  00BD               	movwf	(___fldiv@a+3)^(0+128)
  8650  0A80  0023               	movlb	3	; select bank3
  8651  0A81  084F               	movf	(_velALine+2)^(0+384),w
  8652  0A82  0021               	movlb	1	; select bank1
  8653  0A83  00BC               	movwf	(___fldiv@a+2)^(0+128)
  8654  0A84  0023               	movlb	3	; select bank3
  8655  0A85  084E               	movf	(_velALine+1)^(0+384),w
  8656  0A86  0021               	movlb	1	; select bank1
  8657  0A87  00BB               	movwf	(___fldiv@a+1)^(0+128)
  8658  0A88  0023               	movlb	3	; select bank3
  8659  0A89  084D               	movf	_velALine^(0+384),w
  8660  0A8A  0021               	movlb	1	; select bank1
  8661  0A8B  00BA               	movwf	___fldiv@a^(0+128)
  8662  0A8C  0023               	movlb	3	; select bank3
  8663  0A8D  0861               	movf	_length_ALine^(0+384),w
  8664  0A8E  0020               	movlb	0	; select bank0
  8665  0A8F  00C3               	movwf	___xxtofl@val
  8666  0A90  0023               	movlb	3	; select bank3
  8667  0A91  0862               	movf	(_length_ALine+1)^(0+384),w
  8668  0A92  0020               	movlb	0	; select bank0
  8669  0A93  00C4               	movwf	___xxtofl@val+1
  8670  0A94  01C5               	clrf	___xxtofl@val+2
  8671  0A95  01C6               	clrf	___xxtofl@val+3
  8672  0A96  3000               	movlw	0
  8673  0A97  319E  266F  3189   	fcall	___xxtofl
  8674  0A9A  0020               	movlb	0	; select bank0
  8675  0A9B  0846               	movf	?___xxtofl+3,w
  8676  0A9C  0021               	movlb	1	; select bank1
  8677  0A9D  00C1               	movwf	(___fldiv@b+3)^(0+128)
  8678  0A9E  0020               	movlb	0	; select bank0
  8679  0A9F  0845               	movf	?___xxtofl+2,w
  8680  0AA0  0021               	movlb	1	; select bank1
  8681  0AA1  00C0               	movwf	(___fldiv@b+2)^(0+128)
  8682  0AA2  0020               	movlb	0	; select bank0
  8683  0AA3  0844               	movf	?___xxtofl+1,w
  8684  0AA4  0021               	movlb	1	; select bank1
  8685  0AA5  00BF               	movwf	(___fldiv@b+1)^(0+128)
  8686  0AA6  0020               	movlb	0	; select bank0
  8687  0AA7  0843               	movf	?___xxtofl,w
  8688  0AA8  0021               	movlb	1	; select bank1
  8689  0AA9  00BE               	movwf	___fldiv@b^(0+128)
  8690  0AAA  3192  2288  3189   	fcall	___fldiv
  8691  0AAD  0021               	movlb	1	; select bank1
  8692  0AAE  083D               	movf	(?___fldiv+3)^(0+128),w
  8693  0AAF  00A7               	movwf	(___flmul@a+3)^(0+128)
  8694  0AB0  083C               	movf	(?___fldiv+2)^(0+128),w
  8695  0AB1  00A6               	movwf	(___flmul@a+2)^(0+128)
  8696  0AB2  083B               	movf	(?___fldiv+1)^(0+128),w
  8697  0AB3  00A5               	movwf	(___flmul@a+1)^(0+128)
  8698  0AB4  083A               	movf	?___fldiv^(0+128),w
  8699  0AB5  00A4               	movwf	___flmul@a^(0+128)
  8700  0AB6  318D  257C  3189   	fcall	___flmul
  8701  0AB9  0021               	movlb	1	; select bank1
  8702  0ABA  0823               	movf	(?___flmul+3)^(0+128),w
  8703  0ABB  0022               	movlb	2	; select bank2
  8704  0ABC  00A7               	movwf	(_timeALine+3)^(0+256)
  8705  0ABD  0021               	movlb	1	; select bank1
  8706  0ABE  0822               	movf	(?___flmul+2)^(0+128),w
  8707  0ABF  0022               	movlb	2	; select bank2
  8708  0AC0  00A6               	movwf	(_timeALine+2)^(0+256)
  8709  0AC1  0021               	movlb	1	; select bank1
  8710  0AC2  0821               	movf	(?___flmul+1)^(0+128),w
  8711  0AC3  0022               	movlb	2	; select bank2
  8712  0AC4  00A5               	movwf	(_timeALine+1)^(0+256)
  8713  0AC5  0021               	movlb	1	; select bank1
  8714  0AC6  0820               	movf	?___flmul^(0+128),w
  8715  0AC7  0022               	movlb	2	; select bank2
  8716  0AC8  00A4               	movwf	_timeALine^(0+256)
  8717                           
  8718                           ;main.c: 408:         if(totalTime != timeALine) totalTime = timeALine;
  8719  0AC9  0020               	movlb	0	; select bank0
  8720  0ACA  0858               	movf	_totalTime,w
  8721  0ACB  00C3               	movwf	___xxtofl@val
  8722  0ACC  0859               	movf	_totalTime+1,w
  8723  0ACD  00C4               	movwf	___xxtofl@val+1
  8724  0ACE  01C5               	clrf	___xxtofl@val+2
  8725  0ACF  01C6               	clrf	___xxtofl@val+3
  8726  0AD0  3000               	movlw	0
  8727  0AD1  319E  266F  3189   	fcall	___xxtofl
  8728  0AD4  0020               	movlb	0	; select bank0
  8729  0AD5  0846               	movf	?___xxtofl+3,w
  8730  0AD6  0021               	movlb	1	; select bank1
  8731  0AD7  00A3               	movwf	(___fleq@ff1+3)^(0+128)
  8732  0AD8  0020               	movlb	0	; select bank0
  8733  0AD9  0845               	movf	?___xxtofl+2,w
  8734  0ADA  0021               	movlb	1	; select bank1
  8735  0ADB  00A2               	movwf	(___fleq@ff1+2)^(0+128)
  8736  0ADC  0020               	movlb	0	; select bank0
  8737  0ADD  0844               	movf	?___xxtofl+1,w
  8738  0ADE  0021               	movlb	1	; select bank1
  8739  0ADF  00A1               	movwf	(___fleq@ff1+1)^(0+128)
  8740  0AE0  0020               	movlb	0	; select bank0
  8741  0AE1  0843               	movf	?___xxtofl,w
  8742  0AE2  0021               	movlb	1	; select bank1
  8743  0AE3  00A0               	movwf	___fleq@ff1^(0+128)
  8744  0AE4  0022               	movlb	2	; select bank2
  8745  0AE5  0827               	movf	(_timeALine+3)^(0+256),w
  8746  0AE6  0021               	movlb	1	; select bank1
  8747  0AE7  00A7               	movwf	(___fleq@ff2+3)^(0+128)
  8748  0AE8  0022               	movlb	2	; select bank2
  8749  0AE9  0826               	movf	(_timeALine+2)^(0+256),w
  8750  0AEA  0021               	movlb	1	; select bank1
  8751  0AEB  00A6               	movwf	(___fleq@ff2+2)^(0+128)
  8752  0AEC  0022               	movlb	2	; select bank2
  8753  0AED  0825               	movf	(_timeALine+1)^(0+256),w
  8754  0AEE  0021               	movlb	1	; select bank1
  8755  0AEF  00A5               	movwf	(___fleq@ff2+1)^(0+128)
  8756  0AF0  0022               	movlb	2	; select bank2
  8757  0AF1  0824               	movf	_timeALine^(0+256),w
  8758  0AF2  0021               	movlb	1	; select bank1
  8759  0AF3  00A4               	movwf	___fleq@ff2^(0+128)
  8760  0AF4  319B  234A  3189   	fcall	___fleq
  8761  0AF7  1803               	btfsc	3,0
  8762  0AF8  2AFA               	goto	u9311
  8763  0AF9  2AFB               	goto	u9310
  8764  0AFA                     u9311:
  8765  0AFA  2B16               	goto	l8913
  8766  0AFB                     u9310:
  8767  0AFB                     l8911:
  8768  0AFB  0022               	movlb	2	; select bank2
  8769  0AFC  0827               	movf	(_timeALine+3)^(0+256),w
  8770  0AFD  0021               	movlb	1	; select bank1
  8771  0AFE  00EB               	movwf	(___fltol@f1+3)^(0+128)
  8772  0AFF  0022               	movlb	2	; select bank2
  8773  0B00  0826               	movf	(_timeALine+2)^(0+256),w
  8774  0B01  0021               	movlb	1	; select bank1
  8775  0B02  00EA               	movwf	(___fltol@f1+2)^(0+128)
  8776  0B03  0022               	movlb	2	; select bank2
  8777  0B04  0825               	movf	(_timeALine+1)^(0+256),w
  8778  0B05  0021               	movlb	1	; select bank1
  8779  0B06  00E9               	movwf	(___fltol@f1+1)^(0+128)
  8780  0B07  0022               	movlb	2	; select bank2
  8781  0B08  0824               	movf	_timeALine^(0+256),w
  8782  0B09  0021               	movlb	1	; select bank1
  8783  0B0A  00E8               	movwf	___fltol@f1^(0+128)
  8784  0B0B  319B  2399  3189   	fcall	___fltol
  8785  0B0E  0021               	movlb	1	; select bank1
  8786  0B0F  0869               	movf	(?___fltol+1)^(0+128),w
  8787  0B10  0020               	movlb	0	; select bank0
  8788  0B11  00D9               	movwf	_totalTime+1
  8789  0B12  0021               	movlb	1	; select bank1
  8790  0B13  0868               	movf	?___fltol^(0+128),w
  8791  0B14  0020               	movlb	0	; select bank0
  8792  0B15  00D8               	movwf	_totalTime
  8793  0B16                     l8913:
  8794                           
  8795                           ;main.c: 409:         cntTime = 0;
  8796  0B16  0022               	movlb	2	; select bank2
  8797  0B17  01B2               	clrf	_cntTime^(0+256)
  8798  0B18  01B3               	clrf	(_cntTime+1)^(0+256)
  8799  0B19                     l8915:
  8800                           
  8801                           ;main.c: 410:         omegaALine = 0;
  8802  0B19  3000               	movlw	0
  8803  0B1A  0023               	movlb	3	; select bank3
  8804  0B1B  00CC               	movwf	(_omegaALine+3)^(0+384)
  8805  0B1C  3000               	movlw	0
  8806  0B1D  00CB               	movwf	(_omegaALine+2)^(0+384)
  8807  0B1E  3000               	movlw	0
  8808  0B1F  00CA               	movwf	(_omegaALine+1)^(0+384)
  8809  0B20  3000               	movlw	0
  8810  0B21  00C9               	movwf	_omegaALine^(0+384)
  8811  0B22                     l8917:
  8812                           
  8813                           ;main.c: 411:         velocity_sys = velALine;
  8814  0B22  0850               	movf	(_velALine+3)^(0+384),w
  8815  0B23  0024               	movlb	4	; select bank4
  8816  0B24  00D4               	movwf	(_velocity_sys+3)^(0+512)
  8817  0B25  0023               	movlb	3	; select bank3
  8818  0B26  084F               	movf	(_velALine+2)^(0+384),w
  8819  0B27  0024               	movlb	4	; select bank4
  8820  0B28  00D3               	movwf	(_velocity_sys+2)^(0+512)
  8821  0B29  0023               	movlb	3	; select bank3
  8822  0B2A  084E               	movf	(_velALine+1)^(0+384),w
  8823  0B2B  0024               	movlb	4	; select bank4
  8824  0B2C  00D2               	movwf	(_velocity_sys+1)^(0+512)
  8825  0B2D  0023               	movlb	3	; select bank3
  8826  0B2E  084D               	movf	_velALine^(0+384),w
  8827  0B2F  0024               	movlb	4	; select bank4
  8828  0B30  00D1               	movwf	_velocity_sys^(0+512)
  8829  0B31                     l8919:
  8830                           
  8831                           ;main.c: 412:         omega_sys = omegaALine;
  8832  0B31  0023               	movlb	3	; select bank3
  8833  0B32  084C               	movf	(_omegaALine+3)^(0+384),w
  8834  0B33  0024               	movlb	4	; select bank4
  8835  0B34  00D0               	movwf	(_omega_sys+3)^(0+512)
  8836  0B35  0023               	movlb	3	; select bank3
  8837  0B36  084B               	movf	(_omegaALine+2)^(0+384),w
  8838  0B37  0024               	movlb	4	; select bank4
  8839  0B38  00CF               	movwf	(_omega_sys+2)^(0+512)
  8840  0B39  0023               	movlb	3	; select bank3
  8841  0B3A  084A               	movf	(_omegaALine+1)^(0+384),w
  8842  0B3B  0024               	movlb	4	; select bank4
  8843  0B3C  00CE               	movwf	(_omega_sys+1)^(0+512)
  8844  0B3D  0023               	movlb	3	; select bank3
  8845  0B3E  0849               	movf	_omegaALine^(0+384),w
  8846  0B3F  0024               	movlb	4	; select bank4
  8847  0B40  00CD               	movwf	_omega_sys^(0+512)
  8848  0B41                     l8921:
  8849                           
  8850                           ;main.c: 413:         flagALine = 0;
  8851  0B41  0020               	movlb	0	; select bank0
  8852  0B42  01DC               	clrf	_flagALine
  8853  0B43                     l1598:
  8854  0B43  0008               	return
  8855  0B44                     __end_of_AutoLineControl:
  8856                           
  8857                           	psect	text28
  8858  1608                     __ptext28:	
  8859 ;; *************** function _KE *****************
  8860 ;; Defined at:
  8861 ;;		line 139 in file "main.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;  Omega_body      4    5[BANK2 ] float 
  8864 ;;  Velocity_bod    4    9[BANK2 ] float 
  8865 ;; Auto vars:     Size  Location     Type
  8866 ;;  OmegaRight      4   17[BANK2 ] float 
  8867 ;;  OmegaLeft       4   13[BANK2 ] float 
  8868 ;; Return value:  Size  Location     Type
  8869 ;;                  1    wreg      void 
  8870 ;; Registers used:
  8871 ;;		wreg, status,2, status,0, pclath, cstack
  8872 ;; Tracked objects:
  8873 ;;		On entry : 0/0
  8874 ;;		On exit  : 0/0
  8875 ;;		Unchanged: 0/0
  8876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8877 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  8878 ;;      Locals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  8879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8880 ;;      Totals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0
  8881 ;;Total ram usage:       16 bytes
  8882 ;; Hardware stack levels used: 1
  8883 ;; Hardware stack levels required when called: 7
  8884 ;; This function calls:
  8885 ;;		___fladd
  8886 ;;		___fldiv
  8887 ;;		___fleq
  8888 ;;		___flge
  8889 ;;		___flmul
  8890 ;;		___flneg
  8891 ;;		___flsub
  8892 ;;		___fltol
  8893 ;; This function is called by:
  8894 ;;		_AutoLineControl
  8895 ;;		_main
  8896 ;; This function uses a non-reentrant model
  8897 ;;
  8898                           
  8899                           
  8900                           ;psect for function _KE
  8901  1608                     _KE:
  8902  1608                     l8455:	
  8903                           ;incstack = 0
  8904                           ; Regs used in _KE: [wreg+status,2+status,0+pclath+cstack]
  8905                           
  8906                           
  8907                           ;main.c: 141:     float OmegaRight = 0;
  8908  1608  3000               	movlw	0
  8909  1609  0022               	movlb	2	; select bank2
  8910  160A  00D6               	movwf	(KE@OmegaRight+3)^(0+256)
  8911  160B  3000               	movlw	0
  8912  160C  00D5               	movwf	(KE@OmegaRight+2)^(0+256)
  8913  160D  3000               	movlw	0
  8914  160E  00D4               	movwf	(KE@OmegaRight+1)^(0+256)
  8915  160F  3000               	movlw	0
  8916  1610  00D3               	movwf	KE@OmegaRight^(0+256)
  8917  1611                     l8457:
  8918                           
  8919                           ;main.c: 143:     OmegaLeft = Velocity_body/32 + Omega_body*(69.5/32);
  8920  1611  3040               	movlw	64
  8921  1612  0021               	movlb	1	; select bank1
  8922  1613  00A3               	movwf	(___flmul@b+3)^(0+128)
  8923  1614  300B               	movlw	11
  8924  1615  00A2               	movwf	(___flmul@b+2)^(0+128)
  8925  1616  3000               	movlw	0
  8926  1617  00A1               	movwf	(___flmul@b+1)^(0+128)
  8927  1618  3000               	movlw	0
  8928  1619  00A0               	movwf	___flmul@b^(0+128)
  8929  161A  0022               	movlb	2	; select bank2
  8930  161B  084A               	movf	(KE@Omega_body+3)^(0+256),w
  8931  161C  0021               	movlb	1	; select bank1
  8932  161D  00A7               	movwf	(___flmul@a+3)^(0+128)
  8933  161E  0022               	movlb	2	; select bank2
  8934  161F  0849               	movf	(KE@Omega_body+2)^(0+256),w
  8935  1620  0021               	movlb	1	; select bank1
  8936  1621  00A6               	movwf	(___flmul@a+2)^(0+128)
  8937  1622  0022               	movlb	2	; select bank2
  8938  1623  0848               	movf	(KE@Omega_body+1)^(0+256),w
  8939  1624  0021               	movlb	1	; select bank1
  8940  1625  00A5               	movwf	(___flmul@a+1)^(0+128)
  8941  1626  0022               	movlb	2	; select bank2
  8942  1627  0847               	movf	KE@Omega_body^(0+256),w
  8943  1628  0021               	movlb	1	; select bank1
  8944  1629  00A4               	movwf	___flmul@a^(0+128)
  8945  162A  318D  257C  3196   	fcall	___flmul
  8946  162D  0021               	movlb	1	; select bank1
  8947  162E  0823               	movf	(?___flmul+3)^(0+128),w
  8948  162F  00D7               	movwf	(___fladd@b+3)^(0+128)
  8949  1630  0822               	movf	(?___flmul+2)^(0+128),w
  8950  1631  00D6               	movwf	(___fladd@b+2)^(0+128)
  8951  1632  0821               	movf	(?___flmul+1)^(0+128),w
  8952  1633  00D5               	movwf	(___fladd@b+1)^(0+128)
  8953  1634  0820               	movf	?___flmul^(0+128),w
  8954  1635  00D4               	movwf	___fladd@b^(0+128)
  8955  1636  3042               	movlw	66
  8956  1637  00BD               	movwf	(___fldiv@a+3)^(0+128)
  8957  1638  3000               	movlw	0
  8958  1639  00BC               	movwf	(___fldiv@a+2)^(0+128)
  8959  163A  3000               	movlw	0
  8960  163B  00BB               	movwf	(___fldiv@a+1)^(0+128)
  8961  163C  3000               	movlw	0
  8962  163D  00BA               	movwf	___fldiv@a^(0+128)
  8963  163E  0022               	movlb	2	; select bank2
  8964  163F  084E               	movf	(KE@Velocity_body+3)^(0+256),w
  8965  1640  0021               	movlb	1	; select bank1
  8966  1641  00C1               	movwf	(___fldiv@b+3)^(0+128)
  8967  1642  0022               	movlb	2	; select bank2
  8968  1643  084D               	movf	(KE@Velocity_body+2)^(0+256),w
  8969  1644  0021               	movlb	1	; select bank1
  8970  1645  00C0               	movwf	(___fldiv@b+2)^(0+128)
  8971  1646  0022               	movlb	2	; select bank2
  8972  1647  084C               	movf	(KE@Velocity_body+1)^(0+256),w
  8973  1648  0021               	movlb	1	; select bank1
  8974  1649  00BF               	movwf	(___fldiv@b+1)^(0+128)
  8975  164A  0022               	movlb	2	; select bank2
  8976  164B  084B               	movf	KE@Velocity_body^(0+256),w
  8977  164C  0021               	movlb	1	; select bank1
  8978  164D  00BE               	movwf	___fldiv@b^(0+128)
  8979  164E  3192  2288  3196   	fcall	___fldiv
  8980  1651  0021               	movlb	1	; select bank1
  8981  1652  083D               	movf	(?___fldiv+3)^(0+128),w
  8982  1653  00DB               	movwf	(___fladd@a+3)^(0+128)
  8983  1654  083C               	movf	(?___fldiv+2)^(0+128),w
  8984  1655  00DA               	movwf	(___fladd@a+2)^(0+128)
  8985  1656  083B               	movf	(?___fldiv+1)^(0+128),w
  8986  1657  00D9               	movwf	(___fladd@a+1)^(0+128)
  8987  1658  083A               	movf	?___fldiv^(0+128),w
  8988  1659  00D8               	movwf	___fladd@a^(0+128)
  8989  165A  318B  2344  3196   	fcall	___fladd
  8990  165D  0021               	movlb	1	; select bank1
  8991  165E  0857               	movf	(?___fladd+3)^(0+128),w
  8992  165F  0022               	movlb	2	; select bank2
  8993  1660  00D2               	movwf	(KE@OmegaLeft+3)^(0+256)
  8994  1661  0021               	movlb	1	; select bank1
  8995  1662  0856               	movf	(?___fladd+2)^(0+128),w
  8996  1663  0022               	movlb	2	; select bank2
  8997  1664  00D1               	movwf	(KE@OmegaLeft+2)^(0+256)
  8998  1665  0021               	movlb	1	; select bank1
  8999  1666  0855               	movf	(?___fladd+1)^(0+128),w
  9000  1667  0022               	movlb	2	; select bank2
  9001  1668  00D0               	movwf	(KE@OmegaLeft+1)^(0+256)
  9002  1669  0021               	movlb	1	; select bank1
  9003  166A  0854               	movf	?___fladd^(0+128),w
  9004  166B  0022               	movlb	2	; select bank2
  9005  166C  00CF               	movwf	KE@OmegaLeft^(0+256)
  9006  166D                     l8459:
  9007                           
  9008                           ;main.c: 144:     OmegaRight = Velocity_body/32 - Omega_body*(69.5/32);
  9009  166D  3040               	movlw	64
  9010  166E  0021               	movlb	1	; select bank1
  9011  166F  00A3               	movwf	(___flmul@b+3)^(0+128)
  9012  1670  300B               	movlw	11
  9013  1671  00A2               	movwf	(___flmul@b+2)^(0+128)
  9014  1672  3000               	movlw	0
  9015  1673  00A1               	movwf	(___flmul@b+1)^(0+128)
  9016  1674  3000               	movlw	0
  9017  1675  00A0               	movwf	___flmul@b^(0+128)
  9018  1676  0022               	movlb	2	; select bank2
  9019  1677  084A               	movf	(KE@Omega_body+3)^(0+256),w
  9020  1678  0021               	movlb	1	; select bank1
  9021  1679  00A7               	movwf	(___flmul@a+3)^(0+128)
  9022  167A  0022               	movlb	2	; select bank2
  9023  167B  0849               	movf	(KE@Omega_body+2)^(0+256),w
  9024  167C  0021               	movlb	1	; select bank1
  9025  167D  00A6               	movwf	(___flmul@a+2)^(0+128)
  9026  167E  0022               	movlb	2	; select bank2
  9027  167F  0848               	movf	(KE@Omega_body+1)^(0+256),w
  9028  1680  0021               	movlb	1	; select bank1
  9029  1681  00A5               	movwf	(___flmul@a+1)^(0+128)
  9030  1682  0022               	movlb	2	; select bank2
  9031  1683  0847               	movf	KE@Omega_body^(0+256),w
  9032  1684  0021               	movlb	1	; select bank1
  9033  1685  00A4               	movwf	___flmul@a^(0+128)
  9034  1686  318D  257C  3196   	fcall	___flmul
  9035  1689  0021               	movlb	1	; select bank1
  9036  168A  0823               	movf	(?___flmul+3)^(0+128),w
  9037  168B  00EB               	movwf	(___flsub@a+3)^(0+128)
  9038  168C  0822               	movf	(?___flmul+2)^(0+128),w
  9039  168D  00EA               	movwf	(___flsub@a+2)^(0+128)
  9040  168E  0821               	movf	(?___flmul+1)^(0+128),w
  9041  168F  00E9               	movwf	(___flsub@a+1)^(0+128)
  9042  1690  0820               	movf	?___flmul^(0+128),w
  9043  1691  00E8               	movwf	___flsub@a^(0+128)
  9044  1692  3042               	movlw	66
  9045  1693  00BD               	movwf	(___fldiv@a+3)^(0+128)
  9046  1694  3000               	movlw	0
  9047  1695  00BC               	movwf	(___fldiv@a+2)^(0+128)
  9048  1696  3000               	movlw	0
  9049  1697  00BB               	movwf	(___fldiv@a+1)^(0+128)
  9050  1698  3000               	movlw	0
  9051  1699  00BA               	movwf	___fldiv@a^(0+128)
  9052  169A  0022               	movlb	2	; select bank2
  9053  169B  084E               	movf	(KE@Velocity_body+3)^(0+256),w
  9054  169C  0021               	movlb	1	; select bank1
  9055  169D  00C1               	movwf	(___fldiv@b+3)^(0+128)
  9056  169E  0022               	movlb	2	; select bank2
  9057  169F  084D               	movf	(KE@Velocity_body+2)^(0+256),w
  9058  16A0  0021               	movlb	1	; select bank1
  9059  16A1  00C0               	movwf	(___fldiv@b+2)^(0+128)
  9060  16A2  0022               	movlb	2	; select bank2
  9061  16A3  084C               	movf	(KE@Velocity_body+1)^(0+256),w
  9062  16A4  0021               	movlb	1	; select bank1
  9063  16A5  00BF               	movwf	(___fldiv@b+1)^(0+128)
  9064  16A6  0022               	movlb	2	; select bank2
  9065  16A7  084B               	movf	KE@Velocity_body^(0+256),w
  9066  16A8  0021               	movlb	1	; select bank1
  9067  16A9  00BE               	movwf	___fldiv@b^(0+128)
  9068  16AA  3192  2288  3196   	fcall	___fldiv
  9069  16AD  0021               	movlb	1	; select bank1
  9070  16AE  083D               	movf	(?___fldiv+3)^(0+128),w
  9071  16AF  00EF               	movwf	(___flsub@b+3)^(0+128)
  9072  16B0  083C               	movf	(?___fldiv+2)^(0+128),w
  9073  16B1  00EE               	movwf	(___flsub@b+2)^(0+128)
  9074  16B2  083B               	movf	(?___fldiv+1)^(0+128),w
  9075  16B3  00ED               	movwf	(___flsub@b+1)^(0+128)
  9076  16B4  083A               	movf	?___fldiv^(0+128),w
  9077  16B5  00EC               	movwf	___flsub@b^(0+128)
  9078  16B6  319A  22E4  3196   	fcall	___flsub
  9079  16B9  0021               	movlb	1	; select bank1
  9080  16BA  086B               	movf	(?___flsub+3)^(0+128),w
  9081  16BB  0022               	movlb	2	; select bank2
  9082  16BC  00D6               	movwf	(KE@OmegaRight+3)^(0+256)
  9083  16BD  0021               	movlb	1	; select bank1
  9084  16BE  086A               	movf	(?___flsub+2)^(0+128),w
  9085  16BF  0022               	movlb	2	; select bank2
  9086  16C0  00D5               	movwf	(KE@OmegaRight+2)^(0+256)
  9087  16C1  0021               	movlb	1	; select bank1
  9088  16C2  0869               	movf	(?___flsub+1)^(0+128),w
  9089  16C3  0022               	movlb	2	; select bank2
  9090  16C4  00D4               	movwf	(KE@OmegaRight+1)^(0+256)
  9091  16C5  0021               	movlb	1	; select bank1
  9092  16C6  0868               	movf	?___flsub^(0+128),w
  9093  16C7  0022               	movlb	2	; select bank2
  9094  16C8  00D3               	movwf	KE@OmegaRight^(0+256)
  9095  16C9                     l8461:
  9096                           
  9097                           ;main.c: 149:     if(OmegaLeft < 0){
  9098  16C9  0852               	movf	(KE@OmegaLeft+3)^(0+256),w
  9099  16CA  0020               	movlb	0	; select bank0
  9100  16CB  00B1               	movwf	___flge@ff1+3
  9101  16CC  0022               	movlb	2	; select bank2
  9102  16CD  0851               	movf	(KE@OmegaLeft+2)^(0+256),w
  9103  16CE  0020               	movlb	0	; select bank0
  9104  16CF  00B0               	movwf	___flge@ff1+2
  9105  16D0  0022               	movlb	2	; select bank2
  9106  16D1  0850               	movf	(KE@OmegaLeft+1)^(0+256),w
  9107  16D2  0020               	movlb	0	; select bank0
  9108  16D3  00AF               	movwf	___flge@ff1+1
  9109  16D4  0022               	movlb	2	; select bank2
  9110  16D5  084F               	movf	KE@OmegaLeft^(0+256),w
  9111  16D6  0020               	movlb	0	; select bank0
  9112  16D7  00AE               	movwf	___flge@ff1
  9113  16D8  3000               	movlw	0
  9114  16D9  00B5               	movwf	___flge@ff2+3
  9115  16DA  3000               	movlw	0
  9116  16DB  00B4               	movwf	___flge@ff2+2
  9117  16DC  3000               	movlw	0
  9118  16DD  00B3               	movwf	___flge@ff2+1
  9119  16DE  3000               	movlw	0
  9120  16DF  00B2               	movwf	___flge@ff2
  9121  16E0  319C  24AD  3196   	fcall	___flge
  9122  16E3  1803               	btfsc	3,0
  9123  16E4  2EE6               	goto	u8451
  9124  16E5  2EE7               	goto	u8450
  9125  16E6                     u8451:
  9126  16E6  2F0D               	goto	l1466
  9127  16E7                     u8450:
  9128  16E7                     l8463:
  9129                           
  9130                           ;main.c: 150:         OmegaLeft = -OmegaLeft;
  9131  16E7  0022               	movlb	2	; select bank2
  9132  16E8  0852               	movf	(KE@OmegaLeft+3)^(0+256),w
  9133  16E9  0020               	movlb	0	; select bank0
  9134  16EA  00B1               	movwf	___flneg@f1+3
  9135  16EB  0022               	movlb	2	; select bank2
  9136  16EC  0851               	movf	(KE@OmegaLeft+2)^(0+256),w
  9137  16ED  0020               	movlb	0	; select bank0
  9138  16EE  00B0               	movwf	___flneg@f1+2
  9139  16EF  0022               	movlb	2	; select bank2
  9140  16F0  0850               	movf	(KE@OmegaLeft+1)^(0+256),w
  9141  16F1  0020               	movlb	0	; select bank0
  9142  16F2  00AF               	movwf	___flneg@f1+1
  9143  16F3  0022               	movlb	2	; select bank2
  9144  16F4  084F               	movf	KE@OmegaLeft^(0+256),w
  9145  16F5  0020               	movlb	0	; select bank0
  9146  16F6  00AE               	movwf	___flneg@f1
  9147  16F7  319A  2215  3196   	fcall	___flneg
  9148  16FA  0020               	movlb	0	; select bank0
  9149  16FB  0831               	movf	?___flneg+3,w
  9150  16FC  0022               	movlb	2	; select bank2
  9151  16FD  00D2               	movwf	(KE@OmegaLeft+3)^(0+256)
  9152  16FE  0020               	movlb	0	; select bank0
  9153  16FF  0830               	movf	?___flneg+2,w
  9154  1700  0022               	movlb	2	; select bank2
  9155  1701  00D1               	movwf	(KE@OmegaLeft+2)^(0+256)
  9156  1702  0020               	movlb	0	; select bank0
  9157  1703  082F               	movf	?___flneg+1,w
  9158  1704  0022               	movlb	2	; select bank2
  9159  1705  00D0               	movwf	(KE@OmegaLeft+1)^(0+256)
  9160  1706  0020               	movlb	0	; select bank0
  9161  1707  082E               	movf	?___flneg,w
  9162  1708  0022               	movlb	2	; select bank2
  9163  1709  00CF               	movwf	KE@OmegaLeft^(0+256)
  9164  170A                     l8465:
  9165                           
  9166                           ;main.c: 151:         LATFbits.LATF7 = 0;
  9167  170A  0027               	movlb	7	; select bank7
  9168  170B  138C               	bcf	12,7	;volatile
  9169                           
  9170                           ;main.c: 152:     }
  9171  170C  2F0F               	goto	l8467
  9172  170D                     l1466:	
  9173                           ;main.c: 153:     else LATFbits.LATF7 = 1;
  9174                           
  9175  170D  0027               	movlb	7	; select bank7
  9176  170E  178C               	bsf	12,7	;volatile
  9177  170F                     l8467:
  9178                           
  9179                           ;main.c: 155:     if(OmegaRight < 0){
  9180  170F  0022               	movlb	2	; select bank2
  9181  1710  0856               	movf	(KE@OmegaRight+3)^(0+256),w
  9182  1711  0020               	movlb	0	; select bank0
  9183  1712  00B1               	movwf	___flge@ff1+3
  9184  1713  0022               	movlb	2	; select bank2
  9185  1714  0855               	movf	(KE@OmegaRight+2)^(0+256),w
  9186  1715  0020               	movlb	0	; select bank0
  9187  1716  00B0               	movwf	___flge@ff1+2
  9188  1717  0022               	movlb	2	; select bank2
  9189  1718  0854               	movf	(KE@OmegaRight+1)^(0+256),w
  9190  1719  0020               	movlb	0	; select bank0
  9191  171A  00AF               	movwf	___flge@ff1+1
  9192  171B  0022               	movlb	2	; select bank2
  9193  171C  0853               	movf	KE@OmegaRight^(0+256),w
  9194  171D  0020               	movlb	0	; select bank0
  9195  171E  00AE               	movwf	___flge@ff1
  9196  171F  3000               	movlw	0
  9197  1720  00B5               	movwf	___flge@ff2+3
  9198  1721  3000               	movlw	0
  9199  1722  00B4               	movwf	___flge@ff2+2
  9200  1723  3000               	movlw	0
  9201  1724  00B3               	movwf	___flge@ff2+1
  9202  1725  3000               	movlw	0
  9203  1726  00B2               	movwf	___flge@ff2
  9204  1727  319C  24AD  3196   	fcall	___flge
  9205  172A  1803               	btfsc	3,0
  9206  172B  2F2D               	goto	u8461
  9207  172C  2F2E               	goto	u8460
  9208  172D                     u8461:
  9209  172D  2F54               	goto	l1468
  9210  172E                     u8460:
  9211  172E                     l8469:
  9212                           
  9213                           ;main.c: 156:         OmegaRight = -OmegaRight;
  9214  172E  0022               	movlb	2	; select bank2
  9215  172F  0856               	movf	(KE@OmegaRight+3)^(0+256),w
  9216  1730  0020               	movlb	0	; select bank0
  9217  1731  00B1               	movwf	___flneg@f1+3
  9218  1732  0022               	movlb	2	; select bank2
  9219  1733  0855               	movf	(KE@OmegaRight+2)^(0+256),w
  9220  1734  0020               	movlb	0	; select bank0
  9221  1735  00B0               	movwf	___flneg@f1+2
  9222  1736  0022               	movlb	2	; select bank2
  9223  1737  0854               	movf	(KE@OmegaRight+1)^(0+256),w
  9224  1738  0020               	movlb	0	; select bank0
  9225  1739  00AF               	movwf	___flneg@f1+1
  9226  173A  0022               	movlb	2	; select bank2
  9227  173B  0853               	movf	KE@OmegaRight^(0+256),w
  9228  173C  0020               	movlb	0	; select bank0
  9229  173D  00AE               	movwf	___flneg@f1
  9230  173E  319A  2215  3196   	fcall	___flneg
  9231  1741  0020               	movlb	0	; select bank0
  9232  1742  0831               	movf	?___flneg+3,w
  9233  1743  0022               	movlb	2	; select bank2
  9234  1744  00D6               	movwf	(KE@OmegaRight+3)^(0+256)
  9235  1745  0020               	movlb	0	; select bank0
  9236  1746  0830               	movf	?___flneg+2,w
  9237  1747  0022               	movlb	2	; select bank2
  9238  1748  00D5               	movwf	(KE@OmegaRight+2)^(0+256)
  9239  1749  0020               	movlb	0	; select bank0
  9240  174A  082F               	movf	?___flneg+1,w
  9241  174B  0022               	movlb	2	; select bank2
  9242  174C  00D4               	movwf	(KE@OmegaRight+1)^(0+256)
  9243  174D  0020               	movlb	0	; select bank0
  9244  174E  082E               	movf	?___flneg,w
  9245  174F  0022               	movlb	2	; select bank2
  9246  1750  00D3               	movwf	KE@OmegaRight^(0+256)
  9247  1751                     l8471:
  9248                           
  9249                           ;main.c: 157:         LATFbits.LATF3 = 1;
  9250  1751  0027               	movlb	7	; select bank7
  9251  1752  158C               	bsf	12,3	;volatile
  9252                           
  9253                           ;main.c: 158:     }
  9254  1753  2F56               	goto	l8473
  9255  1754                     l1468:	
  9256                           ;main.c: 159:     else LATFbits.LATF3 = 0;
  9257                           
  9258  1754  0027               	movlb	7	; select bank7
  9259  1755  118C               	bcf	12,3	;volatile
  9260  1756                     l8473:
  9261                           
  9262                           ;main.c: 161:     if (OmegaLeft == 0) t_left = 1000;
  9263  1756  0022               	movlb	2	; select bank2
  9264  1757  0852               	movf	(KE@OmegaLeft+3)^(0+256),w
  9265  1758  0021               	movlb	1	; select bank1
  9266  1759  00A3               	movwf	(___fleq@ff1+3)^(0+128)
  9267  175A  0022               	movlb	2	; select bank2
  9268  175B  0851               	movf	(KE@OmegaLeft+2)^(0+256),w
  9269  175C  0021               	movlb	1	; select bank1
  9270  175D  00A2               	movwf	(___fleq@ff1+2)^(0+128)
  9271  175E  0022               	movlb	2	; select bank2
  9272  175F  0850               	movf	(KE@OmegaLeft+1)^(0+256),w
  9273  1760  0021               	movlb	1	; select bank1
  9274  1761  00A1               	movwf	(___fleq@ff1+1)^(0+128)
  9275  1762  0022               	movlb	2	; select bank2
  9276  1763  084F               	movf	KE@OmegaLeft^(0+256),w
  9277  1764  0021               	movlb	1	; select bank1
  9278  1765  00A0               	movwf	___fleq@ff1^(0+128)
  9279  1766  3000               	movlw	0
  9280  1767  00A7               	movwf	(___fleq@ff2+3)^(0+128)
  9281  1768  3000               	movlw	0
  9282  1769  00A6               	movwf	(___fleq@ff2+2)^(0+128)
  9283  176A  3000               	movlw	0
  9284  176B  00A5               	movwf	(___fleq@ff2+1)^(0+128)
  9285  176C  3000               	movlw	0
  9286  176D  00A4               	movwf	___fleq@ff2^(0+128)
  9287  176E  319B  234A  3196   	fcall	___fleq
  9288  1771  1C03               	btfss	3,0
  9289  1772  2F74               	goto	u8471
  9290  1773  2F75               	goto	u8470
  9291  1774                     u8471:
  9292  1774  2F7B               	goto	l8477
  9293  1775                     u8470:
  9294  1775                     l8475:
  9295  1775  30E8               	movlw	232
  9296  1776  0022               	movlb	2	; select bank2
  9297  1777  00DF               	movwf	_t_left^(0+256)
  9298  1778  3003               	movlw	3
  9299  1779  00E0               	movwf	(_t_left^(0+256)+1)
  9300  177A  2FAB               	goto	l1471
  9301  177B                     l8477:
  9302  177B  3041               	movlw	65
  9303  177C  0021               	movlb	1	; select bank1
  9304  177D  00C1               	movwf	(___fldiv@b+3)^(0+128)
  9305  177E  30FB               	movlw	251
  9306  177F  00C0               	movwf	(___fldiv@b+2)^(0+128)
  9307  1780  3053               	movlw	83
  9308  1781  00BF               	movwf	(___fldiv@b+1)^(0+128)
  9309  1782  30F8               	movlw	248
  9310  1783  00BE               	movwf	___fldiv@b^(0+128)
  9311  1784  0022               	movlb	2	; select bank2
  9312  1785  0852               	movf	(KE@OmegaLeft+3)^(0+256),w
  9313  1786  0021               	movlb	1	; select bank1
  9314  1787  00BD               	movwf	(___fldiv@a+3)^(0+128)
  9315  1788  0022               	movlb	2	; select bank2
  9316  1789  0851               	movf	(KE@OmegaLeft+2)^(0+256),w
  9317  178A  0021               	movlb	1	; select bank1
  9318  178B  00BC               	movwf	(___fldiv@a+2)^(0+128)
  9319  178C  0022               	movlb	2	; select bank2
  9320  178D  0850               	movf	(KE@OmegaLeft+1)^(0+256),w
  9321  178E  0021               	movlb	1	; select bank1
  9322  178F  00BB               	movwf	(___fldiv@a+1)^(0+128)
  9323  1790  0022               	movlb	2	; select bank2
  9324  1791  084F               	movf	KE@OmegaLeft^(0+256),w
  9325  1792  0021               	movlb	1	; select bank1
  9326  1793  00BA               	movwf	___fldiv@a^(0+128)
  9327  1794  3192  2288  3196   	fcall	___fldiv
  9328  1797  0021               	movlb	1	; select bank1
  9329  1798  083D               	movf	(?___fldiv+3)^(0+128),w
  9330  1799  00EB               	movwf	(___fltol@f1+3)^(0+128)
  9331  179A  083C               	movf	(?___fldiv+2)^(0+128),w
  9332  179B  00EA               	movwf	(___fltol@f1+2)^(0+128)
  9333  179C  083B               	movf	(?___fldiv+1)^(0+128),w
  9334  179D  00E9               	movwf	(___fltol@f1+1)^(0+128)
  9335  179E  083A               	movf	?___fldiv^(0+128),w
  9336  179F  00E8               	movwf	___fltol@f1^(0+128)
  9337  17A0  319B  2399  3196   	fcall	___fltol
  9338  17A3  0021               	movlb	1	; select bank1
  9339  17A4  0869               	movf	(?___fltol+1)^(0+128),w
  9340  17A5  0022               	movlb	2	; select bank2
  9341  17A6  00E0               	movwf	(_t_left+1)^(0+256)
  9342  17A7  0021               	movlb	1	; select bank1
  9343  17A8  0868               	movf	?___fltol^(0+128),w
  9344  17A9  0022               	movlb	2	; select bank2
  9345  17AA  00DF               	movwf	_t_left^(0+256)
  9346  17AB                     l1471:
  9347                           
  9348                           ;main.c: 163:     if (OmegaRight == 0) t_right = 1000;
  9349  17AB  0856               	movf	(KE@OmegaRight+3)^(0+256),w
  9350  17AC  0021               	movlb	1	; select bank1
  9351  17AD  00A3               	movwf	(___fleq@ff1+3)^(0+128)
  9352  17AE  0022               	movlb	2	; select bank2
  9353  17AF  0855               	movf	(KE@OmegaRight+2)^(0+256),w
  9354  17B0  0021               	movlb	1	; select bank1
  9355  17B1  00A2               	movwf	(___fleq@ff1+2)^(0+128)
  9356  17B2  0022               	movlb	2	; select bank2
  9357  17B3  0854               	movf	(KE@OmegaRight+1)^(0+256),w
  9358  17B4  0021               	movlb	1	; select bank1
  9359  17B5  00A1               	movwf	(___fleq@ff1+1)^(0+128)
  9360  17B6  0022               	movlb	2	; select bank2
  9361  17B7  0853               	movf	KE@OmegaRight^(0+256),w
  9362  17B8  0021               	movlb	1	; select bank1
  9363  17B9  00A0               	movwf	___fleq@ff1^(0+128)
  9364  17BA  3000               	movlw	0
  9365  17BB  00A7               	movwf	(___fleq@ff2+3)^(0+128)
  9366  17BC  3000               	movlw	0
  9367  17BD  00A6               	movwf	(___fleq@ff2+2)^(0+128)
  9368  17BE  3000               	movlw	0
  9369  17BF  00A5               	movwf	(___fleq@ff2+1)^(0+128)
  9370  17C0  3000               	movlw	0
  9371  17C1  00A4               	movwf	___fleq@ff2^(0+128)
  9372  17C2  319B  234A  3196   	fcall	___fleq
  9373  17C5  1C03               	btfss	3,0
  9374  17C6  2FC8               	goto	u8481
  9375  17C7  2FC9               	goto	u8480
  9376  17C8                     u8481:
  9377  17C8  2FCF               	goto	l8481
  9378  17C9                     u8480:
  9379  17C9                     l8479:
  9380  17C9  30E8               	movlw	232
  9381  17CA  0022               	movlb	2	; select bank2
  9382  17CB  00DD               	movwf	_t_right^(0+256)
  9383  17CC  3003               	movlw	3
  9384  17CD  00DE               	movwf	(_t_right^(0+256)+1)
  9385  17CE  2FFF               	goto	l1474
  9386  17CF                     l8481:
  9387  17CF  3042               	movlw	66
  9388  17D0  0021               	movlb	1	; select bank1
  9389  17D1  00C1               	movwf	(___fldiv@b+3)^(0+128)
  9390  17D2  3005               	movlw	5
  9391  17D3  00C0               	movwf	(___fldiv@b+2)^(0+128)
  9392  17D4  30A9               	movlw	169
  9393  17D5  00BF               	movwf	(___fldiv@b+1)^(0+128)
  9394  17D6  30FC               	movlw	252
  9395  17D7  00BE               	movwf	___fldiv@b^(0+128)
  9396  17D8  0022               	movlb	2	; select bank2
  9397  17D9  0856               	movf	(KE@OmegaRight+3)^(0+256),w
  9398  17DA  0021               	movlb	1	; select bank1
  9399  17DB  00BD               	movwf	(___fldiv@a+3)^(0+128)
  9400  17DC  0022               	movlb	2	; select bank2
  9401  17DD  0855               	movf	(KE@OmegaRight+2)^(0+256),w
  9402  17DE  0021               	movlb	1	; select bank1
  9403  17DF  00BC               	movwf	(___fldiv@a+2)^(0+128)
  9404  17E0  0022               	movlb	2	; select bank2
  9405  17E1  0854               	movf	(KE@OmegaRight+1)^(0+256),w
  9406  17E2  0021               	movlb	1	; select bank1
  9407  17E3  00BB               	movwf	(___fldiv@a+1)^(0+128)
  9408  17E4  0022               	movlb	2	; select bank2
  9409  17E5  0853               	movf	KE@OmegaRight^(0+256),w
  9410  17E6  0021               	movlb	1	; select bank1
  9411  17E7  00BA               	movwf	___fldiv@a^(0+128)
  9412  17E8  3192  2288  3196   	fcall	___fldiv
  9413  17EB  0021               	movlb	1	; select bank1
  9414  17EC  083D               	movf	(?___fldiv+3)^(0+128),w
  9415  17ED  00EB               	movwf	(___fltol@f1+3)^(0+128)
  9416  17EE  083C               	movf	(?___fldiv+2)^(0+128),w
  9417  17EF  00EA               	movwf	(___fltol@f1+2)^(0+128)
  9418  17F0  083B               	movf	(?___fldiv+1)^(0+128),w
  9419  17F1  00E9               	movwf	(___fltol@f1+1)^(0+128)
  9420  17F2  083A               	movf	?___fldiv^(0+128),w
  9421  17F3  00E8               	movwf	___fltol@f1^(0+128)
  9422  17F4  319B  2399  3196   	fcall	___fltol
  9423  17F7  0021               	movlb	1	; select bank1
  9424  17F8  0869               	movf	(?___fltol+1)^(0+128),w
  9425  17F9  0022               	movlb	2	; select bank2
  9426  17FA  00DE               	movwf	(_t_right+1)^(0+256)
  9427  17FB  0021               	movlb	1	; select bank1
  9428  17FC  0868               	movf	?___fltol^(0+128),w
  9429  17FD  0022               	movlb	2	; select bank2
  9430  17FE  00DD               	movwf	_t_right^(0+256)
  9431  17FF                     l1474:
  9432  17FF  0008               	return
  9433  1800                     __end_of_KE:
  9434                           
  9435                           	psect	text29
  9436  1AE4                     __ptext29:	
  9437 ;; *************** function ___flsub *****************
  9438 ;; Defined at:
  9439 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;  a               4   72[BANK1 ] void 
  9442 ;;  b               4   76[BANK1 ] void 
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;		None
  9445 ;; Return value:  Size  Location     Type
  9446 ;;                  4   72[BANK1 ] void 
  9447 ;; Registers used:
  9448 ;;		wreg, status,2, status,0, pclath, cstack
  9449 ;; Tracked objects:
  9450 ;;		On entry : 0/0
  9451 ;;		On exit  : 0/0
  9452 ;;		Unchanged: 0/0
  9453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9454 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9457 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9458 ;;Total ram usage:        8 bytes
  9459 ;; Hardware stack levels used: 1
  9460 ;; Hardware stack levels required when called: 6
  9461 ;; This function calls:
  9462 ;;		___fladd
  9463 ;; This function is called by:
  9464 ;;		_KE
  9465 ;;		_PID
  9466 ;; This function uses a non-reentrant model
  9467 ;;
  9468                           
  9469                           
  9470                           ;psect for function ___flsub
  9471  1AE4                     ___flsub:
  9472  1AE4                     l8153:	
  9473                           ;incstack = 0
  9474                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  9475                           
  9476  1AE4  3080               	movlw	128
  9477  1AE5  0021               	movlb	1	; select bank1
  9478  1AE6  06EB               	xorwf	(___flsub@a+3)^(0+128),f
  9479  1AE7                     l8155:
  9480  1AE7  086F               	movf	(___flsub@b+3)^(0+128),w
  9481  1AE8  00D7               	movwf	(___fladd@b+3)^(0+128)
  9482  1AE9  086E               	movf	(___flsub@b+2)^(0+128),w
  9483  1AEA  00D6               	movwf	(___fladd@b+2)^(0+128)
  9484  1AEB  086D               	movf	(___flsub@b+1)^(0+128),w
  9485  1AEC  00D5               	movwf	(___fladd@b+1)^(0+128)
  9486  1AED  086C               	movf	___flsub@b^(0+128),w
  9487  1AEE  00D4               	movwf	___fladd@b^(0+128)
  9488  1AEF  086B               	movf	(___flsub@a+3)^(0+128),w
  9489  1AF0  00DB               	movwf	(___fladd@a+3)^(0+128)
  9490  1AF1  086A               	movf	(___flsub@a+2)^(0+128),w
  9491  1AF2  00DA               	movwf	(___fladd@a+2)^(0+128)
  9492  1AF3  0869               	movf	(___flsub@a+1)^(0+128),w
  9493  1AF4  00D9               	movwf	(___fladd@a+1)^(0+128)
  9494  1AF5  0868               	movf	___flsub@a^(0+128),w
  9495  1AF6  00D8               	movwf	___fladd@a^(0+128)
  9496  1AF7  318B  2344  319A   	fcall	___fladd
  9497  1AFA  0021               	movlb	1	; select bank1
  9498  1AFB  0857               	movf	(?___fladd+3)^(0+128),w
  9499  1AFC  00EB               	movwf	(?___flsub+3)^(0+128)
  9500  1AFD  0856               	movf	(?___fladd+2)^(0+128),w
  9501  1AFE  00EA               	movwf	(?___flsub+2)^(0+128)
  9502  1AFF  0855               	movf	(?___fladd+1)^(0+128),w
  9503  1B00  00E9               	movwf	(?___flsub+1)^(0+128)
  9504  1B01  0854               	movf	?___fladd^(0+128),w
  9505  1B02  00E8               	movwf	?___flsub^(0+128)
  9506  1B03                     l2153:
  9507  1B03  0008               	return
  9508  1B04                     __end_of___flsub:
  9509                           
  9510                           	psect	text30
  9511  0B44                     __ptext30:	
  9512 ;; *************** function ___fladd *****************
  9513 ;; Defined at:
  9514 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  9515 ;; Parameters:    Size  Location     Type
  9516 ;;  b               4   52[BANK1 ] void 
  9517 ;;  a               4   56[BANK1 ] void 
  9518 ;; Auto vars:     Size  Location     Type
  9519 ;;  grs             1   71[BANK1 ] unsigned char 
  9520 ;;  bexp            1   70[BANK1 ] unsigned char 
  9521 ;;  aexp            1   69[BANK1 ] unsigned char 
  9522 ;;  signs           1   68[BANK1 ] unsigned char 
  9523 ;; Return value:  Size  Location     Type
  9524 ;;                  4   52[BANK1 ] unsigned char 
  9525 ;; Registers used:
  9526 ;;		wreg, status,2, status,0
  9527 ;; Tracked objects:
  9528 ;;		On entry : 0/0
  9529 ;;		On exit  : 0/0
  9530 ;;		Unchanged: 0/0
  9531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9532 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9533 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9534 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9535 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  9536 ;;Total ram usage:       20 bytes
  9537 ;; Hardware stack levels used: 1
  9538 ;; Hardware stack levels required when called: 5
  9539 ;; This function calls:
  9540 ;;		Nothing
  9541 ;; This function is called by:
  9542 ;;		_KE
  9543 ;;		_AutoLineControl
  9544 ;;		___flsub
  9545 ;;		_distance_sensor_bottom
  9546 ;;		_distance_sensor_top
  9547 ;;		_PID
  9548 ;; This function uses a non-reentrant model
  9549 ;;
  9550                           
  9551                           
  9552                           ;psect for function ___fladd
  9553  0B44                     ___fladd:
  9554  0B44                     l7855:	
  9555                           ;incstack = 0
  9556                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  9557                           
  9558  0B44  0021               	movlb	1	; select bank1
  9559  0B45  0857               	movf	(___fladd@b^(0+128)+3),w
  9560  0B46  3980               	andlw	128
  9561  0B47  00DC               	movwf	??___fladd^(0+128)
  9562  0B48  085C               	movf	??___fladd^(0+128),w
  9563  0B49  00E4               	movwf	___fladd@signs^(0+128)
  9564  0B4A                     l7857:
  9565  0B4A  3557               	lslf	(___fladd@b^(0+128)+3),w
  9566  0B4B  00DC               	movwf	??___fladd^(0+128)
  9567  0B4C  085C               	movf	??___fladd^(0+128),w
  9568  0B4D  00E6               	movwf	___fladd@bexp^(0+128)
  9569  0B4E                     l7859:
  9570  0B4E  1FD6               	btfss	(___fladd@b^(0+128)+2),7
  9571  0B4F  2B51               	goto	u7171
  9572  0B50  2B52               	goto	u7170
  9573  0B51                     u7171:
  9574  0B51  2B53               	goto	l7863
  9575  0B52                     u7170:
  9576  0B52                     l7861:
  9577  0B52  1466               	bsf	___fladd@bexp^(0+128),0
  9578  0B53                     l7863:
  9579  0B53  0866               	movf	___fladd@bexp^(0+128),w
  9580  0B54  1903               	btfsc	3,2
  9581  0B55  2B57               	goto	u7181
  9582  0B56  2B58               	goto	u7180
  9583  0B57                     u7181:
  9584  0B57  2B68               	goto	l7873
  9585  0B58                     u7180:
  9586  0B58                     l7865:
  9587  0B58  0A66               	incf	___fladd@bexp^(0+128),w
  9588  0B59  1D03               	btfss	3,2
  9589  0B5A  2B5C               	goto	u7191
  9590  0B5B  2B5D               	goto	u7190
  9591  0B5C                     u7191:
  9592  0B5C  2B65               	goto	l7869
  9593  0B5D                     u7190:
  9594  0B5D                     l7867:
  9595  0B5D  3000               	movlw	0
  9596  0B5E  00D7               	movwf	(___fladd@b+3)^(0+128)
  9597  0B5F  3000               	movlw	0
  9598  0B60  00D6               	movwf	(___fladd@b+2)^(0+128)
  9599  0B61  3000               	movlw	0
  9600  0B62  00D5               	movwf	(___fladd@b+1)^(0+128)
  9601  0B63  3000               	movlw	0
  9602  0B64  00D4               	movwf	___fladd@b^(0+128)
  9603  0B65                     l7869:
  9604  0B65  17D6               	bsf	(___fladd@b^(0+128)+2),7
  9605  0B66                     l7871:
  9606  0B66  01D7               	clrf	(___fladd@b^(0+128)+3)
  9607  0B67  2B70               	goto	l7875
  9608  0B68                     l7873:
  9609  0B68  3000               	movlw	0
  9610  0B69  00D7               	movwf	(___fladd@b+3)^(0+128)
  9611  0B6A  3000               	movlw	0
  9612  0B6B  00D6               	movwf	(___fladd@b+2)^(0+128)
  9613  0B6C  3000               	movlw	0
  9614  0B6D  00D5               	movwf	(___fladd@b+1)^(0+128)
  9615  0B6E  3000               	movlw	0
  9616  0B6F  00D4               	movwf	___fladd@b^(0+128)
  9617  0B70                     l7875:
  9618  0B70  085B               	movf	(___fladd@a^(0+128)+3),w
  9619  0B71  3980               	andlw	128
  9620  0B72  00DC               	movwf	??___fladd^(0+128)
  9621  0B73  085C               	movf	??___fladd^(0+128),w
  9622  0B74  00E5               	movwf	___fladd@aexp^(0+128)
  9623  0B75                     l7877:
  9624  0B75  0865               	movf	___fladd@aexp^(0+128),w
  9625  0B76  0664               	xorwf	___fladd@signs^(0+128),w
  9626  0B77  1903               	skipnz
  9627  0B78  2B7A               	goto	u7201
  9628  0B79  2B7B               	goto	u7200
  9629  0B7A                     u7201:
  9630  0B7A  2B7C               	goto	l7881
  9631  0B7B                     u7200:
  9632  0B7B                     l7879:
  9633  0B7B  1764               	bsf	___fladd@signs^(0+128),6
  9634  0B7C                     l7881:
  9635  0B7C  355B               	lslf	(___fladd@a^(0+128)+3),w
  9636  0B7D  00DC               	movwf	??___fladd^(0+128)
  9637  0B7E  085C               	movf	??___fladd^(0+128),w
  9638  0B7F  00E5               	movwf	___fladd@aexp^(0+128)
  9639  0B80                     l7883:
  9640  0B80  1FDA               	btfss	(___fladd@a^(0+128)+2),7
  9641  0B81  2B83               	goto	u7211
  9642  0B82  2B84               	goto	u7210
  9643  0B83                     u7211:
  9644  0B83  2B85               	goto	l7887
  9645  0B84                     u7210:
  9646  0B84                     l7885:
  9647  0B84  1465               	bsf	___fladd@aexp^(0+128),0
  9648  0B85                     l7887:
  9649  0B85  0865               	movf	___fladd@aexp^(0+128),w
  9650  0B86  1903               	btfsc	3,2
  9651  0B87  2B89               	goto	u7221
  9652  0B88  2B8A               	goto	u7220
  9653  0B89                     u7221:
  9654  0B89  2B9A               	goto	l7897
  9655  0B8A                     u7220:
  9656  0B8A                     l7889:
  9657  0B8A  0A65               	incf	___fladd@aexp^(0+128),w
  9658  0B8B  1D03               	btfss	3,2
  9659  0B8C  2B8E               	goto	u7231
  9660  0B8D  2B8F               	goto	u7230
  9661  0B8E                     u7231:
  9662  0B8E  2B97               	goto	l7893
  9663  0B8F                     u7230:
  9664  0B8F                     l7891:
  9665  0B8F  3000               	movlw	0
  9666  0B90  00DB               	movwf	(___fladd@a+3)^(0+128)
  9667  0B91  3000               	movlw	0
  9668  0B92  00DA               	movwf	(___fladd@a+2)^(0+128)
  9669  0B93  3000               	movlw	0
  9670  0B94  00D9               	movwf	(___fladd@a+1)^(0+128)
  9671  0B95  3000               	movlw	0
  9672  0B96  00D8               	movwf	___fladd@a^(0+128)
  9673  0B97                     l7893:
  9674  0B97  17DA               	bsf	(___fladd@a^(0+128)+2),7
  9675  0B98                     l7895:
  9676  0B98  01DB               	clrf	(___fladd@a^(0+128)+3)
  9677  0B99  2BA2               	goto	l2107
  9678  0B9A                     l7897:
  9679  0B9A  3000               	movlw	0
  9680  0B9B  00DB               	movwf	(___fladd@a+3)^(0+128)
  9681  0B9C  3000               	movlw	0
  9682  0B9D  00DA               	movwf	(___fladd@a+2)^(0+128)
  9683  0B9E  3000               	movlw	0
  9684  0B9F  00D9               	movwf	(___fladd@a+1)^(0+128)
  9685  0BA0  3000               	movlw	0
  9686  0BA1  00D8               	movwf	___fladd@a^(0+128)
  9687  0BA2                     l2107:
  9688  0BA2  0866               	movf	___fladd@bexp^(0+128),w
  9689  0BA3  0265               	subwf	___fladd@aexp^(0+128),w
  9690  0BA4  1803               	skipnc
  9691  0BA5  2BA7               	goto	u7241
  9692  0BA6  2BA8               	goto	u7240
  9693  0BA7                     u7241:
  9694  0BA7  2BEC               	goto	l7933
  9695  0BA8                     u7240:
  9696  0BA8                     l7899:
  9697  0BA8  1F64               	btfss	___fladd@signs^(0+128),6
  9698  0BA9  2BAB               	goto	u7251
  9699  0BAA  2BAC               	goto	u7250
  9700  0BAB                     u7251:
  9701  0BAB  2BB0               	goto	l7903
  9702  0BAC                     u7250:
  9703  0BAC                     l7901:
  9704  0BAC  3080               	movlw	128
  9705  0BAD  00DC               	movwf	??___fladd^(0+128)
  9706  0BAE  085C               	movf	??___fladd^(0+128),w
  9707  0BAF  06E4               	xorwf	___fladd@signs^(0+128),f
  9708  0BB0                     l7903:
  9709  0BB0  0866               	movf	___fladd@bexp^(0+128),w
  9710  0BB1  00DC               	movwf	??___fladd^(0+128)
  9711  0BB2  085C               	movf	??___fladd^(0+128),w
  9712  0BB3  00E7               	movwf	___fladd@grs^(0+128)
  9713  0BB4                     l7905:
  9714  0BB4  0865               	movf	___fladd@aexp^(0+128),w
  9715  0BB5  00DC               	movwf	??___fladd^(0+128)
  9716  0BB6  085C               	movf	??___fladd^(0+128),w
  9717  0BB7  00E6               	movwf	___fladd@bexp^(0+128)
  9718  0BB8                     l7907:
  9719  0BB8  0867               	movf	___fladd@grs^(0+128),w
  9720  0BB9  00DC               	movwf	??___fladd^(0+128)
  9721  0BBA  085C               	movf	??___fladd^(0+128),w
  9722  0BBB  00E5               	movwf	___fladd@aexp^(0+128)
  9723  0BBC                     l7909:
  9724  0BBC  0854               	movf	___fladd@b^(0+128),w
  9725  0BBD  00DC               	movwf	??___fladd^(0+128)
  9726  0BBE  085C               	movf	??___fladd^(0+128),w
  9727  0BBF  00E7               	movwf	___fladd@grs^(0+128)
  9728  0BC0                     l7911:
  9729  0BC0  0858               	movf	___fladd@a^(0+128),w
  9730  0BC1  00DC               	movwf	??___fladd^(0+128)
  9731  0BC2  085C               	movf	??___fladd^(0+128),w
  9732  0BC3  00D4               	movwf	___fladd@b^(0+128)
  9733  0BC4                     l7913:
  9734  0BC4  0867               	movf	___fladd@grs^(0+128),w
  9735  0BC5  00DC               	movwf	??___fladd^(0+128)
  9736  0BC6  085C               	movf	??___fladd^(0+128),w
  9737  0BC7  00D8               	movwf	___fladd@a^(0+128)
  9738  0BC8                     l7915:
  9739  0BC8  0855               	movf	(___fladd@b^(0+128)+1),w
  9740  0BC9  00DC               	movwf	??___fladd^(0+128)
  9741  0BCA  085C               	movf	??___fladd^(0+128),w
  9742  0BCB  00E7               	movwf	___fladd@grs^(0+128)
  9743  0BCC                     l7917:
  9744  0BCC  0859               	movf	(___fladd@a^(0+128)+1),w
  9745  0BCD  00DC               	movwf	??___fladd^(0+128)
  9746  0BCE  085C               	movf	??___fladd^(0+128),w
  9747  0BCF  00D5               	movwf	(___fladd@b^(0+128)+1)
  9748  0BD0                     l7919:
  9749  0BD0  0867               	movf	___fladd@grs^(0+128),w
  9750  0BD1  00DC               	movwf	??___fladd^(0+128)
  9751  0BD2  085C               	movf	??___fladd^(0+128),w
  9752  0BD3  00D9               	movwf	(___fladd@a^(0+128)+1)
  9753  0BD4                     l7921:
  9754  0BD4  0856               	movf	(___fladd@b^(0+128)+2),w
  9755  0BD5  00DC               	movwf	??___fladd^(0+128)
  9756  0BD6  085C               	movf	??___fladd^(0+128),w
  9757  0BD7  00E7               	movwf	___fladd@grs^(0+128)
  9758  0BD8                     l7923:
  9759  0BD8  085A               	movf	(___fladd@a^(0+128)+2),w
  9760  0BD9  00DC               	movwf	??___fladd^(0+128)
  9761  0BDA  085C               	movf	??___fladd^(0+128),w
  9762  0BDB  00D6               	movwf	(___fladd@b^(0+128)+2)
  9763  0BDC                     l7925:
  9764  0BDC  0867               	movf	___fladd@grs^(0+128),w
  9765  0BDD  00DC               	movwf	??___fladd^(0+128)
  9766  0BDE  085C               	movf	??___fladd^(0+128),w
  9767  0BDF  00DA               	movwf	(___fladd@a^(0+128)+2)
  9768  0BE0                     l7927:
  9769  0BE0  0857               	movf	(___fladd@b^(0+128)+3),w
  9770  0BE1  00DC               	movwf	??___fladd^(0+128)
  9771  0BE2  085C               	movf	??___fladd^(0+128),w
  9772  0BE3  00E7               	movwf	___fladd@grs^(0+128)
  9773  0BE4                     l7929:
  9774  0BE4  085B               	movf	(___fladd@a^(0+128)+3),w
  9775  0BE5  00DC               	movwf	??___fladd^(0+128)
  9776  0BE6  085C               	movf	??___fladd^(0+128),w
  9777  0BE7  00D7               	movwf	(___fladd@b^(0+128)+3)
  9778  0BE8                     l7931:
  9779  0BE8  0867               	movf	___fladd@grs^(0+128),w
  9780  0BE9  00DC               	movwf	??___fladd^(0+128)
  9781  0BEA  085C               	movf	??___fladd^(0+128),w
  9782  0BEB  00DB               	movwf	(___fladd@a^(0+128)+3)
  9783  0BEC                     l7933:
  9784  0BEC  01E7               	clrf	___fladd@grs^(0+128)
  9785  0BED                     l7935:
  9786  0BED  0865               	movf	___fladd@aexp^(0+128),w
  9787  0BEE  00DC               	movwf	??___fladd^(0+128)
  9788  0BEF  01DD               	clrf	(??___fladd^(0+128)+1)
  9789  0BF0  085D               	movf	(??___fladd+1)^(0+128),w
  9790  0BF1  00DF               	movwf	((??___fladd+2)^(0+128)+1)
  9791  0BF2  0866               	movf	___fladd@bexp^(0+128),w
  9792  0BF3  025C               	subwf	??___fladd^(0+128),w
  9793  0BF4  00DE               	movwf	(??___fladd+2)^(0+128)
  9794  0BF5  1C03               	skipc
  9795  0BF6  03DF               	decf	((??___fladd+2)^(0+128)+1),f
  9796  0BF7  085F               	movf	(??___fladd+3)^(0+128),w
  9797  0BF8  3A80               	xorlw	128
  9798  0BF9  00E0               	movwf	(??___fladd+4)^(0+128)
  9799  0BFA  3080               	movlw	128
  9800  0BFB  0260               	subwf	(??___fladd+4)^(0+128),w
  9801  0BFC  1D03               	skipz
  9802  0BFD  2C00               	goto	u7265
  9803  0BFE  301A               	movlw	26
  9804  0BFF  025E               	subwf	(??___fladd+2)^(0+128),w
  9805  0C00                     u7265:
  9806  0C00  1C03               	skipc
  9807  0C01  2C03               	goto	u7261
  9808  0C02  2C04               	goto	u7260
  9809  0C03                     u7261:
  9810  0C03  2C3C               	goto	l7951
  9811  0C04                     u7260:
  9812  0C04                     l7937:
  9813  0C04  0021               	movlb	1	; select bank1
  9814  0C05  0857               	movf	(___fladd@b+3)^(0+128),w
  9815  0C06  0456               	iorwf	(___fladd@b+2)^(0+128),w
  9816  0C07  0455               	iorwf	(___fladd@b+1)^(0+128),w
  9817  0C08  0454               	iorwf	___fladd@b^(0+128),w
  9818  0C09  1D03               	skipz
  9819  0C0A  2C0C               	goto	u7271
  9820  0C0B  2C0E               	goto	u7270
  9821  0C0C                     u7271:
  9822  0C0C  3001               	movlw	1
  9823  0C0D  2C0F               	goto	u7280
  9824  0C0E                     u7270:
  9825  0C0E  3000               	movlw	0
  9826  0C0F                     u7280:
  9827  0C0F  00DC               	movwf	??___fladd^(0+128)
  9828  0C10  085C               	movf	??___fladd^(0+128),w
  9829  0C11  00E7               	movwf	___fladd@grs^(0+128)
  9830  0C12  3000               	movlw	0
  9831  0C13  00D7               	movwf	(___fladd@b+3)^(0+128)
  9832  0C14  3000               	movlw	0
  9833  0C15  00D6               	movwf	(___fladd@b+2)^(0+128)
  9834  0C16  3000               	movlw	0
  9835  0C17  00D5               	movwf	(___fladd@b+1)^(0+128)
  9836  0C18  3000               	movlw	0
  9837  0C19  00D4               	movwf	___fladd@b^(0+128)
  9838  0C1A  0865               	movf	___fladd@aexp^(0+128),w
  9839  0C1B  00DC               	movwf	??___fladd^(0+128)
  9840  0C1C  085C               	movf	??___fladd^(0+128),w
  9841  0C1D  00E6               	movwf	___fladd@bexp^(0+128)
  9842  0C1E  2C43               	goto	l2111
  9843  0C1F                     l2113:
  9844  0C1F  1C67               	btfss	___fladd@grs^(0+128),0
  9845  0C20  2C22               	goto	u7291
  9846  0C21  2C23               	goto	u7290
  9847  0C22                     u7291:
  9848  0C22  2C29               	goto	l7941
  9849  0C23                     u7290:
  9850  0C23                     l7939:
  9851  0C23  3667               	lsrf	___fladd@grs^(0+128),w
  9852  0C24  3801               	iorlw	1
  9853  0C25  00DC               	movwf	??___fladd^(0+128)
  9854  0C26  085C               	movf	??___fladd^(0+128),w
  9855  0C27  00E7               	movwf	___fladd@grs^(0+128)
  9856  0C28  2C2B               	goto	l7943
  9857  0C29                     l7941:
  9858  0C29  1003               	clrc
  9859  0C2A  0CE7               	rrf	___fladd@grs^(0+128),f
  9860  0C2B                     l7943:
  9861  0C2B  1C54               	btfss	___fladd@b^(0+128),0
  9862  0C2C  2C2E               	goto	u7301
  9863  0C2D  2C2F               	goto	u7300
  9864  0C2E                     u7301:
  9865  0C2E  2C30               	goto	l7947
  9866  0C2F                     u7300:
  9867  0C2F                     l7945:
  9868  0C2F  17E7               	bsf	___fladd@grs^(0+128),7
  9869  0C30                     l7947:
  9870  0C30  3001               	movlw	1
  9871  0C31  00DC               	movwf	??___fladd^(0+128)
  9872  0C32                     u7315:
  9873  0C32  37D7               	asrf	(___fladd@b+3)^(0+128),f
  9874  0C33  0CD6               	rrf	(___fladd@b+2)^(0+128),f
  9875  0C34  0CD5               	rrf	(___fladd@b+1)^(0+128),f
  9876  0C35  0CD4               	rrf	___fladd@b^(0+128),f
  9877  0C36  0BDC               	decfsz	(??___fladd^(0+128))& (0+127),f
  9878  0C37  2C32               	goto	u7315
  9879  0C38                     l7949:
  9880  0C38  3001               	movlw	1
  9881  0C39  00DC               	movwf	??___fladd^(0+128)
  9882  0C3A  085C               	movf	??___fladd^(0+128),w
  9883  0C3B  07E6               	addwf	___fladd@bexp^(0+128),f
  9884  0C3C                     l7951:
  9885  0C3C  0021               	movlb	1	; select bank1
  9886  0C3D  0865               	movf	___fladd@aexp^(0+128),w
  9887  0C3E  0266               	subwf	___fladd@bexp^(0+128),w
  9888  0C3F  1C03               	skipc
  9889  0C40  2C42               	goto	u7321
  9890  0C41  2C43               	goto	u7320
  9891  0C42                     u7321:
  9892  0C42  2C1F               	goto	l2113
  9893  0C43                     u7320:
  9894  0C43                     l2111:
  9895  0C43  1B64               	btfsc	___fladd@signs^(0+128),6
  9896  0C44  2C46               	goto	u7331
  9897  0C45  2C47               	goto	u7330
  9898  0C46                     u7331:
  9899  0C46  2C7F               	goto	l7977
  9900  0C47                     u7330:
  9901  0C47                     l7953:
  9902  0C47  0866               	movf	___fladd@bexp^(0+128),w
  9903  0C48  1D03               	btfss	3,2
  9904  0C49  2C4B               	goto	u7341
  9905  0C4A  2C4C               	goto	u7340
  9906  0C4B                     u7341:
  9907  0C4B  2C55               	goto	l7959
  9908  0C4C                     u7340:
  9909  0C4C                     l7955:
  9910  0C4C  3000               	movlw	0
  9911  0C4D  00D7               	movwf	(?___fladd+3)^(0+128)
  9912  0C4E  3000               	movlw	0
  9913  0C4F  00D6               	movwf	(?___fladd+2)^(0+128)
  9914  0C50  3000               	movlw	0
  9915  0C51  00D5               	movwf	(?___fladd+1)^(0+128)
  9916  0C52  3000               	movlw	0
  9917  0C53  00D4               	movwf	?___fladd^(0+128)
  9918  0C54  2D7B               	goto	l2120
  9919  0C55                     l7959:
  9920  0C55  0858               	movf	___fladd@a^(0+128),w
  9921  0C56  07D4               	addwf	___fladd@b^(0+128),f
  9922  0C57  0859               	movf	(___fladd@a+1)^(0+128),w
  9923  0C58  3DD5               	addwfc	(___fladd@b+1)^(0+128),f
  9924  0C59  085A               	movf	(___fladd@a+2)^(0+128),w
  9925  0C5A  3DD6               	addwfc	(___fladd@b+2)^(0+128),f
  9926  0C5B  085B               	movf	(___fladd@a+3)^(0+128),w
  9927  0C5C  3DD7               	addwfc	(___fladd@b+3)^(0+128),f
  9928  0C5D                     l7961:
  9929  0C5D  1C57               	btfss	(___fladd@b+3)^(0+128),0
  9930  0C5E  2C60               	goto	u7351
  9931  0C5F  2C61               	goto	u7350
  9932  0C60                     u7351:
  9933  0C60  2D0B               	goto	l8011
  9934  0C61                     u7350:
  9935  0C61                     l7963:
  9936  0C61  1C67               	btfss	___fladd@grs^(0+128),0
  9937  0C62  2C64               	goto	u7361
  9938  0C63  2C65               	goto	u7360
  9939  0C64                     u7361:
  9940  0C64  2C6B               	goto	l7967
  9941  0C65                     u7360:
  9942  0C65                     l7965:
  9943  0C65  3667               	lsrf	___fladd@grs^(0+128),w
  9944  0C66  3801               	iorlw	1
  9945  0C67  00DC               	movwf	??___fladd^(0+128)
  9946  0C68  085C               	movf	??___fladd^(0+128),w
  9947  0C69  00E7               	movwf	___fladd@grs^(0+128)
  9948  0C6A  2C6D               	goto	l7969
  9949  0C6B                     l7967:
  9950  0C6B  1003               	clrc
  9951  0C6C  0CE7               	rrf	___fladd@grs^(0+128),f
  9952  0C6D                     l7969:
  9953  0C6D  1C54               	btfss	___fladd@b^(0+128),0
  9954  0C6E  2C70               	goto	u7371
  9955  0C6F  2C71               	goto	u7370
  9956  0C70                     u7371:
  9957  0C70  2C72               	goto	l7973
  9958  0C71                     u7370:
  9959  0C71                     l7971:
  9960  0C71  17E7               	bsf	___fladd@grs^(0+128),7
  9961  0C72                     l7973:
  9962  0C72  3001               	movlw	1
  9963  0C73  00DC               	movwf	??___fladd^(0+128)
  9964  0C74                     u7385:
  9965  0C74  37D7               	asrf	(___fladd@b+3)^(0+128),f
  9966  0C75  0CD6               	rrf	(___fladd@b+2)^(0+128),f
  9967  0C76  0CD5               	rrf	(___fladd@b+1)^(0+128),f
  9968  0C77  0CD4               	rrf	___fladd@b^(0+128),f
  9969  0C78  0BDC               	decfsz	(??___fladd^(0+128))& (0+127),f
  9970  0C79  2C74               	goto	u7385
  9971  0C7A                     l7975:
  9972  0C7A  3001               	movlw	1
  9973  0C7B  00DC               	movwf	??___fladd^(0+128)
  9974  0C7C  085C               	movf	??___fladd^(0+128),w
  9975  0C7D  07E6               	addwf	___fladd@bexp^(0+128),f
  9976  0C7E  2D0B               	goto	l8011
  9977  0C7F                     l7977:
  9978  0C7F  0857               	movf	(___fladd@b+3)^(0+128),w
  9979  0C80  3A80               	xorlw	128
  9980  0C81  00DC               	movwf	??___fladd^(0+128)
  9981  0C82  085B               	movf	(___fladd@a+3)^(0+128),w
  9982  0C83  3A80               	xorlw	128
  9983  0C84  025C               	subwf	??___fladd^(0+128),w
  9984  0C85  1D03               	skipz
  9985  0C86  2C91               	goto	u7393
  9986  0C87  085A               	movf	(___fladd@a+2)^(0+128),w
  9987  0C88  0256               	subwf	(___fladd@b+2)^(0+128),w
  9988  0C89  1D03               	skipz
  9989  0C8A  2C91               	goto	u7393
  9990  0C8B  0859               	movf	(___fladd@a+1)^(0+128),w
  9991  0C8C  0255               	subwf	(___fladd@b+1)^(0+128),w
  9992  0C8D  1D03               	skipz
  9993  0C8E  2C91               	goto	u7393
  9994  0C8F  0858               	movf	___fladd@a^(0+128),w
  9995  0C90  0254               	subwf	___fladd@b^(0+128),w
  9996  0C91                     u7393:
  9997  0C91  1803               	skipnc
  9998  0C92  2C94               	goto	u7391
  9999  0C93  2C95               	goto	u7390
 10000  0C94                     u7391:
 10001  0C94  2CCD               	goto	l7987
 10002  0C95                     u7390:
 10003  0C95                     l7979:
 10004  0C95  30FF               	movlw	255
 10005  0C96  00DC               	movwf	??___fladd^(0+128)
 10006  0C97  30FF               	movlw	255
 10007  0C98  00DD               	movwf	(??___fladd^(0+128)+1)
 10008  0C99  30FF               	movlw	255
 10009  0C9A  00DE               	movwf	(??___fladd^(0+128)+2)
 10010  0C9B  30FF               	movlw	255
 10011  0C9C  00DF               	movwf	(??___fladd^(0+128)+3)
 10012  0C9D  0854               	movf	___fladd@b^(0+128),w
 10013  0C9E  0258               	subwf	___fladd@a^(0+128),w
 10014  0C9F  00E0               	movwf	(??___fladd+4)^(0+128)
 10015  0CA0  0855               	movf	(___fladd@b+1)^(0+128),w
 10016  0CA1  3B59               	subwfb	(___fladd@a+1)^(0+128),w
 10017  0CA2  00E1               	movwf	((??___fladd+4)^(0+128)+1)
 10018  0CA3  0856               	movf	(___fladd@b+2)^(0+128),w
 10019  0CA4  3B5A               	subwfb	(___fladd@a+2)^(0+128),w
 10020  0CA5  00E2               	movwf	((??___fladd+4)^(0+128)+2)
 10021  0CA6  0857               	movf	(___fladd@b+3)^(0+128),w
 10022  0CA7  3B5B               	subwfb	(___fladd@a+3)^(0+128),w
 10023  0CA8  00E3               	movwf	((??___fladd+4)^(0+128)+3)
 10024  0CA9  0860               	movf	(??___fladd+4)^(0+128),w
 10025  0CAA  07DC               	addwf	??___fladd^(0+128),f
 10026  0CAB  0861               	movf	(??___fladd+5)^(0+128),w
 10027  0CAC  3DDD               	addwfc	(??___fladd^(0+128)+1),f
 10028  0CAD  0862               	movf	(??___fladd+6)^(0+128),w
 10029  0CAE  3DDE               	addwfc	(??___fladd^(0+128)+2),f
 10030  0CAF  0863               	movf	(??___fladd+7)^(0+128),w
 10031  0CB0  3DDF               	addwfc	(??___fladd^(0+128)+3),f
 10032  0CB1  085F               	movf	(??___fladd+3)^(0+128),w
 10033  0CB2  00D7               	movwf	(___fladd@b+3)^(0+128)
 10034  0CB3  085E               	movf	(??___fladd+2)^(0+128),w
 10035  0CB4  00D6               	movwf	(___fladd@b+2)^(0+128)
 10036  0CB5  085D               	movf	(??___fladd+1)^(0+128),w
 10037  0CB6  00D5               	movwf	(___fladd@b+1)^(0+128)
 10038  0CB7  085C               	movf	??___fladd^(0+128),w
 10039  0CB8  00D4               	movwf	___fladd@b^(0+128)
 10040  0CB9                     l7981:
 10041  0CB9  3080               	movlw	128
 10042  0CBA  00DC               	movwf	??___fladd^(0+128)
 10043  0CBB  085C               	movf	??___fladd^(0+128),w
 10044  0CBC  06E4               	xorwf	___fladd@signs^(0+128),f
 10045  0CBD  09E7               	comf	___fladd@grs^(0+128),f
 10046  0CBE  0AE7               	incf	___fladd@grs^(0+128),f
 10047  0CBF                     l7983:
 10048  0CBF  0867               	movf	___fladd@grs^(0+128),w
 10049  0CC0  1D03               	btfss	3,2
 10050  0CC1  2CC3               	goto	u7401
 10051  0CC2  2CC4               	goto	u7400
 10052  0CC3                     u7401:
 10053  0CC3  2CD5               	goto	l2128
 10054  0CC4                     u7400:
 10055  0CC4                     l7985:
 10056  0CC4  3001               	movlw	1
 10057  0CC5  07D4               	addwf	___fladd@b^(0+128),f
 10058  0CC6  3000               	movlw	0
 10059  0CC7  3DD5               	addwfc	(___fladd@b+1)^(0+128),f
 10060  0CC8  3000               	movlw	0
 10061  0CC9  3DD6               	addwfc	(___fladd@b+2)^(0+128),f
 10062  0CCA  3000               	movlw	0
 10063  0CCB  3DD7               	addwfc	(___fladd@b+3)^(0+128),f
 10064  0CCC  2CD5               	goto	l2128
 10065  0CCD                     l7987:
 10066  0CCD  0858               	movf	___fladd@a^(0+128),w
 10067  0CCE  02D4               	subwf	___fladd@b^(0+128),f
 10068  0CCF  0859               	movf	(___fladd@a+1)^(0+128),w
 10069  0CD0  3BD5               	subwfb	(___fladd@b+1)^(0+128),f
 10070  0CD1  085A               	movf	(___fladd@a+2)^(0+128),w
 10071  0CD2  3BD6               	subwfb	(___fladd@b+2)^(0+128),f
 10072  0CD3  085B               	movf	(___fladd@a+3)^(0+128),w
 10073  0CD4  3BD7               	subwfb	(___fladd@b+3)^(0+128),f
 10074  0CD5                     l2128:
 10075  0CD5  0857               	movf	(___fladd@b+3)^(0+128),w
 10076  0CD6  0456               	iorwf	(___fladd@b+2)^(0+128),w
 10077  0CD7  0455               	iorwf	(___fladd@b+1)^(0+128),w
 10078  0CD8  0454               	iorwf	___fladd@b^(0+128),w
 10079  0CD9  1D03               	skipz
 10080  0CDA  2CDC               	goto	u7411
 10081  0CDB  2CDD               	goto	u7410
 10082  0CDC                     u7411:
 10083  0CDC  2D07               	goto	l8009
 10084  0CDD                     u7410:
 10085  0CDD                     l7989:
 10086  0CDD  0867               	movf	___fladd@grs^(0+128),w
 10087  0CDE  1D03               	btfss	3,2
 10088  0CDF  2CE1               	goto	u7421
 10089  0CE0  2CE2               	goto	u7420
 10090  0CE1                     u7421:
 10091  0CE1  2D07               	goto	l8009
 10092  0CE2                     u7420:
 10093  0CE2                     l7991:
 10094  0CE2  3000               	movlw	0
 10095  0CE3  00D7               	movwf	(?___fladd+3)^(0+128)
 10096  0CE4  3000               	movlw	0
 10097  0CE5  00D6               	movwf	(?___fladd+2)^(0+128)
 10098  0CE6  3000               	movlw	0
 10099  0CE7  00D5               	movwf	(?___fladd+1)^(0+128)
 10100  0CE8  3000               	movlw	0
 10101  0CE9  00D4               	movwf	?___fladd^(0+128)
 10102  0CEA  2D7B               	goto	l2120
 10103  0CEB                     l7995:
 10104  0CEB  3001               	movlw	1
 10105  0CEC                     u7435:
 10106  0CEC  35D4               	lslf	___fladd@b^(0+128),f
 10107  0CED  0DD5               	rlf	(___fladd@b+1)^(0+128),f
 10108  0CEE  0DD6               	rlf	(___fladd@b+2)^(0+128),f
 10109  0CEF  0DD7               	rlf	(___fladd@b+3)^(0+128),f
 10110  0CF0  0B89               	decfsz	9,f
 10111  0CF1  2CEC               	goto	u7435
 10112  0CF2                     l7997:
 10113  0CF2  1FE7               	btfss	___fladd@grs^(0+128),7
 10114  0CF3  2CF5               	goto	u7441
 10115  0CF4  2CF6               	goto	u7440
 10116  0CF5                     u7441:
 10117  0CF5  2CF7               	goto	l2132
 10118  0CF6                     u7440:
 10119  0CF6                     l7999:
 10120  0CF6  1454               	bsf	___fladd@b^(0+128),0
 10121  0CF7                     l2132:
 10122  0CF7  1C67               	btfss	___fladd@grs^(0+128),0
 10123  0CF8  2CFA               	goto	u7451
 10124  0CF9  2CFB               	goto	u7450
 10125  0CFA                     u7451:
 10126  0CFA  2CFE               	goto	l8003
 10127  0CFB                     u7450:
 10128  0CFB                     l8001:
 10129  0CFB  1403               	setc
 10130  0CFC  0DE7               	rlf	___fladd@grs^(0+128),f
 10131  0CFD  2D00               	goto	l8005
 10132  0CFE                     l8003:
 10133  0CFE  1003               	clrc
 10134  0CFF  0DE7               	rlf	___fladd@grs^(0+128),f
 10135  0D00                     l8005:
 10136  0D00  0866               	movf	___fladd@bexp^(0+128),w
 10137  0D01  1903               	btfsc	3,2
 10138  0D02  2D04               	goto	u7461
 10139  0D03  2D05               	goto	u7460
 10140  0D04                     u7461:
 10141  0D04  2D07               	goto	l8009
 10142  0D05                     u7460:
 10143  0D05                     l8007:
 10144  0D05  3001               	movlw	1
 10145  0D06  02E6               	subwf	___fladd@bexp^(0+128),f
 10146  0D07                     l8009:
 10147  0D07  1FD6               	btfss	(___fladd@b+2)^(0+128),7
 10148  0D08  2D0A               	goto	u7471
 10149  0D09  2D0B               	goto	u7470
 10150  0D0A                     u7471:
 10151  0D0A  2CEB               	goto	l7995
 10152  0D0B                     u7470:
 10153  0D0B                     l8011:
 10154  0D0B  01E5               	clrf	___fladd@aexp^(0+128)
 10155  0D0C                     l8013:
 10156  0D0C  1FE7               	btfss	___fladd@grs^(0+128),7
 10157  0D0D  2D0F               	goto	u7481
 10158  0D0E  2D10               	goto	u7480
 10159  0D0F                     u7481:
 10160  0D0F  2D1E               	goto	l8021
 10161  0D10                     u7480:
 10162  0D10                     l8015:
 10163  0D10  0867               	movf	___fladd@grs^(0+128),w
 10164  0D11  397F               	andlw	127
 10165  0D12  1903               	btfsc	3,2
 10166  0D13  2D15               	goto	u7491
 10167  0D14  2D16               	goto	u7490
 10168  0D15                     u7491:
 10169  0D15  2D19               	goto	l2138
 10170  0D16                     u7490:
 10171  0D16                     l8017:
 10172  0D16  01E5               	clrf	___fladd@aexp^(0+128)
 10173  0D17  0AE5               	incf	___fladd@aexp^(0+128),f
 10174  0D18  2D1E               	goto	l8021
 10175  0D19                     l2138:
 10176  0D19  1C54               	btfss	___fladd@b^(0+128),0
 10177  0D1A  2D1C               	goto	u7501
 10178  0D1B  2D1D               	goto	u7500
 10179  0D1C                     u7501:
 10180  0D1C  2D1E               	goto	l8021
 10181  0D1D                     u7500:
 10182  0D1D  2D16               	goto	l8017
 10183  0D1E                     l8021:
 10184  0D1E  0865               	movf	___fladd@aexp^(0+128),w
 10185  0D1F  1903               	btfsc	3,2
 10186  0D20  2D22               	goto	u7511
 10187  0D21  2D23               	goto	u7510
 10188  0D22                     u7511:
 10189  0D22  2D50               	goto	l2141
 10190  0D23                     u7510:
 10191  0D23                     l8023:
 10192  0D23  3001               	movlw	1
 10193  0D24  07D4               	addwf	___fladd@b^(0+128),f
 10194  0D25  3000               	movlw	0
 10195  0D26  3DD5               	addwfc	(___fladd@b+1)^(0+128),f
 10196  0D27  3000               	movlw	0
 10197  0D28  3DD6               	addwfc	(___fladd@b+2)^(0+128),f
 10198  0D29  3000               	movlw	0
 10199  0D2A  3DD7               	addwfc	(___fladd@b+3)^(0+128),f
 10200  0D2B                     l8025:
 10201  0D2B  1C57               	btfss	(___fladd@b+3)^(0+128),0
 10202  0D2C  2D2E               	goto	u7521
 10203  0D2D  2D2F               	goto	u7520
 10204  0D2E                     u7521:
 10205  0D2E  2D50               	goto	l2141
 10206  0D2F                     u7520:
 10207  0D2F                     l8027:
 10208  0D2F  0854               	movf	___fladd@b^(0+128),w
 10209  0D30  00DC               	movwf	??___fladd^(0+128)
 10210  0D31  0855               	movf	(___fladd@b+1)^(0+128),w
 10211  0D32  00DD               	movwf	(??___fladd^(0+128)+1)
 10212  0D33  0856               	movf	(___fladd@b+2)^(0+128),w
 10213  0D34  00DE               	movwf	(??___fladd^(0+128)+2)
 10214  0D35  0857               	movf	(___fladd@b+3)^(0+128),w
 10215  0D36  00DF               	movwf	(??___fladd^(0+128)+3)
 10216  0D37  3001               	movlw	1
 10217  0D38  00E0               	movwf	(??___fladd+4)^(0+128)
 10218  0D39                     u7535:
 10219  0D39  37DF               	asrf	(??___fladd^(0+128)+3),f
 10220  0D3A  0CDE               	rrf	(??___fladd^(0+128)+2),f
 10221  0D3B  0CDD               	rrf	(??___fladd^(0+128)+1),f
 10222  0D3C  0CDC               	rrf	??___fladd^(0+128),f
 10223  0D3D                     u7530:
 10224  0D3D  0BE0               	decfsz	(??___fladd+4)^(0+128),f
 10225  0D3E  2D39               	goto	u7535
 10226  0D3F  085F               	movf	(??___fladd+3)^(0+128),w
 10227  0D40  00D7               	movwf	(___fladd@b+3)^(0+128)
 10228  0D41  085E               	movf	(??___fladd+2)^(0+128),w
 10229  0D42  00D6               	movwf	(___fladd@b+2)^(0+128)
 10230  0D43  085D               	movf	(??___fladd+1)^(0+128),w
 10231  0D44  00D5               	movwf	(___fladd@b+1)^(0+128)
 10232  0D45  085C               	movf	??___fladd^(0+128),w
 10233  0D46  00D4               	movwf	___fladd@b^(0+128)
 10234  0D47  0A66               	incf	___fladd@bexp^(0+128),w
 10235  0D48  1903               	btfsc	3,2
 10236  0D49  2D4B               	goto	u7541
 10237  0D4A  2D4C               	goto	u7540
 10238  0D4B                     u7541:
 10239  0D4B  2D50               	goto	l2141
 10240  0D4C                     u7540:
 10241  0D4C                     l8029:
 10242  0D4C  3001               	movlw	1
 10243  0D4D  00DC               	movwf	??___fladd^(0+128)
 10244  0D4E  085C               	movf	??___fladd^(0+128),w
 10245  0D4F  07E6               	addwf	___fladd@bexp^(0+128),f
 10246  0D50                     l2141:
 10247  0D50  0A66               	incf	___fladd@bexp^(0+128),w
 10248  0D51  1903               	btfsc	3,2
 10249  0D52  2D54               	goto	u7551
 10250  0D53  2D55               	goto	u7550
 10251  0D54                     u7551:
 10252  0D54  2D5A               	goto	l8033
 10253  0D55                     u7550:
 10254  0D55                     l8031:
 10255  0D55  0866               	movf	___fladd@bexp^(0+128),w
 10256  0D56  1D03               	btfss	3,2
 10257  0D57  2D59               	goto	u7561
 10258  0D58  2D5A               	goto	u7560
 10259  0D59                     u7561:
 10260  0D59  2D68               	goto	l8039
 10261  0D5A                     u7560:
 10262  0D5A                     l8033:
 10263  0D5A  3000               	movlw	0
 10264  0D5B  00D7               	movwf	(___fladd@b+3)^(0+128)
 10265  0D5C  3000               	movlw	0
 10266  0D5D  00D6               	movwf	(___fladd@b+2)^(0+128)
 10267  0D5E  3000               	movlw	0
 10268  0D5F  00D5               	movwf	(___fladd@b+1)^(0+128)
 10269  0D60  3000               	movlw	0
 10270  0D61  00D4               	movwf	___fladd@b^(0+128)
 10271  0D62                     l8035:
 10272  0D62  0866               	movf	___fladd@bexp^(0+128),w
 10273  0D63  1D03               	btfss	3,2
 10274  0D64  2D66               	goto	u7571
 10275  0D65  2D67               	goto	u7570
 10276  0D66                     u7571:
 10277  0D66  2D68               	goto	l8039
 10278  0D67                     u7570:
 10279  0D67                     l8037:
 10280  0D67  01E4               	clrf	___fladd@signs^(0+128)
 10281  0D68                     l8039:
 10282  0D68  1C66               	btfss	___fladd@bexp^(0+128),0
 10283  0D69  2D6B               	goto	u7581
 10284  0D6A  2D6C               	goto	u7580
 10285  0D6B                     u7581:
 10286  0D6B  2D6E               	goto	l8043
 10287  0D6C                     u7580:
 10288  0D6C                     l8041:
 10289  0D6C  17D6               	bsf	(___fladd@b^(0+128)+2),7
 10290  0D6D  2D72               	goto	l2149
 10291  0D6E                     l8043:
 10292  0D6E  307F               	movlw	127
 10293  0D6F  00DC               	movwf	??___fladd^(0+128)
 10294  0D70  085C               	movf	??___fladd^(0+128),w
 10295  0D71  05D6               	andwf	(___fladd@b^(0+128)+2),f
 10296  0D72                     l2149:
 10297  0D72  3666               	lsrf	___fladd@bexp^(0+128),w
 10298  0D73  00DC               	movwf	??___fladd^(0+128)
 10299  0D74  085C               	movf	??___fladd^(0+128),w
 10300  0D75  00D7               	movwf	(___fladd@b^(0+128)+3)
 10301  0D76                     l8045:
 10302  0D76  1FE4               	btfss	___fladd@signs^(0+128),7
 10303  0D77  2D79               	goto	u7591
 10304  0D78  2D7A               	goto	u7590
 10305  0D79                     u7591:
 10306  0D79  2D7B               	goto	l2150
 10307  0D7A                     u7590:
 10308  0D7A                     l8047:
 10309  0D7A  17D7               	bsf	(___fladd@b^(0+128)+3),7
 10310  0D7B                     l2150:
 10311  0D7B                     l2120:
 10312  0D7B  0008               	return
 10313  0D7C                     __end_of___fladd:
 10314                           
 10315                           	psect	text31
 10316  1A15                     __ptext31:	
 10317 ;; *************** function ___flneg *****************
 10318 ;; Defined at:
 10319 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
 10320 ;; Parameters:    Size  Location     Type
 10321 ;;  f1              4   14[BANK0 ] unsigned char 
 10322 ;; Auto vars:     Size  Location     Type
 10323 ;;		None
 10324 ;; Return value:  Size  Location     Type
 10325 ;;                  4   14[BANK0 ] unsigned char 
 10326 ;; Registers used:
 10327 ;;		wreg
 10328 ;; Tracked objects:
 10329 ;;		On entry : 0/0
 10330 ;;		On exit  : 0/0
 10331 ;;		Unchanged: 0/0
 10332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10333 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10336 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10337 ;;Total ram usage:        4 bytes
 10338 ;; Hardware stack levels used: 1
 10339 ;; Hardware stack levels required when called: 5
 10340 ;; This function calls:
 10341 ;;		Nothing
 10342 ;; This function is called by:
 10343 ;;		_KE
 10344 ;;		_ManualControl
 10345 ;; This function uses a non-reentrant model
 10346 ;;
 10347                           
 10348                           
 10349                           ;psect for function ___flneg
 10350  1A15                     ___flneg:
 10351  1A15                     l8109:	
 10352                           ;incstack = 0
 10353                           ; Regs used in ___flneg: [wreg]
 10354                           
 10355  1A15  0020               	movlb	0	; select bank0
 10356  1A16  0831               	movf	___flneg@f1+3,w
 10357  1A17  0430               	iorwf	___flneg@f1+2,w
 10358  1A18  042F               	iorwf	___flneg@f1+1,w
 10359  1A19  042E               	iorwf	___flneg@f1,w
 10360  1A1A  1903               	skipnz
 10361  1A1B  2A1D               	goto	u7751
 10362  1A1C  2A1E               	goto	u7750
 10363  1A1D                     u7751:
 10364  1A1D  2A20               	goto	l8113
 10365  1A1E                     u7750:
 10366  1A1E                     l8111:
 10367  1A1E  3080               	movlw	128
 10368  1A1F  06B1               	xorwf	___flneg@f1+3,f
 10369  1A20                     l8113:
 10370  1A20                     l1996:
 10371  1A20  0008               	return
 10372  1A21                     __end_of___flneg:
 10373                           
 10374                           	psect	text32
 10375  1CAD                     __ptext32:	
 10376 ;; *************** function ___flge *****************
 10377 ;; Defined at:
 10378 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 10379 ;; Parameters:    Size  Location     Type
 10380 ;;  ff1             4   14[BANK0 ] unsigned char 
 10381 ;;  ff2             4   18[BANK0 ] unsigned char 
 10382 ;; Auto vars:     Size  Location     Type
 10383 ;;		None
 10384 ;; Return value:  Size  Location     Type
 10385 ;;		None               void
 10386 ;; Registers used:
 10387 ;;		wreg, status,2, status,0
 10388 ;; Tracked objects:
 10389 ;;		On entry : 0/0
 10390 ;;		On exit  : 0/0
 10391 ;;		Unchanged: 0/0
 10392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10393 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10395 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10396 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10397 ;;Total ram usage:       12 bytes
 10398 ;; Hardware stack levels used: 1
 10399 ;; Hardware stack levels required when called: 5
 10400 ;; This function calls:
 10401 ;;		Nothing
 10402 ;; This function is called by:
 10403 ;;		_KE
 10404 ;;		_ManualControl
 10405 ;;		_PID
 10406 ;; This function uses a non-reentrant model
 10407 ;;
 10408                           
 10409                           
 10410                           ;psect for function ___flge
 10411  1CAD                     ___flge:
 10412  1CAD                     l8089:	
 10413                           ;incstack = 0
 10414                           ; Regs used in ___flge: [wreg+status,2+status,0]
 10415                           
 10416  1CAD  3000               	movlw	0
 10417  1CAE  0020               	movlb	0	; select bank0
 10418  1CAF  052E               	andwf	___flge@ff1,w
 10419  1CB0  00B6               	movwf	??___flge
 10420  1CB1  3000               	movlw	0
 10421  1CB2  052F               	andwf	___flge@ff1+1,w
 10422  1CB3  00B7               	movwf	??___flge+1
 10423  1CB4  3080               	movlw	128
 10424  1CB5  0530               	andwf	___flge@ff1+2,w
 10425  1CB6  00B8               	movwf	??___flge+2
 10426  1CB7  307F               	movlw	127
 10427  1CB8  0531               	andwf	___flge@ff1+3,w
 10428  1CB9  00B9               	movwf	??___flge+3
 10429  1CBA  0839               	movf	??___flge+3,w
 10430  1CBB  0438               	iorwf	??___flge+2,w
 10431  1CBC  0437               	iorwf	??___flge+1,w
 10432  1CBD  0436               	iorwf	??___flge,w
 10433  1CBE  1D03               	skipz
 10434  1CBF  2CC1               	goto	u7701
 10435  1CC0  2CC2               	goto	u7700
 10436  1CC1                     u7701:
 10437  1CC1  2CCA               	goto	l1984
 10438  1CC2                     u7700:
 10439  1CC2                     l8091:
 10440  1CC2  3000               	movlw	0
 10441  1CC3  00B1               	movwf	___flge@ff1+3
 10442  1CC4  3000               	movlw	0
 10443  1CC5  00B0               	movwf	___flge@ff1+2
 10444  1CC6  3000               	movlw	0
 10445  1CC7  00AF               	movwf	___flge@ff1+1
 10446  1CC8  3000               	movlw	0
 10447  1CC9  00AE               	movwf	___flge@ff1
 10448  1CCA                     l1984:
 10449  1CCA  3000               	movlw	0
 10450  1CCB  0532               	andwf	___flge@ff2,w
 10451  1CCC  00B6               	movwf	??___flge
 10452  1CCD  3000               	movlw	0
 10453  1CCE  0533               	andwf	___flge@ff2+1,w
 10454  1CCF  00B7               	movwf	??___flge+1
 10455  1CD0  3080               	movlw	128
 10456  1CD1  0534               	andwf	___flge@ff2+2,w
 10457  1CD2  00B8               	movwf	??___flge+2
 10458  1CD3  307F               	movlw	127
 10459  1CD4  0535               	andwf	___flge@ff2+3,w
 10460  1CD5  00B9               	movwf	??___flge+3
 10461  1CD6  0839               	movf	??___flge+3,w
 10462  1CD7  0438               	iorwf	??___flge+2,w
 10463  1CD8  0437               	iorwf	??___flge+1,w
 10464  1CD9  0436               	iorwf	??___flge,w
 10465  1CDA  1D03               	skipz
 10466  1CDB  2CDD               	goto	u7711
 10467  1CDC  2CDE               	goto	u7710
 10468  1CDD                     u7711:
 10469  1CDD  2CE6               	goto	l8095
 10470  1CDE                     u7710:
 10471  1CDE                     l8093:
 10472  1CDE  3000               	movlw	0
 10473  1CDF  00B5               	movwf	___flge@ff2+3
 10474  1CE0  3000               	movlw	0
 10475  1CE1  00B4               	movwf	___flge@ff2+2
 10476  1CE2  3000               	movlw	0
 10477  1CE3  00B3               	movwf	___flge@ff2+1
 10478  1CE4  3000               	movlw	0
 10479  1CE5  00B2               	movwf	___flge@ff2
 10480  1CE6                     l8095:
 10481  1CE6  1FB1               	btfss	___flge@ff1+3,7
 10482  1CE7  2CE9               	goto	u7721
 10483  1CE8  2CEA               	goto	u7720
 10484  1CE9                     u7721:
 10485  1CE9  2D02               	goto	l8099
 10486  1CEA                     u7720:
 10487  1CEA                     l8097:
 10488  1CEA  3000               	movlw	0
 10489  1CEB  00B6               	movwf	??___flge
 10490  1CEC  3000               	movlw	0
 10491  1CED  00B7               	movwf	??___flge+1
 10492  1CEE  3000               	movlw	0
 10493  1CEF  00B8               	movwf	??___flge+2
 10494  1CF0  3080               	movlw	128
 10495  1CF1  00B9               	movwf	??___flge+3
 10496  1CF2  082E               	movf	___flge@ff1,w
 10497  1CF3  02B6               	subwf	??___flge,f
 10498  1CF4  082F               	movf	___flge@ff1+1,w
 10499  1CF5  3BB7               	subwfb	??___flge+1,f
 10500  1CF6  0830               	movf	___flge@ff1+2,w
 10501  1CF7  3BB8               	subwfb	??___flge+2,f
 10502  1CF8  0831               	movf	___flge@ff1+3,w
 10503  1CF9  3BB9               	subwfb	??___flge+3,f
 10504  1CFA  0839               	movf	??___flge+3,w
 10505  1CFB  00B1               	movwf	___flge@ff1+3
 10506  1CFC  0838               	movf	??___flge+2,w
 10507  1CFD  00B0               	movwf	___flge@ff1+2
 10508  1CFE  0837               	movf	??___flge+1,w
 10509  1CFF  00AF               	movwf	___flge@ff1+1
 10510  1D00  0836               	movf	??___flge,w
 10511  1D01  00AE               	movwf	___flge@ff1
 10512  1D02                     l8099:
 10513  1D02  1FB5               	btfss	___flge@ff2+3,7
 10514  1D03  2D05               	goto	u7731
 10515  1D04  2D06               	goto	u7730
 10516  1D05                     u7731:
 10517  1D05  2D1E               	goto	l1987
 10518  1D06                     u7730:
 10519  1D06                     l8101:
 10520  1D06  3000               	movlw	0
 10521  1D07  00B6               	movwf	??___flge
 10522  1D08  3000               	movlw	0
 10523  1D09  00B7               	movwf	??___flge+1
 10524  1D0A  3000               	movlw	0
 10525  1D0B  00B8               	movwf	??___flge+2
 10526  1D0C  3080               	movlw	128
 10527  1D0D  00B9               	movwf	??___flge+3
 10528  1D0E  0832               	movf	___flge@ff2,w
 10529  1D0F  02B6               	subwf	??___flge,f
 10530  1D10  0833               	movf	___flge@ff2+1,w
 10531  1D11  3BB7               	subwfb	??___flge+1,f
 10532  1D12  0834               	movf	___flge@ff2+2,w
 10533  1D13  3BB8               	subwfb	??___flge+2,f
 10534  1D14  0835               	movf	___flge@ff2+3,w
 10535  1D15  3BB9               	subwfb	??___flge+3,f
 10536  1D16  0839               	movf	??___flge+3,w
 10537  1D17  00B5               	movwf	___flge@ff2+3
 10538  1D18  0838               	movf	??___flge+2,w
 10539  1D19  00B4               	movwf	___flge@ff2+2
 10540  1D1A  0837               	movf	??___flge+1,w
 10541  1D1B  00B3               	movwf	___flge@ff2+1
 10542  1D1C  0836               	movf	??___flge,w
 10543  1D1D  00B2               	movwf	___flge@ff2
 10544  1D1E                     l1987:
 10545  1D1E  3080               	movlw	128
 10546  1D1F  06B1               	xorwf	___flge@ff1+3,f
 10547  1D20  3080               	movlw	128
 10548  1D21  06B5               	xorwf	___flge@ff2+3,f
 10549  1D22  0835               	movf	___flge@ff2+3,w
 10550  1D23  0231               	subwf	___flge@ff1+3,w
 10551  1D24  1D03               	skipz
 10552  1D25  2D30               	goto	u7745
 10553  1D26  0834               	movf	___flge@ff2+2,w
 10554  1D27  0230               	subwf	___flge@ff1+2,w
 10555  1D28  1D03               	skipz
 10556  1D29  2D30               	goto	u7745
 10557  1D2A  0833               	movf	___flge@ff2+1,w
 10558  1D2B  022F               	subwf	___flge@ff1+1,w
 10559  1D2C  1D03               	skipz
 10560  1D2D  2D30               	goto	u7745
 10561  1D2E  0832               	movf	___flge@ff2,w
 10562  1D2F  022E               	subwf	___flge@ff1,w
 10563  1D30                     u7745:
 10564  1D30  1803               	skipnc
 10565  1D31  2D33               	goto	u7741
 10566  1D32  2D34               	goto	u7740
 10567  1D33                     u7741:
 10568  1D33  2D36               	goto	l8105
 10569  1D34                     u7740:
 10570  1D34                     l8103:
 10571  1D34  1003               	clrc
 10572  1D35  2D37               	goto	l1992
 10573  1D36                     l8105:
 10574  1D36  1403               	setc
 10575  1D37                     l1992:
 10576  1D37  0008               	return
 10577  1D38                     __end_of___flge:
 10578                           
 10579                           	psect	text33
 10580  03ED                     __ptext33:	
 10581 ;; *************** function _AutoCircleHandle *****************
 10582 ;; Defined at:
 10583 ;;		line 280 in file "main.c"
 10584 ;; Parameters:    Size  Location     Type
 10585 ;;		None
 10586 ;; Auto vars:     Size  Location     Type
 10587 ;;  j               2   34[BANK6 ] int 
 10588 ;;  j               2   32[BANK6 ] int 
 10589 ;;  j               2   30[BANK6 ] int 
 10590 ;;  j               2   28[BANK6 ] int 
 10591 ;;  i               2   36[BANK6 ] int 
 10592 ;;  bufferACircl   20    0[BANK6 ] unsigned char [20]
 10593 ;; Return value:  Size  Location     Type
 10594 ;;                  1    wreg      void 
 10595 ;; Registers used:
 10596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10597 ;; Tracked objects:
 10598 ;;		On entry : 0/0
 10599 ;;		On exit  : 0/0
 10600 ;;		Unchanged: 0/0
 10601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10603 ;;      Locals:         0       0       0       0       0       0       0      38       0       0       0       0       
      +0       0
 10604 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10605 ;;      Totals:         0       1       0       0       0       0       0      38       0       0       0       0       
      +0       0
 10606 ;;Total ram usage:       39 bytes
 10607 ;; Hardware stack levels used: 1
 10608 ;; Hardware stack levels required when called: 7
 10609 ;; This function calls:
 10610 ;;		___fldiv
 10611 ;;		___fleq
 10612 ;;		___flmul
 10613 ;;		___fltol
 10614 ;;		___xxtofl
 10615 ;;		_atoi
 10616 ;;		_strlen
 10617 ;; This function is called by:
 10618 ;;		_main
 10619 ;; This function uses a non-reentrant model
 10620 ;;
 10621                           
 10622                           
 10623                           ;psect for function _AutoCircleHandle
 10624  03ED                     _AutoCircleHandle:
 10625  03ED                     l8705:	
 10626                           ;incstack = 0
 10627                           ; Regs used in _AutoCircleHandle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10628                           
 10629                           
 10630                           ;main.c: 282:     char bufferACircle_t[20];;main.c: 283:     if((buffer_sys[0] == 'A') |
      +                          | (flagACircle == 1)){
 10631  03ED  3041               	movlw	65
 10632  03EE  0025               	movlb	5	; select bank5
 10633  03EF  0620               	xorwf	_buffer_sys^(0+640),w
 10634  03F0  1903               	btfsc	3,2
 10635  03F1  2BF3               	goto	u8911
 10636  03F2  2BF4               	goto	u8910
 10637  03F3                     u8911:
 10638  03F3  2BFA               	goto	l1527
 10639  03F4                     u8910:
 10640  03F4                     l8707:
 10641  03F4  0022               	movlb	2	; select bank2
 10642  03F5  0338               	decf	_flagACircle^(0+256),w
 10643  03F6  1D03               	btfss	3,2
 10644  03F7  2BF9               	goto	u8921
 10645  03F8  2BFA               	goto	u8920
 10646  03F9                     u8921:
 10647  03F9  2DB3               	goto	l8785
 10648  03FA                     u8920:
 10649  03FA                     l1527:
 10650                           
 10651                           ;main.c: 284:         flagACircle = 1;
 10652  03FA  0022               	movlb	2	; select bank2
 10653  03FB  01B8               	clrf	_flagACircle^(0+256)
 10654  03FC  0AB8               	incf	_flagACircle^(0+256),f
 10655  03FD                     l8709:
 10656                           
 10657                           ;main.c: 285:         for(int i = 0; i < strlen(buffer_sys); i++){
 10658  03FD  0026               	movlb	6	; select bank6
 10659  03FE  01C4               	clrf	AutoCircleHandle@i^(0+768)
 10660  03FF  01C5               	clrf	(AutoCircleHandle@i+1)^(0+768)
 10661  0400  2D9D               	goto	l8783
 10662  0401                     l8711:
 10663                           
 10664                           ;main.c: 286:             if(buffer_sys[0] == 'A'){
 10665  0401  3041               	movlw	65
 10666  0402  0025               	movlb	5	; select bank5
 10667  0403  0620               	xorwf	_buffer_sys^(0+640),w
 10668  0404  1D03               	btfss	3,2
 10669  0405  2C07               	goto	u8931
 10670  0406  2C08               	goto	u8930
 10671  0407                     u8931:
 10672  0407  2C0E               	goto	l8715
 10673  0408                     u8930:
 10674  0408                     l8713:
 10675                           
 10676                           ;main.c: 287:                 buffer_sys[0] = '0';
 10677  0408  3030               	movlw	48
 10678  0409  0020               	movlb	0	; select bank0
 10679  040A  00D3               	movwf	??_AutoCircleHandle
 10680  040B  0853               	movf	??_AutoCircleHandle,w
 10681  040C  0025               	movlb	5	; select bank5
 10682  040D  00A0               	movwf	_buffer_sys^(0+640)
 10683  040E                     l8715:
 10684                           
 10685                           ;main.c: 289:             if((buffer_sys[i] == 'v') || (buffer_sys[i] == 'r') || (buffer
      +                          _sys[i] == 'a') || (buffer_sys[i] == '#')){
 10686  040E  0026               	movlb	6	; select bank6
 10687  040F  0844               	movf	AutoCircleHandle@i^(0+768),w
 10688  0410  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
 10689  0411  0086               	movwf	6
 10690  0412  3002               	movlw	2	; select bank5/6
 10691  0413  0087               	movwf	7
 10692  0414  3076               	movlw	118
 10693  0415  0601               	xorwf	1,w
 10694  0416  1903               	btfsc	3,2
 10695  0417  2C19               	goto	u8941
 10696  0418  2C1A               	goto	u8940
 10697  0419                     u8941:
 10698  0419  2C3B               	goto	l8723
 10699  041A                     u8940:
 10700  041A                     l8717:
 10701  041A  0844               	movf	AutoCircleHandle@i^(0+768),w
 10702  041B  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
 10703  041C  0086               	movwf	6
 10704  041D  3002               	movlw	2	; select bank5/6
 10705  041E  0087               	movwf	7
 10706  041F  3072               	movlw	114
 10707  0420  0601               	xorwf	1,w
 10708  0421  1903               	btfsc	3,2
 10709  0422  2C24               	goto	u8951
 10710  0423  2C25               	goto	u8950
 10711  0424                     u8951:
 10712  0424  2C3B               	goto	l8723
 10713  0425                     u8950:
 10714  0425                     l8719:
 10715  0425  0844               	movf	AutoCircleHandle@i^(0+768),w
 10716  0426  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
 10717  0427  0086               	movwf	6
 10718  0428  3002               	movlw	2	; select bank5/6
 10719  0429  0087               	movwf	7
 10720  042A  3061               	movlw	97
 10721  042B  0601               	xorwf	1,w
 10722  042C  1903               	btfsc	3,2
 10723  042D  2C2F               	goto	u8961
 10724  042E  2C30               	goto	u8960
 10725  042F                     u8961:
 10726  042F  2C3B               	goto	l8723
 10727  0430                     u8960:
 10728  0430                     l8721:
 10729  0430  0844               	movf	AutoCircleHandle@i^(0+768),w
 10730  0431  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
 10731  0432  0086               	movwf	6
 10732  0433  3002               	movlw	2	; select bank5/6
 10733  0434  0087               	movwf	7
 10734  0435  3023               	movlw	35
 10735  0436  0601               	xorwf	1,w
 10736  0437  1D03               	btfss	3,2
 10737  0438  2C3A               	goto	u8971
 10738  0439  2C3B               	goto	u8970
 10739  043A                     u8971:
 10740  043A  2D7F               	goto	l8777
 10741  043B                     u8970:
 10742  043B                     l8723:
 10743                           
 10744                           ;main.c: 290:                 if((buffer_sys[i] == 'v')){
 10745  043B  0844               	movf	AutoCircleHandle@i^(0+768),w
 10746  043C  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
 10747  043D  0086               	movwf	6
 10748  043E  3002               	movlw	2	; select bank5/6
 10749  043F  0087               	movwf	7
 10750  0440  3076               	movlw	118
 10751  0441  0601               	xorwf	1,w
 10752  0442  1D03               	btfss	3,2
 10753  0443  2C45               	goto	u8981
 10754  0444  2C46               	goto	u8980
 10755  0445                     u8981:
 10756  0445  2C99               	goto	l8737
 10757  0446                     u8980:
 10758  0446                     l8725:
 10759                           
 10760                           ;main.c: 291:                     velACircle = atoi(bufferACircle_t);
 10761  0446  3020               	movlw	low AutoCircleHandle@bufferACircle_t
 10762  0447  0020               	movlb	0	; select bank0
 10763  0448  00B4               	movwf	atoi@s
 10764  0449  3003               	movlw	high AutoCircleHandle@bufferACircle_t
 10765  044A  00B5               	movwf	atoi@s+1
 10766  044B  3190  202D  3183   	fcall	_atoi
 10767  044E  0020               	movlb	0	; select bank0
 10768  044F  0834               	movf	?_atoi,w
 10769  0450  00C3               	movwf	___xxtofl@val
 10770  0451  0835               	movf	?_atoi+1,w
 10771  0452  00C4               	movwf	___xxtofl@val+1
 10772  0453  0D89               	rlf	9,f
 10773  0454  3B89               	subwfb	9,f
 10774  0455  0989               	comf	9,f
 10775  0456  00C5               	movwf	___xxtofl@val+2
 10776  0457  00C6               	movwf	___xxtofl@val+3
 10777  0458  3001               	movlw	1
 10778  0459  319E  266F  3183   	fcall	___xxtofl
 10779  045C  0020               	movlb	0	; select bank0
 10780  045D  0846               	movf	?___xxtofl+3,w
 10781  045E  0022               	movlb	2	; select bank2
 10782  045F  00A3               	movwf	(_velACircle+3)^(0+256)
 10783  0460  0020               	movlb	0	; select bank0
 10784  0461  0845               	movf	?___xxtofl+2,w
 10785  0462  0022               	movlb	2	; select bank2
 10786  0463  00A2               	movwf	(_velACircle+2)^(0+256)
 10787  0464  0020               	movlb	0	; select bank0
 10788  0465  0844               	movf	?___xxtofl+1,w
 10789  0466  0022               	movlb	2	; select bank2
 10790  0467  00A1               	movwf	(_velACircle+1)^(0+256)
 10791  0468  0020               	movlb	0	; select bank0
 10792  0469  0843               	movf	?___xxtofl,w
 10793  046A  0022               	movlb	2	; select bank2
 10794  046B  00A0               	movwf	_velACircle^(0+256)
 10795  046C                     l8727:
 10796                           
 10797                           ;main.c: 293:                     for(int j = 0; j < strlen(bufferACircle_t);j++){
 10798  046C  0026               	movlb	6	; select bank6
 10799  046D  01BC               	clrf	AutoCircleHandle@j^(0+768)
 10800  046E  01BD               	clrf	(AutoCircleHandle@j+1)^(0+768)
 10801  046F  2C81               	goto	l8733
 10802  0470                     l8729:
 10803                           
 10804                           ;main.c: 294:                         bufferACircle_t[j] = ' ';
 10805  0470  3020               	movlw	32
 10806  0471  0020               	movlb	0	; select bank0
 10807  0472  00D3               	movwf	??_AutoCircleHandle
 10808  0473  0026               	movlb	6	; select bank6
 10809  0474  083C               	movf	AutoCircleHandle@j^(0+768),w
 10810  0475  3E20               	addlw	(low (AutoCircleHandle@bufferACircle_t| (0+768)))& (0+255)
 10811  0476  0086               	movwf	6
 10812  0477  3003               	movlw	3	; select bank6/7
 10813  0478  0087               	movwf	7
 10814  0479  0020               	movlb	0	; select bank0
 10815  047A  0853               	movf	??_AutoCircleHandle,w
 10816  047B  0081               	movwf	1
 10817  047C                     l8731:
 10818                           
 10819                           ;main.c: 295:                     }
 10820  047C  3001               	movlw	1
 10821  047D  0026               	movlb	6	; select bank6
 10822  047E  07BC               	addwf	AutoCircleHandle@j^(0+768),f
 10823  047F  3000               	movlw	0
 10824  0480  3DBD               	addwfc	(AutoCircleHandle@j+1)^(0+768),f
 10825  0481                     l8733:
 10826  0481  3020               	movlw	low AutoCircleHandle@bufferACircle_t
 10827  0482  0020               	movlb	0	; select bank0
 10828  0483  00AE               	movwf	strlen@s
 10829  0484  3003               	movlw	high AutoCircleHandle@bufferACircle_t
 10830  0485  00AF               	movwf	strlen@s+1
 10831  0486  319A  228E  3183   	fcall	_strlen
 10832  0489  0020               	movlb	0	; select bank0
 10833  048A  082F               	movf	?_strlen+1,w
 10834  048B  0026               	movlb	6	; select bank6
 10835  048C  023D               	subwf	(AutoCircleHandle@j+1)^(0+768),w
 10836  048D  1D03               	skipz
 10837  048E  2C93               	goto	u8995
 10838  048F  0020               	movlb	0	; select bank0
 10839  0490  082E               	movf	?_strlen,w
 10840  0491  0026               	movlb	6	; select bank6
 10841  0492  023C               	subwf	AutoCircleHandle@j^(0+768),w
 10842  0493                     u8995:
 10843  0493  1C03               	skipc
 10844  0494  2C96               	goto	u8991
 10845  0495  2C97               	goto	u8990
 10846  0496                     u8991:
 10847  0496  2C70               	goto	l8729
 10848  0497                     u8990:
 10849  0497                     l8735:
 10850                           
 10851                           ;main.c: 296:                     cntACircle = 0;
 10852  0497  0022               	movlb	2	; select bank2
 10853  0498  01B7               	clrf	_cntACircle^(0+256)
 10854  0499                     l8737:
 10855                           
 10856                           ;main.c: 298:                 if(buffer_sys[i] == 'r'){
 10857  0499  0026               	movlb	6	; select bank6
 10858  049A  0844               	movf	AutoCircleHandle@i^(0+768),w
 10859  049B  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
 10860  049C  0086               	movwf	6
 10861  049D  3002               	movlw	2	; select bank5/6
 10862  049E  0087               	movwf	7
 10863  049F  3072               	movlw	114
 10864  04A0  0601               	xorwf	1,w
 10865  04A1  1D03               	btfss	3,2
 10866  04A2  2CA4               	goto	u9001
 10867  04A3  2CA5               	goto	u9000
 10868  04A4                     u9001:
 10869  04A4  2CF8               	goto	l8751
 10870  04A5                     u9000:
 10871  04A5                     l8739:
 10872                           
 10873                           ;main.c: 299:                     valRadius_AC = atoi(bufferACircle_t);
 10874  04A5  3020               	movlw	low AutoCircleHandle@bufferACircle_t
 10875  04A6  0020               	movlb	0	; select bank0
 10876  04A7  00B4               	movwf	atoi@s
 10877  04A8  3003               	movlw	high AutoCircleHandle@bufferACircle_t
 10878  04A9  00B5               	movwf	atoi@s+1
 10879  04AA  3190  202D  3183   	fcall	_atoi
 10880  04AD  0020               	movlb	0	; select bank0
 10881  04AE  0834               	movf	?_atoi,w
 10882  04AF  00C3               	movwf	___xxtofl@val
 10883  04B0  0835               	movf	?_atoi+1,w
 10884  04B1  00C4               	movwf	___xxtofl@val+1
 10885  04B2  0D89               	rlf	9,f
 10886  04B3  3B89               	subwfb	9,f
 10887  04B4  0989               	comf	9,f
 10888  04B5  00C5               	movwf	___xxtofl@val+2
 10889  04B6  00C6               	movwf	___xxtofl@val+3
 10890  04B7  3001               	movlw	1
 10891  04B8  319E  266F  3183   	fcall	___xxtofl
 10892  04BB  0020               	movlb	0	; select bank0
 10893  04BC  0846               	movf	?___xxtofl+3,w
 10894  04BD  0023               	movlb	3	; select bank3
 10895  04BE  00EE               	movwf	(_valRadius_AC+3)^(0+384)
 10896  04BF  0020               	movlb	0	; select bank0
 10897  04C0  0845               	movf	?___xxtofl+2,w
 10898  04C1  0023               	movlb	3	; select bank3
 10899  04C2  00ED               	movwf	(_valRadius_AC+2)^(0+384)
 10900  04C3  0020               	movlb	0	; select bank0
 10901  04C4  0844               	movf	?___xxtofl+1,w
 10902  04C5  0023               	movlb	3	; select bank3
 10903  04C6  00EC               	movwf	(_valRadius_AC+1)^(0+384)
 10904  04C7  0020               	movlb	0	; select bank0
 10905  04C8  0843               	movf	?___xxtofl,w
 10906  04C9  0023               	movlb	3	; select bank3
 10907  04CA  00EB               	movwf	_valRadius_AC^(0+384)
 10908  04CB                     l8741:
 10909                           
 10910                           ;main.c: 301:                     for(int j = 0; j < strlen(bufferACircle_t);j++){
 10911  04CB  0026               	movlb	6	; select bank6
 10912  04CC  01BE               	clrf	AutoCircleHandle@j_2319^(0+768)
 10913  04CD  01BF               	clrf	(AutoCircleHandle@j_2319+1)^(0+768)
 10914  04CE  2CE0               	goto	l8747
 10915  04CF                     l8743:
 10916                           
 10917                           ;main.c: 302:                         bufferACircle_t[j] = ' ';
 10918  04CF  3020               	movlw	32
 10919  04D0  0020               	movlb	0	; select bank0
 10920  04D1  00D3               	movwf	??_AutoCircleHandle
 10921  04D2  0026               	movlb	6	; select bank6
 10922  04D3  083E               	movf	AutoCircleHandle@j_2319^(0+768),w
 10923  04D4  3E20               	addlw	(low (AutoCircleHandle@bufferACircle_t| (0+768)))& (0+255)
 10924  04D5  0086               	movwf	6
 10925  04D6  3003               	movlw	3	; select bank6/7
 10926  04D7  0087               	movwf	7
 10927  04D8  0020               	movlb	0	; select bank0
 10928  04D9  0853               	movf	??_AutoCircleHandle,w
 10929  04DA  0081               	movwf	1
 10930  04DB                     l8745:
 10931                           
 10932                           ;main.c: 303:                     }
 10933  04DB  3001               	movlw	1
 10934  04DC  0026               	movlb	6	; select bank6
 10935  04DD  07BE               	addwf	AutoCircleHandle@j_2319^(0+768),f
 10936  04DE  3000               	movlw	0
 10937  04DF  3DBF               	addwfc	(AutoCircleHandle@j_2319+1)^(0+768),f
 10938  04E0                     l8747:
 10939  04E0  3020               	movlw	low AutoCircleHandle@bufferACircle_t
 10940  04E1  0020               	movlb	0	; select bank0
 10941  04E2  00AE               	movwf	strlen@s
 10942  04E3  3003               	movlw	high AutoCircleHandle@bufferACircle_t
 10943  04E4  00AF               	movwf	strlen@s+1
 10944  04E5  319A  228E  3183   	fcall	_strlen
 10945  04E8  0020               	movlb	0	; select bank0
 10946  04E9  082F               	movf	?_strlen+1,w
 10947  04EA  0026               	movlb	6	; select bank6
 10948  04EB  023F               	subwf	(AutoCircleHandle@j_2319+1)^(0+768),w
 10949  04EC  1D03               	skipz
 10950  04ED  2CF2               	goto	u9015
 10951  04EE  0020               	movlb	0	; select bank0
 10952  04EF  082E               	movf	?_strlen,w
 10953  04F0  0026               	movlb	6	; select bank6
 10954  04F1  023E               	subwf	AutoCircleHandle@j_2319^(0+768),w
 10955  04F2                     u9015:
 10956  04F2  1C03               	skipc
 10957  04F3  2CF5               	goto	u9011
 10958  04F4  2CF6               	goto	u9010
 10959  04F5                     u9011:
 10960  04F5  2CCF               	goto	l8743
 10961  04F6                     u9010:
 10962  04F6                     l8749:
 10963                           
 10964                           ;main.c: 304:                     cntACircle = 0;
 10965  04F6  0022               	movlb	2	; select bank2
 10966  04F7  01B7               	clrf	_cntACircle^(0+256)
 10967  04F8                     l8751:
 10968                           
 10969                           ;main.c: 306:                 if(buffer_sys[i] == 'a'){
 10970  04F8  0026               	movlb	6	; select bank6
 10971  04F9  0844               	movf	AutoCircleHandle@i^(0+768),w
 10972  04FA  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
 10973  04FB  0086               	movwf	6
 10974  04FC  3002               	movlw	2	; select bank5/6
 10975  04FD  0087               	movwf	7
 10976  04FE  3061               	movlw	97
 10977  04FF  0601               	xorwf	1,w
 10978  0500  1D03               	btfss	3,2
 10979  0501  2D03               	goto	u9021
 10980  0502  2D04               	goto	u9020
 10981  0503                     u9021:
 10982  0503  2D41               	goto	l8765
 10983  0504                     u9020:
 10984  0504                     l8753:
 10985                           
 10986                           ;main.c: 307:                     angle_ACircle = atoi(bufferACircle_t);
 10987  0504  3020               	movlw	low AutoCircleHandle@bufferACircle_t
 10988  0505  0020               	movlb	0	; select bank0
 10989  0506  00B4               	movwf	atoi@s
 10990  0507  3003               	movlw	high AutoCircleHandle@bufferACircle_t
 10991  0508  00B5               	movwf	atoi@s+1
 10992  0509  3190  202D  3183   	fcall	_atoi
 10993  050C  0020               	movlb	0	; select bank0
 10994  050D  0835               	movf	?_atoi+1,w
 10995  050E  0023               	movlb	3	; select bank3
 10996  050F  00E0               	movwf	(_angle_ACircle+1)^(0+384)
 10997  0510  0020               	movlb	0	; select bank0
 10998  0511  0834               	movf	?_atoi,w
 10999  0512  0023               	movlb	3	; select bank3
 11000  0513  00DF               	movwf	_angle_ACircle^(0+384)
 11001  0514                     l8755:
 11002                           
 11003                           ;main.c: 309:                     for(int j = 0; j < strlen(bufferACircle_t);j++){
 11004  0514  0026               	movlb	6	; select bank6
 11005  0515  01C0               	clrf	AutoCircleHandle@j_2320^(0+768)
 11006  0516  01C1               	clrf	(AutoCircleHandle@j_2320+1)^(0+768)
 11007  0517  2D29               	goto	l8761
 11008  0518                     l8757:
 11009                           
 11010                           ;main.c: 310:                         bufferACircle_t[j] = ' ';
 11011  0518  3020               	movlw	32
 11012  0519  0020               	movlb	0	; select bank0
 11013  051A  00D3               	movwf	??_AutoCircleHandle
 11014  051B  0026               	movlb	6	; select bank6
 11015  051C  0840               	movf	AutoCircleHandle@j_2320^(0+768),w
 11016  051D  3E20               	addlw	(low (AutoCircleHandle@bufferACircle_t| (0+768)))& (0+255)
 11017  051E  0086               	movwf	6
 11018  051F  3003               	movlw	3	; select bank6/7
 11019  0520  0087               	movwf	7
 11020  0521  0020               	movlb	0	; select bank0
 11021  0522  0853               	movf	??_AutoCircleHandle,w
 11022  0523  0081               	movwf	1
 11023  0524                     l8759:
 11024                           
 11025                           ;main.c: 311:                     }
 11026  0524  3001               	movlw	1
 11027  0525  0026               	movlb	6	; select bank6
 11028  0526  07C0               	addwf	AutoCircleHandle@j_2320^(0+768),f
 11029  0527  3000               	movlw	0
 11030  0528  3DC1               	addwfc	(AutoCircleHandle@j_2320+1)^(0+768),f
 11031  0529                     l8761:
 11032  0529  3020               	movlw	low AutoCircleHandle@bufferACircle_t
 11033  052A  0020               	movlb	0	; select bank0
 11034  052B  00AE               	movwf	strlen@s
 11035  052C  3003               	movlw	high AutoCircleHandle@bufferACircle_t
 11036  052D  00AF               	movwf	strlen@s+1
 11037  052E  319A  228E  3183   	fcall	_strlen
 11038  0531  0020               	movlb	0	; select bank0
 11039  0532  082F               	movf	?_strlen+1,w
 11040  0533  0026               	movlb	6	; select bank6
 11041  0534  0241               	subwf	(AutoCircleHandle@j_2320+1)^(0+768),w
 11042  0535  1D03               	skipz
 11043  0536  2D3B               	goto	u9035
 11044  0537  0020               	movlb	0	; select bank0
 11045  0538  082E               	movf	?_strlen,w
 11046  0539  0026               	movlb	6	; select bank6
 11047  053A  0240               	subwf	AutoCircleHandle@j_2320^(0+768),w
 11048  053B                     u9035:
 11049  053B  1C03               	skipc
 11050  053C  2D3E               	goto	u9031
 11051  053D  2D3F               	goto	u9030
 11052  053E                     u9031:
 11053  053E  2D18               	goto	l8757
 11054  053F                     u9030:
 11055  053F                     l8763:
 11056                           
 11057                           ;main.c: 312:                     cntACircle = 0;
 11058  053F  0022               	movlb	2	; select bank2
 11059  0540  01B7               	clrf	_cntACircle^(0+256)
 11060  0541                     l8765:
 11061                           
 11062                           ;main.c: 314:                 if(buffer_sys[i] == '#'){
 11063  0541  0026               	movlb	6	; select bank6
 11064  0542  0844               	movf	AutoCircleHandle@i^(0+768),w
 11065  0543  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
 11066  0544  0086               	movwf	6
 11067  0545  3002               	movlw	2	; select bank5/6
 11068  0546  0087               	movwf	7
 11069  0547  3023               	movlw	35
 11070  0548  0601               	xorwf	1,w
 11071  0549  1D03               	btfss	3,2
 11072  054A  2D4C               	goto	u9041
 11073  054B  2D4D               	goto	u9040
 11074  054C                     u9041:
 11075  054C  2D98               	goto	l8781
 11076  054D                     u9040:
 11077  054D                     l8767:
 11078                           
 11079                           ;main.c: 315:                     flagACircle = 2;
 11080  054D  3002               	movlw	2
 11081  054E  0020               	movlb	0	; select bank0
 11082  054F  00D3               	movwf	??_AutoCircleHandle
 11083  0550  0853               	movf	??_AutoCircleHandle,w
 11084  0551  0022               	movlb	2	; select bank2
 11085  0552  00B8               	movwf	_flagACircle^(0+256)
 11086  0553                     l8769:
 11087                           
 11088                           ;main.c: 317:                     for(int j = 0; j < strlen(bufferACircle_t);j++){
 11089  0553  0026               	movlb	6	; select bank6
 11090  0554  01C2               	clrf	AutoCircleHandle@j_2321^(0+768)
 11091  0555  01C3               	clrf	(AutoCircleHandle@j_2321+1)^(0+768)
 11092  0556  2D68               	goto	l8775
 11093  0557                     l8771:
 11094                           
 11095                           ;main.c: 318:                         bufferACircle_t[j] = ' ';
 11096  0557  3020               	movlw	32
 11097  0558  0020               	movlb	0	; select bank0
 11098  0559  00D3               	movwf	??_AutoCircleHandle
 11099  055A  0026               	movlb	6	; select bank6
 11100  055B  0842               	movf	AutoCircleHandle@j_2321^(0+768),w
 11101  055C  3E20               	addlw	(low (AutoCircleHandle@bufferACircle_t| (0+768)))& (0+255)
 11102  055D  0086               	movwf	6
 11103  055E  3003               	movlw	3	; select bank6/7
 11104  055F  0087               	movwf	7
 11105  0560  0020               	movlb	0	; select bank0
 11106  0561  0853               	movf	??_AutoCircleHandle,w
 11107  0562  0081               	movwf	1
 11108  0563                     l8773:
 11109                           
 11110                           ;main.c: 319:                     }
 11111  0563  3001               	movlw	1
 11112  0564  0026               	movlb	6	; select bank6
 11113  0565  07C2               	addwf	AutoCircleHandle@j_2321^(0+768),f
 11114  0566  3000               	movlw	0
 11115  0567  3DC3               	addwfc	(AutoCircleHandle@j_2321+1)^(0+768),f
 11116  0568                     l8775:
 11117  0568  3020               	movlw	low AutoCircleHandle@bufferACircle_t
 11118  0569  0020               	movlb	0	; select bank0
 11119  056A  00AE               	movwf	strlen@s
 11120  056B  3003               	movlw	high AutoCircleHandle@bufferACircle_t
 11121  056C  00AF               	movwf	strlen@s+1
 11122  056D  319A  228E  3183   	fcall	_strlen
 11123  0570  0020               	movlb	0	; select bank0
 11124  0571  082F               	movf	?_strlen+1,w
 11125  0572  0026               	movlb	6	; select bank6
 11126  0573  0243               	subwf	(AutoCircleHandle@j_2321+1)^(0+768),w
 11127  0574  1D03               	skipz
 11128  0575  2D7A               	goto	u9055
 11129  0576  0020               	movlb	0	; select bank0
 11130  0577  082E               	movf	?_strlen,w
 11131  0578  0026               	movlb	6	; select bank6
 11132  0579  0242               	subwf	AutoCircleHandle@j_2321^(0+768),w
 11133  057A                     u9055:
 11134  057A  1C03               	skipc
 11135  057B  2D7D               	goto	u9051
 11136  057C  2D7E               	goto	u9050
 11137  057D                     u9051:
 11138  057D  2D57               	goto	l8771
 11139  057E                     u9050:
 11140  057E  2D98               	goto	l8781
 11141  057F                     l8777:
 11142                           
 11143                           ;main.c: 323:                 bufferACircle_t[cntACircle] = buffer_sys[i];
 11144  057F  0844               	movf	AutoCircleHandle@i^(0+768),w
 11145  0580  3EA0               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
 11146  0581  0086               	movwf	6
 11147  0582  3002               	movlw	2	; select bank5/6
 11148  0583  0087               	movwf	7
 11149  0584  0801               	movf	1,w
 11150  0585  0020               	movlb	0	; select bank0
 11151  0586  00D3               	movwf	??_AutoCircleHandle
 11152  0587  0022               	movlb	2	; select bank2
 11153  0588  0837               	movf	_cntACircle^(0+256),w
 11154  0589  3E20               	addlw	(low (AutoCircleHandle@bufferACircle_t| (0+768)))& (0+255)
 11155  058A  0086               	movwf	6
 11156  058B  3003               	movlw	3	; select bank6/7
 11157  058C  0087               	movwf	7
 11158  058D  0020               	movlb	0	; select bank0
 11159  058E  0853               	movf	??_AutoCircleHandle,w
 11160  058F  0081               	movwf	1
 11161  0590                     l8779:
 11162                           
 11163                           ;main.c: 324:                 cntACircle = cntACircle + 1;
 11164  0590  0022               	movlb	2	; select bank2
 11165  0591  0837               	movf	_cntACircle^(0+256),w
 11166  0592  3E01               	addlw	1
 11167  0593  0020               	movlb	0	; select bank0
 11168  0594  00D3               	movwf	??_AutoCircleHandle
 11169  0595  0853               	movf	??_AutoCircleHandle,w
 11170  0596  0022               	movlb	2	; select bank2
 11171  0597  00B7               	movwf	_cntACircle^(0+256)
 11172  0598                     l8781:
 11173                           
 11174                           ;main.c: 326:         }
 11175  0598  3001               	movlw	1
 11176  0599  0026               	movlb	6	; select bank6
 11177  059A  07C4               	addwf	AutoCircleHandle@i^(0+768),f
 11178  059B  3000               	movlw	0
 11179  059C  3DC5               	addwfc	(AutoCircleHandle@i+1)^(0+768),f
 11180  059D                     l8783:
 11181  059D  30A0               	movlw	low _buffer_sys
 11182  059E  0020               	movlb	0	; select bank0
 11183  059F  00AE               	movwf	strlen@s
 11184  05A0  3002               	movlw	high _buffer_sys
 11185  05A1  00AF               	movwf	strlen@s+1
 11186  05A2  319A  228E  3183   	fcall	_strlen
 11187  05A5  0020               	movlb	0	; select bank0
 11188  05A6  082F               	movf	?_strlen+1,w
 11189  05A7  0026               	movlb	6	; select bank6
 11190  05A8  0245               	subwf	(AutoCircleHandle@i+1)^(0+768),w
 11191  05A9  1D03               	skipz
 11192  05AA  2DAF               	goto	u9065
 11193  05AB  0020               	movlb	0	; select bank0
 11194  05AC  082E               	movf	?_strlen,w
 11195  05AD  0026               	movlb	6	; select bank6
 11196  05AE  0244               	subwf	AutoCircleHandle@i^(0+768),w
 11197  05AF                     u9065:
 11198  05AF  1C03               	skipc
 11199  05B0  2DB2               	goto	u9061
 11200  05B1  2DB3               	goto	u9060
 11201  05B2                     u9061:
 11202  05B2  2C01               	goto	l8711
 11203  05B3                     u9060:
 11204  05B3                     l8785:
 11205                           
 11206                           ;main.c: 328:     if(flagACircle == 2){
 11207  05B3  3002               	movlw	2
 11208  05B4  0022               	movlb	2	; select bank2
 11209  05B5  0638               	xorwf	_flagACircle^(0+256),w
 11210  05B6  1D03               	btfss	3,2
 11211  05B7  2DB9               	goto	u9071
 11212  05B8  2DBA               	goto	u9070
 11213  05B9                     u9071:
 11214  05B9  2F1E               	goto	l1554
 11215  05BA                     u9070:
 11216  05BA                     l8787:
 11217                           
 11218                           ;main.c: 329:         timeACircle = (3.14159*valRadius_AC*angle_ACircle*100)/(18*velACir
      +                          cle);
 11219  05BA  3040               	movlw	64
 11220  05BB  0021               	movlb	1	; select bank1
 11221  05BC  00A3               	movwf	(___flmul@b+3)^(0+128)
 11222  05BD  3049               	movlw	73
 11223  05BE  00A2               	movwf	(___flmul@b+2)^(0+128)
 11224  05BF  300F               	movlw	15
 11225  05C0  00A1               	movwf	(___flmul@b+1)^(0+128)
 11226  05C1  30D0               	movlw	208
 11227  05C2  00A0               	movwf	___flmul@b^(0+128)
 11228  05C3  0023               	movlb	3	; select bank3
 11229  05C4  086E               	movf	(_valRadius_AC+3)^(0+384),w
 11230  05C5  0021               	movlb	1	; select bank1
 11231  05C6  00A7               	movwf	(___flmul@a+3)^(0+128)
 11232  05C7  0023               	movlb	3	; select bank3
 11233  05C8  086D               	movf	(_valRadius_AC+2)^(0+384),w
 11234  05C9  0021               	movlb	1	; select bank1
 11235  05CA  00A6               	movwf	(___flmul@a+2)^(0+128)
 11236  05CB  0023               	movlb	3	; select bank3
 11237  05CC  086C               	movf	(_valRadius_AC+1)^(0+384),w
 11238  05CD  0021               	movlb	1	; select bank1
 11239  05CE  00A5               	movwf	(___flmul@a+1)^(0+128)
 11240  05CF  0023               	movlb	3	; select bank3
 11241  05D0  086B               	movf	_valRadius_AC^(0+384),w
 11242  05D1  0021               	movlb	1	; select bank1
 11243  05D2  00A4               	movwf	___flmul@a^(0+128)
 11244  05D3  318D  257C  3183   	fcall	___flmul
 11245  05D6  0021               	movlb	1	; select bank1
 11246  05D7  0823               	movf	(?___flmul+3)^(0+128),w
 11247  05D8  0026               	movlb	6	; select bank6
 11248  05D9  00B7               	movwf	(_AutoCircleHandle$3252+3)^(0+768)
 11249  05DA  0021               	movlb	1	; select bank1
 11250  05DB  0822               	movf	(?___flmul+2)^(0+128),w
 11251  05DC  0026               	movlb	6	; select bank6
 11252  05DD  00B6               	movwf	(_AutoCircleHandle$3252+2)^(0+768)
 11253  05DE  0021               	movlb	1	; select bank1
 11254  05DF  0821               	movf	(?___flmul+1)^(0+128),w
 11255  05E0  0026               	movlb	6	; select bank6
 11256  05E1  00B5               	movwf	(_AutoCircleHandle$3252+1)^(0+768)
 11257  05E2  0021               	movlb	1	; select bank1
 11258  05E3  0820               	movf	?___flmul^(0+128),w
 11259  05E4  0026               	movlb	6	; select bank6
 11260  05E5  00B4               	movwf	_AutoCircleHandle$3252^(0+768)
 11261                           
 11262                           ;main.c: 329:         timeACircle = (3.14159*valRadius_AC*angle_ACircle*100)/(18*velACir
      +                          cle);
 11263  05E6  0023               	movlb	3	; select bank3
 11264  05E7  085F               	movf	_angle_ACircle^(0+384),w
 11265  05E8  0020               	movlb	0	; select bank0
 11266  05E9  00C3               	movwf	___xxtofl@val
 11267  05EA  0023               	movlb	3	; select bank3
 11268  05EB  0860               	movf	(_angle_ACircle+1)^(0+384),w
 11269  05EC  0020               	movlb	0	; select bank0
 11270  05ED  00C4               	movwf	___xxtofl@val+1
 11271  05EE  01C5               	clrf	___xxtofl@val+2
 11272  05EF  01C6               	clrf	___xxtofl@val+3
 11273  05F0  3000               	movlw	0
 11274  05F1  319E  266F  3183   	fcall	___xxtofl
 11275  05F4  0020               	movlb	0	; select bank0
 11276  05F5  0846               	movf	?___xxtofl+3,w
 11277  05F6  0021               	movlb	1	; select bank1
 11278  05F7  00A3               	movwf	(___flmul@b+3)^(0+128)
 11279  05F8  0020               	movlb	0	; select bank0
 11280  05F9  0845               	movf	?___xxtofl+2,w
 11281  05FA  0021               	movlb	1	; select bank1
 11282  05FB  00A2               	movwf	(___flmul@b+2)^(0+128)
 11283  05FC  0020               	movlb	0	; select bank0
 11284  05FD  0844               	movf	?___xxtofl+1,w
 11285  05FE  0021               	movlb	1	; select bank1
 11286  05FF  00A1               	movwf	(___flmul@b+1)^(0+128)
 11287  0600  0020               	movlb	0	; select bank0
 11288  0601  0843               	movf	?___xxtofl,w
 11289  0602  0021               	movlb	1	; select bank1
 11290  0603  00A0               	movwf	___flmul@b^(0+128)
 11291  0604  0026               	movlb	6	; select bank6
 11292  0605  0837               	movf	(_AutoCircleHandle$3252+3)^(0+768),w
 11293  0606  0021               	movlb	1	; select bank1
 11294  0607  00A7               	movwf	(___flmul@a+3)^(0+128)
 11295  0608  0026               	movlb	6	; select bank6
 11296  0609  0836               	movf	(_AutoCircleHandle$3252+2)^(0+768),w
 11297  060A  0021               	movlb	1	; select bank1
 11298  060B  00A6               	movwf	(___flmul@a+2)^(0+128)
 11299  060C  0026               	movlb	6	; select bank6
 11300  060D  0835               	movf	(_AutoCircleHandle$3252+1)^(0+768),w
 11301  060E  0021               	movlb	1	; select bank1
 11302  060F  00A5               	movwf	(___flmul@a+1)^(0+128)
 11303  0610  0026               	movlb	6	; select bank6
 11304  0611  0834               	movf	_AutoCircleHandle$3252^(0+768),w
 11305  0612  0021               	movlb	1	; select bank1
 11306  0613  00A4               	movwf	___flmul@a^(0+128)
 11307  0614  318D  257C  3183   	fcall	___flmul
 11308  0617  0021               	movlb	1	; select bank1
 11309  0618  0823               	movf	(?___flmul+3)^(0+128),w
 11310  0619  0026               	movlb	6	; select bank6
 11311  061A  00BB               	movwf	(_AutoCircleHandle$3253+3)^(0+768)
 11312  061B  0021               	movlb	1	; select bank1
 11313  061C  0822               	movf	(?___flmul+2)^(0+128),w
 11314  061D  0026               	movlb	6	; select bank6
 11315  061E  00BA               	movwf	(_AutoCircleHandle$3253+2)^(0+768)
 11316  061F  0021               	movlb	1	; select bank1
 11317  0620  0821               	movf	(?___flmul+1)^(0+128),w
 11318  0621  0026               	movlb	6	; select bank6
 11319  0622  00B9               	movwf	(_AutoCircleHandle$3253+1)^(0+768)
 11320  0623  0021               	movlb	1	; select bank1
 11321  0624  0820               	movf	?___flmul^(0+128),w
 11322  0625  0026               	movlb	6	; select bank6
 11323  0626  00B8               	movwf	_AutoCircleHandle$3253^(0+768)
 11324                           
 11325                           ;main.c: 329:         timeACircle = (3.14159*valRadius_AC*angle_ACircle*100)/(18*velACir
      +                          cle);
 11326  0627  3041               	movlw	65
 11327  0628  0021               	movlb	1	; select bank1
 11328  0629  00A3               	movwf	(___flmul@b+3)^(0+128)
 11329  062A  3090               	movlw	144
 11330  062B  00A2               	movwf	(___flmul@b+2)^(0+128)
 11331  062C  3000               	movlw	0
 11332  062D  00A1               	movwf	(___flmul@b+1)^(0+128)
 11333  062E  3000               	movlw	0
 11334  062F  00A0               	movwf	___flmul@b^(0+128)
 11335  0630  0022               	movlb	2	; select bank2
 11336  0631  0823               	movf	(_velACircle+3)^(0+256),w
 11337  0632  0021               	movlb	1	; select bank1
 11338  0633  00A7               	movwf	(___flmul@a+3)^(0+128)
 11339  0634  0022               	movlb	2	; select bank2
 11340  0635  0822               	movf	(_velACircle+2)^(0+256),w
 11341  0636  0021               	movlb	1	; select bank1
 11342  0637  00A6               	movwf	(___flmul@a+2)^(0+128)
 11343  0638  0022               	movlb	2	; select bank2
 11344  0639  0821               	movf	(_velACircle+1)^(0+256),w
 11345  063A  0021               	movlb	1	; select bank1
 11346  063B  00A5               	movwf	(___flmul@a+1)^(0+128)
 11347  063C  0022               	movlb	2	; select bank2
 11348  063D  0820               	movf	_velACircle^(0+256),w
 11349  063E  0021               	movlb	1	; select bank1
 11350  063F  00A4               	movwf	___flmul@a^(0+128)
 11351  0640  318D  257C  3183   	fcall	___flmul
 11352  0643  0021               	movlb	1	; select bank1
 11353  0644  0823               	movf	(?___flmul+3)^(0+128),w
 11354  0645  00BD               	movwf	(___fldiv@a+3)^(0+128)
 11355  0646  0822               	movf	(?___flmul+2)^(0+128),w
 11356  0647  00BC               	movwf	(___fldiv@a+2)^(0+128)
 11357  0648  0821               	movf	(?___flmul+1)^(0+128),w
 11358  0649  00BB               	movwf	(___fldiv@a+1)^(0+128)
 11359  064A  0820               	movf	?___flmul^(0+128),w
 11360  064B  00BA               	movwf	___fldiv@a^(0+128)
 11361  064C  3042               	movlw	66
 11362  064D  00A3               	movwf	(___flmul@b+3)^(0+128)
 11363  064E  30C8               	movlw	200
 11364  064F  00A2               	movwf	(___flmul@b+2)^(0+128)
 11365  0650  3000               	movlw	0
 11366  0651  00A1               	movwf	(___flmul@b+1)^(0+128)
 11367  0652  3000               	movlw	0
 11368  0653  00A0               	movwf	___flmul@b^(0+128)
 11369  0654  0026               	movlb	6	; select bank6
 11370  0655  083B               	movf	(_AutoCircleHandle$3253+3)^(0+768),w
 11371  0656  0021               	movlb	1	; select bank1
 11372  0657  00A7               	movwf	(___flmul@a+3)^(0+128)
 11373  0658  0026               	movlb	6	; select bank6
 11374  0659  083A               	movf	(_AutoCircleHandle$3253+2)^(0+768),w
 11375  065A  0021               	movlb	1	; select bank1
 11376  065B  00A6               	movwf	(___flmul@a+2)^(0+128)
 11377  065C  0026               	movlb	6	; select bank6
 11378  065D  0839               	movf	(_AutoCircleHandle$3253+1)^(0+768),w
 11379  065E  0021               	movlb	1	; select bank1
 11380  065F  00A5               	movwf	(___flmul@a+1)^(0+128)
 11381  0660  0026               	movlb	6	; select bank6
 11382  0661  0838               	movf	_AutoCircleHandle$3253^(0+768),w
 11383  0662  0021               	movlb	1	; select bank1
 11384  0663  00A4               	movwf	___flmul@a^(0+128)
 11385  0664  318D  257C  3183   	fcall	___flmul
 11386  0667  0021               	movlb	1	; select bank1
 11387  0668  0823               	movf	(?___flmul+3)^(0+128),w
 11388  0669  00C1               	movwf	(___fldiv@b+3)^(0+128)
 11389  066A  0822               	movf	(?___flmul+2)^(0+128),w
 11390  066B  00C0               	movwf	(___fldiv@b+2)^(0+128)
 11391  066C  0821               	movf	(?___flmul+1)^(0+128),w
 11392  066D  00BF               	movwf	(___fldiv@b+1)^(0+128)
 11393  066E  0820               	movf	?___flmul^(0+128),w
 11394  066F  00BE               	movwf	___fldiv@b^(0+128)
 11395  0670  3192  2288  3183   	fcall	___fldiv
 11396  0673  0021               	movlb	1	; select bank1
 11397  0674  083D               	movf	(?___fldiv+3)^(0+128),w
 11398  0675  0023               	movlb	3	; select bank3
 11399  0676  00C8               	movwf	(_timeACircle+3)^(0+384)
 11400  0677  0021               	movlb	1	; select bank1
 11401  0678  083C               	movf	(?___fldiv+2)^(0+128),w
 11402  0679  0023               	movlb	3	; select bank3
 11403  067A  00C7               	movwf	(_timeACircle+2)^(0+384)
 11404  067B  0021               	movlb	1	; select bank1
 11405  067C  083B               	movf	(?___fldiv+1)^(0+128),w
 11406  067D  0023               	movlb	3	; select bank3
 11407  067E  00C6               	movwf	(_timeACircle+1)^(0+384)
 11408  067F  0021               	movlb	1	; select bank1
 11409  0680  083A               	movf	?___fldiv^(0+128),w
 11410  0681  0023               	movlb	3	; select bank3
 11411  0682  00C5               	movwf	_timeACircle^(0+384)
 11412                           
 11413                           ;main.c: 330:         omegaACircle = velACircle/valRadius_AC;
 11414  0683  086E               	movf	(_valRadius_AC+3)^(0+384),w
 11415  0684  0021               	movlb	1	; select bank1
 11416  0685  00BD               	movwf	(___fldiv@a+3)^(0+128)
 11417  0686  0023               	movlb	3	; select bank3
 11418  0687  086D               	movf	(_valRadius_AC+2)^(0+384),w
 11419  0688  0021               	movlb	1	; select bank1
 11420  0689  00BC               	movwf	(___fldiv@a+2)^(0+128)
 11421  068A  0023               	movlb	3	; select bank3
 11422  068B  086C               	movf	(_valRadius_AC+1)^(0+384),w
 11423  068C  0021               	movlb	1	; select bank1
 11424  068D  00BB               	movwf	(___fldiv@a+1)^(0+128)
 11425  068E  0023               	movlb	3	; select bank3
 11426  068F  086B               	movf	_valRadius_AC^(0+384),w
 11427  0690  0021               	movlb	1	; select bank1
 11428  0691  00BA               	movwf	___fldiv@a^(0+128)
 11429  0692  0022               	movlb	2	; select bank2
 11430  0693  0823               	movf	(_velACircle+3)^(0+256),w
 11431  0694  0021               	movlb	1	; select bank1
 11432  0695  00C1               	movwf	(___fldiv@b+3)^(0+128)
 11433  0696  0022               	movlb	2	; select bank2
 11434  0697  0822               	movf	(_velACircle+2)^(0+256),w
 11435  0698  0021               	movlb	1	; select bank1
 11436  0699  00C0               	movwf	(___fldiv@b+2)^(0+128)
 11437  069A  0022               	movlb	2	; select bank2
 11438  069B  0821               	movf	(_velACircle+1)^(0+256),w
 11439  069C  0021               	movlb	1	; select bank1
 11440  069D  00BF               	movwf	(___fldiv@b+1)^(0+128)
 11441  069E  0022               	movlb	2	; select bank2
 11442  069F  0820               	movf	_velACircle^(0+256),w
 11443  06A0  0021               	movlb	1	; select bank1
 11444  06A1  00BE               	movwf	___fldiv@b^(0+128)
 11445  06A2  3192  2288  3183   	fcall	___fldiv
 11446  06A5  0021               	movlb	1	; select bank1
 11447  06A6  083D               	movf	(?___fldiv+3)^(0+128),w
 11448  06A7  0024               	movlb	4	; select bank4
 11449  06A8  00E4               	movwf	(_omegaACircle+3)^(0+512)
 11450  06A9  0021               	movlb	1	; select bank1
 11451  06AA  083C               	movf	(?___fldiv+2)^(0+128),w
 11452  06AB  0024               	movlb	4	; select bank4
 11453  06AC  00E3               	movwf	(_omegaACircle+2)^(0+512)
 11454  06AD  0021               	movlb	1	; select bank1
 11455  06AE  083B               	movf	(?___fldiv+1)^(0+128),w
 11456  06AF  0024               	movlb	4	; select bank4
 11457  06B0  00E2               	movwf	(_omegaACircle+1)^(0+512)
 11458  06B1  0021               	movlb	1	; select bank1
 11459  06B2  083A               	movf	?___fldiv^(0+128),w
 11460  06B3  0024               	movlb	4	; select bank4
 11461  06B4  00E1               	movwf	_omegaACircle^(0+512)
 11462                           
 11463                           ;main.c: 331:         if(totalTime != timeACircle) totalTime = timeACircle;
 11464  06B5  0020               	movlb	0	; select bank0
 11465  06B6  0858               	movf	_totalTime,w
 11466  06B7  00C3               	movwf	___xxtofl@val
 11467  06B8  0859               	movf	_totalTime+1,w
 11468  06B9  00C4               	movwf	___xxtofl@val+1
 11469  06BA  01C5               	clrf	___xxtofl@val+2
 11470  06BB  01C6               	clrf	___xxtofl@val+3
 11471  06BC  3000               	movlw	0
 11472  06BD  319E  266F  3183   	fcall	___xxtofl
 11473  06C0  0020               	movlb	0	; select bank0
 11474  06C1  0846               	movf	?___xxtofl+3,w
 11475  06C2  0021               	movlb	1	; select bank1
 11476  06C3  00A3               	movwf	(___fleq@ff1+3)^(0+128)
 11477  06C4  0020               	movlb	0	; select bank0
 11478  06C5  0845               	movf	?___xxtofl+2,w
 11479  06C6  0021               	movlb	1	; select bank1
 11480  06C7  00A2               	movwf	(___fleq@ff1+2)^(0+128)
 11481  06C8  0020               	movlb	0	; select bank0
 11482  06C9  0844               	movf	?___xxtofl+1,w
 11483  06CA  0021               	movlb	1	; select bank1
 11484  06CB  00A1               	movwf	(___fleq@ff1+1)^(0+128)
 11485  06CC  0020               	movlb	0	; select bank0
 11486  06CD  0843               	movf	?___xxtofl,w
 11487  06CE  0021               	movlb	1	; select bank1
 11488  06CF  00A0               	movwf	___fleq@ff1^(0+128)
 11489  06D0  0023               	movlb	3	; select bank3
 11490  06D1  0848               	movf	(_timeACircle+3)^(0+384),w
 11491  06D2  0021               	movlb	1	; select bank1
 11492  06D3  00A7               	movwf	(___fleq@ff2+3)^(0+128)
 11493  06D4  0023               	movlb	3	; select bank3
 11494  06D5  0847               	movf	(_timeACircle+2)^(0+384),w
 11495  06D6  0021               	movlb	1	; select bank1
 11496  06D7  00A6               	movwf	(___fleq@ff2+2)^(0+128)
 11497  06D8  0023               	movlb	3	; select bank3
 11498  06D9  0846               	movf	(_timeACircle+1)^(0+384),w
 11499  06DA  0021               	movlb	1	; select bank1
 11500  06DB  00A5               	movwf	(___fleq@ff2+1)^(0+128)
 11501  06DC  0023               	movlb	3	; select bank3
 11502  06DD  0845               	movf	_timeACircle^(0+384),w
 11503  06DE  0021               	movlb	1	; select bank1
 11504  06DF  00A4               	movwf	___fleq@ff2^(0+128)
 11505  06E0  319B  234A  3183   	fcall	___fleq
 11506  06E3  1803               	btfsc	3,0
 11507  06E4  2EE6               	goto	u9081
 11508  06E5  2EE7               	goto	u9080
 11509  06E6                     u9081:
 11510  06E6  2F02               	goto	l8791
 11511  06E7                     u9080:
 11512  06E7                     l8789:
 11513  06E7  0023               	movlb	3	; select bank3
 11514  06E8  0848               	movf	(_timeACircle+3)^(0+384),w
 11515  06E9  0021               	movlb	1	; select bank1
 11516  06EA  00EB               	movwf	(___fltol@f1+3)^(0+128)
 11517  06EB  0023               	movlb	3	; select bank3
 11518  06EC  0847               	movf	(_timeACircle+2)^(0+384),w
 11519  06ED  0021               	movlb	1	; select bank1
 11520  06EE  00EA               	movwf	(___fltol@f1+2)^(0+128)
 11521  06EF  0023               	movlb	3	; select bank3
 11522  06F0  0846               	movf	(_timeACircle+1)^(0+384),w
 11523  06F1  0021               	movlb	1	; select bank1
 11524  06F2  00E9               	movwf	(___fltol@f1+1)^(0+128)
 11525  06F3  0023               	movlb	3	; select bank3
 11526  06F4  0845               	movf	_timeACircle^(0+384),w
 11527  06F5  0021               	movlb	1	; select bank1
 11528  06F6  00E8               	movwf	___fltol@f1^(0+128)
 11529  06F7  319B  2399  3183   	fcall	___fltol
 11530  06FA  0021               	movlb	1	; select bank1
 11531  06FB  0869               	movf	(?___fltol+1)^(0+128),w
 11532  06FC  0020               	movlb	0	; select bank0
 11533  06FD  00D9               	movwf	_totalTime+1
 11534  06FE  0021               	movlb	1	; select bank1
 11535  06FF  0868               	movf	?___fltol^(0+128),w
 11536  0700  0020               	movlb	0	; select bank0
 11537  0701  00D8               	movwf	_totalTime
 11538  0702                     l8791:
 11539                           
 11540                           ;main.c: 332:         cntTime = 0;
 11541  0702  0022               	movlb	2	; select bank2
 11542  0703  01B2               	clrf	_cntTime^(0+256)
 11543  0704  01B3               	clrf	(_cntTime+1)^(0+256)
 11544  0705                     l8793:
 11545                           
 11546                           ;main.c: 333:         velocity_sys = velACircle;
 11547  0705  0823               	movf	(_velACircle+3)^(0+256),w
 11548  0706  0024               	movlb	4	; select bank4
 11549  0707  00D4               	movwf	(_velocity_sys+3)^(0+512)
 11550  0708  0022               	movlb	2	; select bank2
 11551  0709  0822               	movf	(_velACircle+2)^(0+256),w
 11552  070A  0024               	movlb	4	; select bank4
 11553  070B  00D3               	movwf	(_velocity_sys+2)^(0+512)
 11554  070C  0022               	movlb	2	; select bank2
 11555  070D  0821               	movf	(_velACircle+1)^(0+256),w
 11556  070E  0024               	movlb	4	; select bank4
 11557  070F  00D2               	movwf	(_velocity_sys+1)^(0+512)
 11558  0710  0022               	movlb	2	; select bank2
 11559  0711  0820               	movf	_velACircle^(0+256),w
 11560  0712  0024               	movlb	4	; select bank4
 11561  0713  00D1               	movwf	_velocity_sys^(0+512)
 11562  0714                     l8795:
 11563                           
 11564                           ;main.c: 334:         omega_sys = omegaACircle;
 11565  0714  0864               	movf	(_omegaACircle+3)^(0+512),w
 11566  0715  00D0               	movwf	(_omega_sys+3)^(0+512)
 11567  0716  0863               	movf	(_omegaACircle+2)^(0+512),w
 11568  0717  00CF               	movwf	(_omega_sys+2)^(0+512)
 11569  0718  0862               	movf	(_omegaACircle+1)^(0+512),w
 11570  0719  00CE               	movwf	(_omega_sys+1)^(0+512)
 11571  071A  0861               	movf	_omegaACircle^(0+512),w
 11572  071B  00CD               	movwf	_omega_sys^(0+512)
 11573  071C                     l8797:
 11574                           
 11575                           ;main.c: 335:         flagACircle = 0;
 11576  071C  0022               	movlb	2	; select bank2
 11577  071D  01B8               	clrf	_flagACircle^(0+256)
 11578  071E                     l1554:
 11579  071E  0008               	return
 11580  071F                     __end_of_AutoCircleHandle:
 11581                           
 11582                           	psect	text34
 11583  1A8E                     __ptext34:	
 11584 ;; *************** function _strlen *****************
 11585 ;; Defined at:
 11586 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 11587 ;; Parameters:    Size  Location     Type
 11588 ;;  s               2   14[BANK0 ] PTR const unsigned char 
 11589 ;;		 -> TimeLapseHandle@bufferCamera_t(20), AutoLineHandle@bufferALine_t(20), AutoCircleHandle@bufferACircle_t(20), Manu
      +alHandle@bufferManual_t(20), 
 11590 ;;		 -> buffer_sys(50), 
 11591 ;; Auto vars:     Size  Location     Type
 11592 ;;  a               2   16[BANK0 ] PTR const unsigned char 
 11593 ;;		 -> TimeLapseHandle@bufferCamera_t(20), AutoLineHandle@bufferALine_t(20), AutoCircleHandle@bufferACircle_t(20), Manu
      +alHandle@bufferManual_t(20), 
 11594 ;;		 -> buffer_sys(50), 
 11595 ;; Return value:  Size  Location     Type
 11596 ;;                  2   14[BANK0 ] unsigned int 
 11597 ;; Registers used:
 11598 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11599 ;; Tracked objects:
 11600 ;;		On entry : 0/0
 11601 ;;		On exit  : 0/0
 11602 ;;		Unchanged: 0/0
 11603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11604 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11605 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11607 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11608 ;;Total ram usage:        4 bytes
 11609 ;; Hardware stack levels used: 1
 11610 ;; Hardware stack levels required when called: 5
 11611 ;; This function calls:
 11612 ;;		Nothing
 11613 ;; This function is called by:
 11614 ;;		_ManualHandle
 11615 ;;		_AutoCircleHandle
 11616 ;;		_AutoLineHandle
 11617 ;;		_TimeLapseHandle
 11618 ;; This function uses a non-reentrant model
 11619 ;;
 11620                           
 11621                           
 11622                           ;psect for function _strlen
 11623  1A8E                     _strlen:
 11624  1A8E                     l8527:	
 11625                           ;incstack = 0
 11626                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 11627                           
 11628  1A8E  0020               	movlb	0	; select bank0
 11629  1A8F  082F               	movf	strlen@s+1,w
 11630  1A90  00B1               	movwf	strlen@a+1
 11631  1A91  082E               	movf	strlen@s,w
 11632  1A92  00B0               	movwf	strlen@a
 11633  1A93  2A98               	goto	l8531
 11634  1A94                     l8529:
 11635  1A94  3001               	movlw	1
 11636  1A95  07AE               	addwf	strlen@s,f
 11637  1A96  3000               	movlw	0
 11638  1A97  3DAF               	addwfc	strlen@s+1,f
 11639  1A98                     l8531:
 11640  1A98  082E               	movf	strlen@s,w
 11641  1A99  0086               	movwf	6
 11642  1A9A  082F               	movf	strlen@s+1,w
 11643  1A9B  0087               	movwf	7
 11644  1A9C  0801               	movf	1,w
 11645  1A9D  1D03               	btfss	3,2
 11646  1A9E  2AA0               	goto	u8561
 11647  1A9F  2AA1               	goto	u8560
 11648  1AA0                     u8561:
 11649  1AA0  2A94               	goto	l8529
 11650  1AA1                     u8560:
 11651  1AA1                     l8533:
 11652  1AA1  0830               	movf	strlen@a,w
 11653  1AA2  022E               	subwf	strlen@s,w
 11654  1AA3  00AE               	movwf	?_strlen
 11655  1AA4  0831               	movf	strlen@a+1,w
 11656  1AA5  3B2F               	subwfb	strlen@s+1,w
 11657  1AA6  00AF               	movwf	?_strlen+1
 11658  1AA7                     l2313:
 11659  1AA7  0008               	return
 11660  1AA8                     __end_of_strlen:
 11661                           
 11662                           	psect	text35
 11663  102D                     __ptext35:	
 11664 ;; *************** function _atoi *****************
 11665 ;; Defined at:
 11666 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 11667 ;; Parameters:    Size  Location     Type
 11668 ;;  s               2   20[BANK0 ] PTR const unsigned char 
 11669 ;;		 -> TimeLapseHandle@bufferCamera_t(20), AutoLineHandle@bufferALine_t(20), AutoCircleHandle@bufferACircle_t(20), Manu
      +alHandle@bufferManual_t(20), 
 11670 ;; Auto vars:     Size  Location     Type
 11671 ;;  n               2   33[BANK0 ] int 
 11672 ;;  neg             2   26[BANK0 ] int 
 11673 ;; Return value:  Size  Location     Type
 11674 ;;                  2   20[BANK0 ] int 
 11675 ;; Registers used:
 11676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11677 ;; Tracked objects:
 11678 ;;		On entry : 0/0
 11679 ;;		On exit  : 0/0
 11680 ;;		Unchanged: 0/0
 11681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11682 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11683 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11684 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11685 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11686 ;;Total ram usage:       15 bytes
 11687 ;; Hardware stack levels used: 1
 11688 ;; Hardware stack levels required when called: 6
 11689 ;; This function calls:
 11690 ;;		___wmul
 11691 ;;		_isdigit
 11692 ;;		_isspace
 11693 ;; This function is called by:
 11694 ;;		_ManualHandle
 11695 ;;		_AutoCircleHandle
 11696 ;;		_AutoLineHandle
 11697 ;;		_TimeLapseHandle
 11698 ;; This function uses a non-reentrant model
 11699 ;;
 11700                           
 11701                           
 11702                           ;psect for function _atoi
 11703  102D                     _atoi:
 11704  102D                     l8483:	
 11705                           ;incstack = 0
 11706                           ; Regs used in _atoi: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11707                           
 11708  102D  0020               	movlb	0	; select bank0
 11709  102E  01C1               	clrf	atoi@n
 11710  102F  01C2               	clrf	atoi@n+1
 11711  1030  01BA               	clrf	atoi@neg
 11712  1031  01BB               	clrf	atoi@neg+1
 11713  1032  2837               	goto	l8487
 11714  1033                     l8485:
 11715  1033  3001               	movlw	1
 11716  1034  07B4               	addwf	atoi@s,f
 11717  1035  3000               	movlw	0
 11718  1036  3DB5               	addwfc	atoi@s+1,f
 11719  1037                     l8487:
 11720  1037  01C0               	clrf	_atoi$2827
 11721  1038  0AC0               	incf	_atoi$2827,f
 11722  1039                     l8489:
 11723  1039  0834               	movf	atoi@s,w
 11724  103A  0086               	movwf	6
 11725  103B  0835               	movf	atoi@s+1,w
 11726  103C  0087               	movwf	7
 11727  103D  3020               	movlw	32
 11728  103E  0601               	xorwf	1,w
 11729  103F  1903               	btfsc	3,2
 11730  1040  2842               	goto	u8491
 11731  1041  2843               	goto	u8490
 11732  1042                     u8491:
 11733  1042  2858               	goto	l8495
 11734  1043                     u8490:
 11735  1043                     l8491:
 11736  1043  0834               	movf	atoi@s,w
 11737  1044  0086               	movwf	6
 11738  1045  0835               	movf	atoi@s+1,w
 11739  1046  0087               	movwf	7
 11740  1047  0801               	movf	1,w
 11741  1048  3EF7               	addlw	247
 11742  1049  00B6               	movwf	??_atoi
 11743  104A  30FF               	movlw	255
 11744  104B  1803               	skipnc
 11745  104C  3000               	movlw	0
 11746  104D  00B7               	movwf	??_atoi+1
 11747  104E  3000               	movlw	0
 11748  104F  0237               	subwf	??_atoi+1,w
 11749  1050  3005               	movlw	5
 11750  1051  1903               	skipnz
 11751  1052  0236               	subwf	??_atoi,w
 11752  1053  1C03               	skipc
 11753  1054  2856               	goto	u8501
 11754  1055  2857               	goto	u8500
 11755  1056                     u8501:
 11756  1056  2858               	goto	l8495
 11757  1057                     u8500:
 11758  1057                     l8493:
 11759  1057  01C0               	clrf	_atoi$2827
 11760  1058                     l8495:
 11761  1058  0840               	movf	_atoi$2827,w
 11762  1059  00B6               	movwf	??_atoi
 11763  105A  01B7               	clrf	??_atoi+1
 11764  105B  0836               	movf	??_atoi,w
 11765  105C  00BC               	movwf	_atoi$2826
 11766  105D  0837               	movf	??_atoi+1,w
 11767  105E  00BD               	movwf	_atoi$2826+1
 11768  105F                     l8499:
 11769  105F  083C               	movf	_atoi$2826,w
 11770  1060  043D               	iorwf	_atoi$2826+1,w
 11771  1061  1D03               	btfss	3,2
 11772  1062  2864               	goto	u8511
 11773  1063  2865               	goto	u8510
 11774  1064                     u8511:
 11775  1064  2833               	goto	l8485
 11776  1065                     u8510:
 11777  1065  286F               	goto	l8503
 11778  1066                     l8501:
 11779  1066  3001               	movlw	1
 11780  1067  00BA               	movwf	atoi@neg
 11781  1068  3000               	movlw	0
 11782  1069  00BB               	movwf	atoi@neg+1
 11783  106A                     l2280:
 11784  106A  3001               	movlw	1
 11785  106B  07B4               	addwf	atoi@s,f
 11786  106C  3000               	movlw	0
 11787  106D  3DB5               	addwfc	atoi@s+1,f
 11788  106E  28A1               	goto	l8509
 11789  106F                     l8503:
 11790  106F  0834               	movf	atoi@s,w
 11791  1070  0086               	movwf	6
 11792  1071  0835               	movf	atoi@s+1,w
 11793  1072  0087               	movwf	7
 11794  1073  0801               	movf	1,w
 11795  1074  00B6               	movwf	??_atoi
 11796  1075  01B7               	clrf	??_atoi+1
 11797                           
 11798                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11799                           ; Switch size 1, requested type "simple"
 11800                           ; Number of cases is 1, Range of values is 0 to 0
 11801                           ; switch strategies available:
 11802                           ; Name         Instructions Cycles
 11803                           ; simple_byte            4     3 (average)
 11804                           ; direct_byte            8     6 (fixed)
 11805                           ; jumptable            260     6 (fixed)
 11806                           ;	Chosen strategy is simple_byte
 11807  1076  0837               	movf	??_atoi+1,w
 11808  1077  3A00               	xorlw	0	; case 0
 11809  1078  1903               	skipnz
 11810  1079  287B               	goto	l9103
 11811  107A  28A1               	goto	l8509
 11812  107B                     l9103:
 11813                           
 11814                           ; Switch size 1, requested type "simple"
 11815                           ; Number of cases is 2, Range of values is 43 to 45
 11816                           ; switch strategies available:
 11817                           ; Name         Instructions Cycles
 11818                           ; simple_byte            7     4 (average)
 11819                           ; direct_byte           15     9 (fixed)
 11820                           ; jumptable            263     9 (fixed)
 11821                           ;	Chosen strategy is simple_byte
 11822  107B  0836               	movf	??_atoi,w
 11823  107C  3A2B               	xorlw	43	; case 43
 11824  107D  1903               	skipnz
 11825  107E  286A               	goto	l2280
 11826  107F  3A06               	xorlw	6	; case 45
 11827  1080  1903               	skipnz
 11828  1081  2866               	goto	l8501
 11829  1082  28A1               	goto	l8509
 11830  1083                     l8505:
 11831  1083  0834               	movf	atoi@s,w
 11832  1084  0086               	movwf	6
 11833  1085  0835               	movf	atoi@s+1,w
 11834  1086  0087               	movwf	7
 11835  1087  0842               	movf	atoi@n+1,w
 11836  1088  00AF               	movwf	___wmul@multiplier+1
 11837  1089  0841               	movf	atoi@n,w
 11838  108A  00AE               	movwf	___wmul@multiplier
 11839  108B  300A               	movlw	10
 11840  108C  00B0               	movwf	___wmul@multiplicand
 11841  108D  3000               	movlw	0
 11842  108E  00B1               	movwf	___wmul@multiplicand+1
 11843  108F  319A  22C4  3190   	fcall	___wmul
 11844  1092  0020               	movlb	0	; select bank0
 11845  1093  082F               	movf	?___wmul+1,w
 11846  1094  00B7               	movwf	??_atoi+1
 11847  1095  0801               	movf	1,w
 11848  1096  022E               	subwf	?___wmul,w
 11849  1097  00B6               	movwf	??_atoi
 11850  1098  1C03               	skipc
 11851  1099  03B7               	decf	??_atoi+1,f
 11852  109A  0836               	movf	??_atoi,w
 11853  109B  3E30               	addlw	48
 11854  109C  00C1               	movwf	atoi@n
 11855  109D  3000               	movlw	0
 11856  109E  3D37               	addwfc	??_atoi+1,w
 11857  109F  00C2               	movwf	atoi@n+1
 11858  10A0  286A               	goto	l2280
 11859  10A1                     l8509:
 11860  10A1  0834               	movf	atoi@s,w
 11861  10A2  0086               	movwf	6
 11862  10A3  0835               	movf	atoi@s+1,w
 11863  10A4  0087               	movwf	7
 11864  10A5  0801               	movf	1,w
 11865  10A6  3ED0               	addlw	208
 11866  10A7  00B6               	movwf	??_atoi
 11867  10A8  30FF               	movlw	255
 11868  10A9  1803               	skipnc
 11869  10AA  3000               	movlw	0
 11870  10AB  00B7               	movwf	??_atoi+1
 11871  10AC  3000               	movlw	0
 11872  10AD  0237               	subwf	??_atoi+1,w
 11873  10AE  300A               	movlw	10
 11874  10AF  1903               	skipnz
 11875  10B0  0236               	subwf	??_atoi,w
 11876  10B1  1C03               	skipc
 11877  10B2  28B4               	goto	u8521
 11878  10B3  28B6               	goto	u8520
 11879  10B4                     u8521:
 11880  10B4  3001               	movlw	1
 11881  10B5  28B7               	goto	u8530
 11882  10B6                     u8520:
 11883  10B6  3000               	movlw	0
 11884  10B7                     u8530:
 11885  10B7  00B8               	movwf	??_atoi+2
 11886  10B8  01B9               	clrf	??_atoi+3
 11887  10B9  0838               	movf	??_atoi+2,w
 11888  10BA  00BE               	movwf	_atoi$2828
 11889  10BB  0839               	movf	??_atoi+3,w
 11890  10BC  00BF               	movwf	_atoi$2828+1
 11891  10BD                     l8513:
 11892  10BD  083E               	movf	_atoi$2828,w
 11893  10BE  043F               	iorwf	_atoi$2828+1,w
 11894  10BF  1D03               	btfss	3,2
 11895  10C0  28C2               	goto	u8541
 11896  10C1  28C3               	goto	u8540
 11897  10C2                     u8541:
 11898  10C2  2883               	goto	l8505
 11899  10C3                     u8540:
 11900  10C3                     l8515:
 11901  10C3  083A               	movf	atoi@neg,w
 11902  10C4  043B               	iorwf	atoi@neg+1,w
 11903  10C5  1D03               	btfss	3,2
 11904  10C6  28C8               	goto	u8551
 11905  10C7  28C9               	goto	u8550
 11906  10C8                     u8551:
 11907  10C8  28D5               	goto	l8519
 11908  10C9                     u8550:
 11909  10C9                     l8517:
 11910  10C9  0941               	comf	atoi@n,w
 11911  10CA  00B6               	movwf	??_atoi
 11912  10CB  0942               	comf	atoi@n+1,w
 11913  10CC  00B7               	movwf	??_atoi+1
 11914  10CD  0AB6               	incf	??_atoi,f
 11915  10CE  1903               	skipnz
 11916  10CF  0AB7               	incf	??_atoi+1,f
 11917  10D0  0836               	movf	??_atoi,w
 11918  10D1  00B4               	movwf	?_atoi
 11919  10D2  0837               	movf	??_atoi+1,w
 11920  10D3  00B5               	movwf	?_atoi+1
 11921  10D4  28D9               	goto	l2293
 11922  10D5                     l8519:
 11923  10D5  0842               	movf	atoi@n+1,w
 11924  10D6  00B5               	movwf	?_atoi+1
 11925  10D7  0841               	movf	atoi@n,w
 11926  10D8  00B4               	movwf	?_atoi
 11927  10D9                     l2293:
 11928  10D9  0008               	return
 11929  10DA                     __end_of_atoi:
 11930                           
 11931                           	psect	text36
 11932  1B04                     __ptext36:	
 11933 ;; *************** function _isspace *****************
 11934 ;; Defined at:
 11935 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 11936 ;; Parameters:    Size  Location     Type
 11937 ;;  c               2   14[BANK0 ] int 
 11938 ;; Auto vars:     Size  Location     Type
 11939 ;;		None
 11940 ;; Return value:  Size  Location     Type
 11941 ;;                  2   14[BANK0 ] int 
 11942 ;; Registers used:
 11943 ;;		wreg, status,2, status,0
 11944 ;; Tracked objects:
 11945 ;;		On entry : 0/0
 11946 ;;		On exit  : 0/0
 11947 ;;		Unchanged: 0/0
 11948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11949 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11950 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11951 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11952 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11953 ;;Total ram usage:        5 bytes
 11954 ;; Hardware stack levels used: 1
 11955 ;; Hardware stack levels required when called: 5
 11956 ;; This function calls:
 11957 ;;		Nothing
 11958 ;; This function is called by:
 11959 ;;		_atoi
 11960 ;; This function uses a non-reentrant model
 11961 ;;
 11962                           
 11963                           
 11964                           ;psect for function _isspace
 11965  1B04                     _isspace:
 11966  1B04                     l8439:	
 11967                           ;incstack = 0
 11968                           ; Regs used in _isspace: [wreg+status,2+status,0]
 11969                           
 11970  1B04  0020               	movlb	0	; select bank0
 11971  1B05  01B2               	clrf	_isspace$2844
 11972  1B06  0AB2               	incf	_isspace$2844,f
 11973  1B07                     l8441:
 11974  1B07  3020               	movlw	32
 11975  1B08  062E               	xorwf	isspace@c,w
 11976  1B09  042F               	iorwf	isspace@c+1,w
 11977  1B0A  1903               	btfsc	3,2
 11978  1B0B  2B0D               	goto	u8411
 11979  1B0C  2B0E               	goto	u8410
 11980  1B0D                     u8411:
 11981  1B0D  2B1E               	goto	l8447
 11982  1B0E                     u8410:
 11983  1B0E                     l8443:
 11984  1B0E  082E               	movf	isspace@c,w
 11985  1B0F  3EF7               	addlw	247
 11986  1B10  00B0               	movwf	??_isspace
 11987  1B11  30FF               	movlw	255
 11988  1B12  3D2F               	addwfc	isspace@c+1,w
 11989  1B13  00B1               	movwf	??_isspace+1
 11990  1B14  3000               	movlw	0
 11991  1B15  0231               	subwf	??_isspace+1,w
 11992  1B16  3005               	movlw	5
 11993  1B17  1903               	skipnz
 11994  1B18  0230               	subwf	??_isspace,w
 11995  1B19  1C03               	skipc
 11996  1B1A  2B1C               	goto	u8421
 11997  1B1B  2B1D               	goto	u8420
 11998  1B1C                     u8421:
 11999  1B1C  2B1E               	goto	l8447
 12000  1B1D                     u8420:
 12001  1B1D                     l8445:
 12002  1B1D  01B2               	clrf	_isspace$2844
 12003  1B1E                     l8447:
 12004  1B1E  0832               	movf	_isspace$2844,w
 12005  1B1F  00B0               	movwf	??_isspace
 12006  1B20  01B1               	clrf	??_isspace+1
 12007  1B21  0830               	movf	??_isspace,w
 12008  1B22  00AE               	movwf	?_isspace
 12009  1B23  0831               	movf	??_isspace+1,w
 12010  1B24  00AF               	movwf	?_isspace+1
 12011  1B25                     l2304:
 12012  1B25  0008               	return
 12013  1B26                     __end_of_isspace:
 12014                           
 12015                           	psect	text37
 12016  1A5C                     __ptext37:	
 12017 ;; *************** function _isdigit *****************
 12018 ;; Defined at:
 12019 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 12020 ;; Parameters:    Size  Location     Type
 12021 ;;  c               2   14[BANK0 ] int 
 12022 ;; Auto vars:     Size  Location     Type
 12023 ;;		None
 12024 ;; Return value:  Size  Location     Type
 12025 ;;                  2   14[BANK0 ] int 
 12026 ;; Registers used:
 12027 ;;		wreg, status,2, status,0
 12028 ;; Tracked objects:
 12029 ;;		On entry : 0/0
 12030 ;;		On exit  : 0/0
 12031 ;;		Unchanged: 0/0
 12032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12033 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12035 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12036 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12037 ;;Total ram usage:        6 bytes
 12038 ;; Hardware stack levels used: 1
 12039 ;; Hardware stack levels required when called: 5
 12040 ;; This function calls:
 12041 ;;		Nothing
 12042 ;; This function is called by:
 12043 ;;		_atoi
 12044 ;; This function uses a non-reentrant model
 12045 ;;
 12046                           
 12047                           
 12048                           ;psect for function _isdigit
 12049  1A5C                     _isdigit:
 12050  1A5C                     l8451:	
 12051                           ;incstack = 0
 12052                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 12053                           
 12054  1A5C  0020               	movlb	0	; select bank0
 12055  1A5D  082E               	movf	isdigit@c,w
 12056  1A5E  3ED0               	addlw	208
 12057  1A5F  00B0               	movwf	??_isdigit
 12058  1A60  30FF               	movlw	255
 12059  1A61  3D2F               	addwfc	isdigit@c+1,w
 12060  1A62  00B1               	movwf	??_isdigit+1
 12061  1A63  3000               	movlw	0
 12062  1A64  0231               	subwf	??_isdigit+1,w
 12063  1A65  300A               	movlw	10
 12064  1A66  1903               	skipnz
 12065  1A67  0230               	subwf	??_isdigit,w
 12066  1A68  1C03               	skipc
 12067  1A69  2A6B               	goto	u8431
 12068  1A6A  2A6D               	goto	u8430
 12069  1A6B                     u8431:
 12070  1A6B  3001               	movlw	1
 12071  1A6C  2A6E               	goto	u8440
 12072  1A6D                     u8430:
 12073  1A6D  3000               	movlw	0
 12074  1A6E                     u8440:
 12075  1A6E  00B2               	movwf	??_isdigit+2
 12076  1A6F  01B3               	clrf	??_isdigit+3
 12077  1A70  0832               	movf	??_isdigit+2,w
 12078  1A71  00AE               	movwf	?_isdigit
 12079  1A72  0833               	movf	??_isdigit+3,w
 12080  1A73  00AF               	movwf	?_isdigit+1
 12081  1A74                     l2296:
 12082  1A74  0008               	return
 12083  1A75                     __end_of_isdigit:
 12084                           
 12085                           	psect	text38
 12086  1AC4                     __ptext38:	
 12087 ;; *************** function ___wmul *****************
 12088 ;; Defined at:
 12089 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 12090 ;; Parameters:    Size  Location     Type
 12091 ;;  multiplier      2   14[BANK0 ] unsigned int 
 12092 ;;  multiplicand    2   16[BANK0 ] unsigned int 
 12093 ;; Auto vars:     Size  Location     Type
 12094 ;;  product         2   18[BANK0 ] unsigned int 
 12095 ;; Return value:  Size  Location     Type
 12096 ;;                  2   14[BANK0 ] unsigned int 
 12097 ;; Registers used:
 12098 ;;		wreg, status,2, status,0
 12099 ;; Tracked objects:
 12100 ;;		On entry : 0/0
 12101 ;;		On exit  : 0/0
 12102 ;;		Unchanged: 0/0
 12103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12104 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12105 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12107 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12108 ;;Total ram usage:        6 bytes
 12109 ;; Hardware stack levels used: 1
 12110 ;; Hardware stack levels required when called: 5
 12111 ;; This function calls:
 12112 ;;		Nothing
 12113 ;; This function is called by:
 12114 ;;		_atoi
 12115 ;; This function uses a non-reentrant model
 12116 ;;
 12117                           
 12118                           
 12119                           ;psect for function ___wmul
 12120  1AC4                     ___wmul:
 12121  1AC4                     l8063:	
 12122                           ;incstack = 0
 12123                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12124                           
 12125  1AC4  0020               	movlb	0	; select bank0
 12126  1AC5  01B2               	clrf	___wmul@product
 12127  1AC6  01B3               	clrf	___wmul@product+1
 12128  1AC7                     l8065:
 12129  1AC7  1C2E               	btfss	___wmul@multiplier,0
 12130  1AC8  2ACA               	goto	u7631
 12131  1AC9  2ACB               	goto	u7630
 12132  1ACA                     u7631:
 12133  1ACA  2ACF               	goto	l1806
 12134  1ACB                     u7630:
 12135  1ACB                     l8067:
 12136  1ACB  0830               	movf	___wmul@multiplicand,w
 12137  1ACC  07B2               	addwf	___wmul@product,f
 12138  1ACD  0831               	movf	___wmul@multiplicand+1,w
 12139  1ACE  3DB3               	addwfc	___wmul@product+1,f
 12140  1ACF                     l1806:
 12141  1ACF  3001               	movlw	1
 12142  1AD0                     u7645:
 12143  1AD0  35B0               	lslf	___wmul@multiplicand,f
 12144  1AD1  0DB1               	rlf	___wmul@multiplicand+1,f
 12145  1AD2  0B89               	decfsz	9,f
 12146  1AD3  2AD0               	goto	u7645
 12147  1AD4                     l8069:
 12148  1AD4  3001               	movlw	1
 12149  1AD5                     u7655:
 12150  1AD5  36AF               	lsrf	___wmul@multiplier+1,f
 12151  1AD6  0CAE               	rrf	___wmul@multiplier,f
 12152  1AD7  0B89               	decfsz	9,f
 12153  1AD8  2AD5               	goto	u7655
 12154  1AD9                     l8071:
 12155  1AD9  082E               	movf	___wmul@multiplier,w
 12156  1ADA  042F               	iorwf	___wmul@multiplier+1,w
 12157  1ADB  1D03               	btfss	3,2
 12158  1ADC  2ADE               	goto	u7661
 12159  1ADD  2ADF               	goto	u7660
 12160  1ADE                     u7661:
 12161  1ADE  2AC7               	goto	l8065
 12162  1ADF                     u7660:
 12163  1ADF                     l8073:
 12164  1ADF  0833               	movf	___wmul@product+1,w
 12165  1AE0  00AF               	movwf	?___wmul+1
 12166  1AE1  0832               	movf	___wmul@product,w
 12167  1AE2  00AE               	movwf	?___wmul
 12168  1AE3                     l1808:
 12169  1AE3  0008               	return
 12170  1AE4                     __end_of___wmul:
 12171                           
 12172                           	psect	text39
 12173  1E6F                     __ptext39:	
 12174 ;; *************** function ___xxtofl *****************
 12175 ;; Defined at:
 12176 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 12177 ;; Parameters:    Size  Location     Type
 12178 ;;  sign            1    wreg     unsigned char 
 12179 ;;  val             4   35[BANK0 ] long 
 12180 ;; Auto vars:     Size  Location     Type
 12181 ;;  sign            1   43[BANK0 ] unsigned char 
 12182 ;;  arg             4   45[BANK0 ] unsigned long 
 12183 ;;  exp             1   44[BANK0 ] unsigned char 
 12184 ;; Return value:  Size  Location     Type
 12185 ;;                  4   35[BANK0 ] unsigned char 
 12186 ;; Registers used:
 12187 ;;		wreg, status,2, status,0
 12188 ;; Tracked objects:
 12189 ;;		On entry : 0/0
 12190 ;;		On exit  : 0/0
 12191 ;;		Unchanged: 0/0
 12192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12193 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12194 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12195 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12196 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12197 ;;Total ram usage:       14 bytes
 12198 ;; Hardware stack levels used: 1
 12199 ;; Hardware stack levels required when called: 5
 12200 ;; This function calls:
 12201 ;;		Nothing
 12202 ;; This function is called by:
 12203 ;;		_ManualHandle
 12204 ;;		_AutoCircleHandle
 12205 ;;		_AutoLineHandle
 12206 ;;		_AutoLineControl
 12207 ;;		_TimeLapseHandle
 12208 ;;		_TimeLapseControl
 12209 ;;		_distance_sensor_bottom
 12210 ;;		_distance_sensor_top
 12211 ;; This function uses a non-reentrant model
 12212 ;;
 12213                           
 12214                           
 12215                           ;psect for function ___xxtofl
 12216  1E6F                     ___xxtofl:
 12217                           
 12218                           ;incstack = 0
 12219                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 12220                           ;___xxtofl@sign stored from wreg
 12221  1E6F  0020               	movlb	0	; select bank0
 12222  1E70  00CB               	movwf	___xxtofl@sign
 12223  1E71                     l8537:
 12224  1E71  084B               	movf	___xxtofl@sign,w
 12225  1E72  1903               	btfsc	3,2
 12226  1E73  2E75               	goto	u8571
 12227  1E74  2E76               	goto	u8570
 12228  1E75                     u8571:
 12229  1E75  2E8A               	goto	l8543
 12230  1E76                     u8570:
 12231  1E76                     l8539:
 12232  1E76  1FC6               	btfss	___xxtofl@val+3,7
 12233  1E77  2E79               	goto	u8581
 12234  1E78  2E7A               	goto	u8580
 12235  1E79                     u8581:
 12236  1E79  2E8A               	goto	l8543
 12237  1E7A                     u8580:
 12238  1E7A                     l8541:
 12239  1E7A  0943               	comf	___xxtofl@val,w
 12240  1E7B  00CD               	movwf	___xxtofl@arg
 12241  1E7C  0944               	comf	___xxtofl@val+1,w
 12242  1E7D  00CE               	movwf	___xxtofl@arg+1
 12243  1E7E  0945               	comf	___xxtofl@val+2,w
 12244  1E7F  00CF               	movwf	___xxtofl@arg+2
 12245  1E80  0946               	comf	___xxtofl@val+3,w
 12246  1E81  00D0               	movwf	___xxtofl@arg+3
 12247  1E82  0ACD               	incf	___xxtofl@arg,f
 12248  1E83  1903               	skipnz
 12249  1E84  0ACE               	incf	___xxtofl@arg+1,f
 12250  1E85  1903               	skipnz
 12251  1E86  0ACF               	incf	___xxtofl@arg+2,f
 12252  1E87  1903               	skipnz
 12253  1E88  0AD0               	incf	___xxtofl@arg+3,f
 12254  1E89  2E92               	goto	l2247
 12255  1E8A                     l8543:
 12256  1E8A  0846               	movf	___xxtofl@val+3,w
 12257  1E8B  00D0               	movwf	___xxtofl@arg+3
 12258  1E8C  0845               	movf	___xxtofl@val+2,w
 12259  1E8D  00CF               	movwf	___xxtofl@arg+2
 12260  1E8E  0844               	movf	___xxtofl@val+1,w
 12261  1E8F  00CE               	movwf	___xxtofl@arg+1
 12262  1E90  0843               	movf	___xxtofl@val,w
 12263  1E91  00CD               	movwf	___xxtofl@arg
 12264  1E92                     l2247:
 12265  1E92  0846               	movf	___xxtofl@val+3,w
 12266  1E93  0445               	iorwf	___xxtofl@val+2,w
 12267  1E94  0444               	iorwf	___xxtofl@val+1,w
 12268  1E95  0443               	iorwf	___xxtofl@val,w
 12269  1E96  1D03               	skipz
 12270  1E97  2E99               	goto	u8591
 12271  1E98  2E9A               	goto	u8590
 12272  1E99                     u8591:
 12273  1E99  2EA3               	goto	l8549
 12274  1E9A                     u8590:
 12275  1E9A                     l8545:
 12276  1E9A  3000               	movlw	0
 12277  1E9B  00C6               	movwf	?___xxtofl+3
 12278  1E9C  3000               	movlw	0
 12279  1E9D  00C5               	movwf	?___xxtofl+2
 12280  1E9E  3000               	movlw	0
 12281  1E9F  00C4               	movwf	?___xxtofl+1
 12282  1EA0  3000               	movlw	0
 12283  1EA1  00C3               	movwf	?___xxtofl
 12284  1EA2  2F1B               	goto	l2249
 12285  1EA3                     l8549:
 12286  1EA3  3096               	movlw	150
 12287  1EA4  00C7               	movwf	??___xxtofl
 12288  1EA5  0847               	movf	??___xxtofl,w
 12289  1EA6  00CC               	movwf	___xxtofl@exp
 12290  1EA7  2EB3               	goto	l8553
 12291  1EA8                     l8551:
 12292  1EA8  3001               	movlw	1
 12293  1EA9  00C7               	movwf	??___xxtofl
 12294  1EAA  0847               	movf	??___xxtofl,w
 12295  1EAB  07CC               	addwf	___xxtofl@exp,f
 12296  1EAC  3001               	movlw	1
 12297  1EAD                     u8605:
 12298  1EAD  36D0               	lsrf	___xxtofl@arg+3,f
 12299  1EAE  0CCF               	rrf	___xxtofl@arg+2,f
 12300  1EAF  0CCE               	rrf	___xxtofl@arg+1,f
 12301  1EB0  0CCD               	rrf	___xxtofl@arg,f
 12302  1EB1  0B89               	decfsz	9,f
 12303  1EB2  2EAD               	goto	u8605
 12304  1EB3                     l8553:
 12305  1EB3  30FE               	movlw	254
 12306  1EB4  0550               	andwf	___xxtofl@arg+3,w
 12307  1EB5  1D03               	btfss	3,2
 12308  1EB6  2EB8               	goto	u8611
 12309  1EB7  2EB9               	goto	u8610
 12310  1EB8                     u8611:
 12311  1EB8  2EA8               	goto	l8551
 12312  1EB9                     u8610:
 12313  1EB9  2ECD               	goto	l2253
 12314  1EBA                     l8555:
 12315  1EBA  3001               	movlw	1
 12316  1EBB  00C7               	movwf	??___xxtofl
 12317  1EBC  0847               	movf	??___xxtofl,w
 12318  1EBD  07CC               	addwf	___xxtofl@exp,f
 12319  1EBE                     l8557:
 12320  1EBE  3001               	movlw	1
 12321  1EBF  07CD               	addwf	___xxtofl@arg,f
 12322  1EC0  3000               	movlw	0
 12323  1EC1  3DCE               	addwfc	___xxtofl@arg+1,f
 12324  1EC2  3000               	movlw	0
 12325  1EC3  3DCF               	addwfc	___xxtofl@arg+2,f
 12326  1EC4  3000               	movlw	0
 12327  1EC5  3DD0               	addwfc	___xxtofl@arg+3,f
 12328  1EC6                     l8559:
 12329  1EC6  3001               	movlw	1
 12330  1EC7                     u8625:
 12331  1EC7  36D0               	lsrf	___xxtofl@arg+3,f
 12332  1EC8  0CCF               	rrf	___xxtofl@arg+2,f
 12333  1EC9  0CCE               	rrf	___xxtofl@arg+1,f
 12334  1ECA  0CCD               	rrf	___xxtofl@arg,f
 12335  1ECB  0B89               	decfsz	9,f
 12336  1ECC  2EC7               	goto	u8625
 12337  1ECD                     l2253:
 12338  1ECD  30FF               	movlw	255
 12339  1ECE  0550               	andwf	___xxtofl@arg+3,w
 12340  1ECF  1D03               	btfss	3,2
 12341  1ED0  2ED2               	goto	u8631
 12342  1ED1  2ED3               	goto	u8630
 12343  1ED2                     u8631:
 12344  1ED2  2EBA               	goto	l8555
 12345  1ED3                     u8630:
 12346  1ED3  2EDD               	goto	l8563
 12347  1ED4                     l8561:
 12348  1ED4  3001               	movlw	1
 12349  1ED5  02CC               	subwf	___xxtofl@exp,f
 12350  1ED6  3001               	movlw	1
 12351  1ED7                     u8645:
 12352  1ED7  35CD               	lslf	___xxtofl@arg,f
 12353  1ED8  0DCE               	rlf	___xxtofl@arg+1,f
 12354  1ED9  0DCF               	rlf	___xxtofl@arg+2,f
 12355  1EDA  0DD0               	rlf	___xxtofl@arg+3,f
 12356  1EDB  0B89               	decfsz	9,f
 12357  1EDC  2ED7               	goto	u8645
 12358  1EDD                     l8563:
 12359  1EDD  1BCF               	btfsc	___xxtofl@arg+2,7
 12360  1EDE  2EE0               	goto	u8651
 12361  1EDF  2EE1               	goto	u8650
 12362  1EE0                     u8651:
 12363  1EE0  2EE7               	goto	l2260
 12364  1EE1                     u8650:
 12365  1EE1                     l8565:
 12366  1EE1  3002               	movlw	2
 12367  1EE2  024C               	subwf	___xxtofl@exp,w
 12368  1EE3  1803               	skipnc
 12369  1EE4  2EE6               	goto	u8661
 12370  1EE5  2EE7               	goto	u8660
 12371  1EE6                     u8661:
 12372  1EE6  2ED4               	goto	l8561
 12373  1EE7                     u8660:
 12374  1EE7                     l2260:
 12375  1EE7  184C               	btfsc	___xxtofl@exp,0
 12376  1EE8  2EEA               	goto	u8671
 12377  1EE9  2EEB               	goto	u8670
 12378  1EEA                     u8671:
 12379  1EEA  2EF3               	goto	l2261
 12380  1EEB                     u8670:
 12381  1EEB                     l8567:
 12382  1EEB  30FF               	movlw	255
 12383  1EEC  05CD               	andwf	___xxtofl@arg,f
 12384  1EED  30FF               	movlw	255
 12385  1EEE  05CE               	andwf	___xxtofl@arg+1,f
 12386  1EEF  307F               	movlw	127
 12387  1EF0  05CF               	andwf	___xxtofl@arg+2,f
 12388  1EF1  30FF               	movlw	255
 12389  1EF2  05D0               	andwf	___xxtofl@arg+3,f
 12390  1EF3                     l2261:
 12391  1EF3  1003               	clrc
 12392  1EF4  0CCC               	rrf	___xxtofl@exp,f
 12393  1EF5                     l8569:
 12394  1EF5  084C               	movf	___xxtofl@exp,w
 12395  1EF6  00C7               	movwf	??___xxtofl
 12396  1EF7  01C8               	clrf	??___xxtofl+1
 12397  1EF8  01C9               	clrf	??___xxtofl+2
 12398  1EF9  01CA               	clrf	??___xxtofl+3
 12399  1EFA  3018               	movlw	24
 12400  1EFB                     u8685:
 12401  1EFB  35C7               	lslf	??___xxtofl,f
 12402  1EFC  0DC8               	rlf	??___xxtofl+1,f
 12403  1EFD  0DC9               	rlf	??___xxtofl+2,f
 12404  1EFE  0DCA               	rlf	??___xxtofl+3,f
 12405  1EFF                     u8680:
 12406  1EFF  0B89               	decfsz	9,f
 12407  1F00  2EFB               	goto	u8685
 12408  1F01  0847               	movf	??___xxtofl,w
 12409  1F02  04CD               	iorwf	___xxtofl@arg,f
 12410  1F03  0848               	movf	??___xxtofl+1,w
 12411  1F04  04CE               	iorwf	___xxtofl@arg+1,f
 12412  1F05  0849               	movf	??___xxtofl+2,w
 12413  1F06  04CF               	iorwf	___xxtofl@arg+2,f
 12414  1F07  084A               	movf	??___xxtofl+3,w
 12415  1F08  04D0               	iorwf	___xxtofl@arg+3,f
 12416  1F09                     l8571:
 12417  1F09  084B               	movf	___xxtofl@sign,w
 12418  1F0A  1903               	btfsc	3,2
 12419  1F0B  2F0D               	goto	u8691
 12420  1F0C  2F0E               	goto	u8690
 12421  1F0D                     u8691:
 12422  1F0D  2F13               	goto	l8577
 12423  1F0E                     u8690:
 12424  1F0E                     l8573:
 12425  1F0E  1FC6               	btfss	___xxtofl@val+3,7
 12426  1F0F  2F11               	goto	u8701
 12427  1F10  2F12               	goto	u8700
 12428  1F11                     u8701:
 12429  1F11  2F13               	goto	l8577
 12430  1F12                     u8700:
 12431  1F12                     l8575:
 12432  1F12  17D0               	bsf	___xxtofl@arg+3,7
 12433  1F13                     l8577:
 12434  1F13  0850               	movf	___xxtofl@arg+3,w
 12435  1F14  00C6               	movwf	?___xxtofl+3
 12436  1F15  084F               	movf	___xxtofl@arg+2,w
 12437  1F16  00C5               	movwf	?___xxtofl+2
 12438  1F17  084E               	movf	___xxtofl@arg+1,w
 12439  1F18  00C4               	movwf	?___xxtofl+1
 12440  1F19  084D               	movf	___xxtofl@arg,w
 12441  1F1A  00C3               	movwf	?___xxtofl
 12442  1F1B                     l2249:
 12443  1F1B  0008               	return
 12444  1F1C                     __end_of___xxtofl:
 12445                           
 12446                           	psect	text40
 12447  1B99                     __ptext40:	
 12448 ;; *************** function ___fltol *****************
 12449 ;; Defined at:
 12450 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 12451 ;; Parameters:    Size  Location     Type
 12452 ;;  f1              4   72[BANK1 ] unsigned char 
 12453 ;; Auto vars:     Size  Location     Type
 12454 ;;  exp1            1   50[BANK0 ] unsigned char 
 12455 ;;  sign1           1   49[BANK0 ] unsigned char 
 12456 ;; Return value:  Size  Location     Type
 12457 ;;                  4   72[BANK1 ] long 
 12458 ;; Registers used:
 12459 ;;		wreg, status,2, status,0
 12460 ;; Tracked objects:
 12461 ;;		On entry : 0/0
 12462 ;;		On exit  : 0/0
 12463 ;;		Unchanged: 0/0
 12464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12465 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12466 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12467 ;;      Temps:          0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
 12468 ;;      Totals:         0       2       4       5       0       0       0       0       0       0       0       0       
      +0       0
 12469 ;;Total ram usage:       11 bytes
 12470 ;; Hardware stack levels used: 1
 12471 ;; Hardware stack levels required when called: 5
 12472 ;; This function calls:
 12473 ;;		Nothing
 12474 ;; This function is called by:
 12475 ;;		_KE
 12476 ;;		_AutoCircleHandle
 12477 ;;		_AutoLineControl
 12478 ;;		_TimeLapseHandle
 12479 ;;		_TimeLapseControl
 12480 ;; This function uses a non-reentrant model
 12481 ;;
 12482                           
 12483                           
 12484                           ;psect for function ___fltol
 12485  1B99                     ___fltol:
 12486  1B99                     l8117:	
 12487                           ;incstack = 0
 12488                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 12489                           
 12490  1B99  1003               	clrc
 12491  1B9A  0021               	movlb	1	; select bank1
 12492  1B9B  0D6A               	rlf	(___fltol@f1+2)^(0+128),w
 12493  1B9C  0D6B               	rlf	(___fltol@f1+3)^(0+128),w
 12494  1B9D  0022               	movlb	2	; select bank2
 12495  1B9E  00C2               	movwf	??___fltol^(0+256)
 12496  1B9F  0842               	movf	??___fltol^(0+256),w
 12497  1BA0  0020               	movlb	0	; select bank0
 12498  1BA1  00D2               	movwf	___fltol@exp1
 12499  1BA2  0852               	movf	___fltol@exp1,w
 12500  1BA3  1D03               	btfss	3,2
 12501  1BA4  2BA6               	goto	u7761
 12502  1BA5  2BA7               	goto	u7760
 12503  1BA6                     u7761:
 12504  1BA6  2BB1               	goto	l8123
 12505  1BA7                     u7760:
 12506  1BA7                     l8119:
 12507  1BA7  3000               	movlw	0
 12508  1BA8  0021               	movlb	1	; select bank1
 12509  1BA9  00EB               	movwf	(?___fltol+3)^(0+128)
 12510  1BAA  3000               	movlw	0
 12511  1BAB  00EA               	movwf	(?___fltol+2)^(0+128)
 12512  1BAC  3000               	movlw	0
 12513  1BAD  00E9               	movwf	(?___fltol+1)^(0+128)
 12514  1BAE  3000               	movlw	0
 12515  1BAF  00E8               	movwf	?___fltol^(0+128)
 12516  1BB0  2C21               	goto	l2000
 12517  1BB1                     l8123:
 12518  1BB1  0021               	movlb	1	; select bank1
 12519  1BB2  0868               	movf	___fltol@f1^(0+128),w
 12520  1BB3  0022               	movlb	2	; select bank2
 12521  1BB4  00C2               	movwf	??___fltol^(0+256)
 12522  1BB5  0021               	movlb	1	; select bank1
 12523  1BB6  0869               	movf	(___fltol@f1+1)^(0+128),w
 12524  1BB7  0022               	movlb	2	; select bank2
 12525  1BB8  00C3               	movwf	(??___fltol^(0+256)+1)
 12526  1BB9  0021               	movlb	1	; select bank1
 12527  1BBA  086A               	movf	(___fltol@f1+2)^(0+128),w
 12528  1BBB  0022               	movlb	2	; select bank2
 12529  1BBC  00C4               	movwf	(??___fltol^(0+256)+2)
 12530  1BBD  0021               	movlb	1	; select bank1
 12531  1BBE  086B               	movf	(___fltol@f1+3)^(0+128),w
 12532  1BBF  0022               	movlb	2	; select bank2
 12533  1BC0  00C5               	movwf	(??___fltol^(0+256)+3)
 12534  1BC1  301F               	movlw	31
 12535  1BC2                     u7775:
 12536  1BC2  36C5               	lsrf	(??___fltol^(0+256)+3),f
 12537  1BC3  0CC4               	rrf	(??___fltol^(0+256)+2),f
 12538  1BC4  0CC3               	rrf	(??___fltol^(0+256)+1),f
 12539  1BC5  0CC2               	rrf	??___fltol^(0+256),f
 12540  1BC6                     u7770:
 12541  1BC6  0B89               	decfsz	9,f
 12542  1BC7  2BC2               	goto	u7775
 12543  1BC8  0842               	movf	??___fltol^(0+256),w
 12544  1BC9  00C6               	movwf	(??___fltol+4)^(0+256)
 12545  1BCA  0846               	movf	(??___fltol+4)^(0+256),w
 12546  1BCB  0020               	movlb	0	; select bank0
 12547  1BCC  00D1               	movwf	___fltol@sign1
 12548  1BCD                     l8125:
 12549  1BCD  0021               	movlb	1	; select bank1
 12550  1BCE  17EA               	bsf	(___fltol@f1^(0+128)+2),7
 12551  1BCF                     l8127:
 12552  1BCF  30FF               	movlw	255
 12553  1BD0  05E8               	andwf	___fltol@f1^(0+128),f
 12554  1BD1  30FF               	movlw	255
 12555  1BD2  05E9               	andwf	(___fltol@f1+1)^(0+128),f
 12556  1BD3  30FF               	movlw	255
 12557  1BD4  05EA               	andwf	(___fltol@f1+2)^(0+128),f
 12558  1BD5  3000               	movlw	0
 12559  1BD6  05EB               	andwf	(___fltol@f1+3)^(0+128),f
 12560  1BD7                     l8129:
 12561  1BD7  3096               	movlw	150
 12562  1BD8  0020               	movlb	0	; select bank0
 12563  1BD9  02D2               	subwf	___fltol@exp1,f
 12564  1BDA                     l8131:
 12565  1BDA  1FD2               	btfss	___fltol@exp1,7
 12566  1BDB  2BDD               	goto	u7781
 12567  1BDC  2BDE               	goto	u7780
 12568  1BDD                     u7781:
 12569  1BDD  2BF9               	goto	l8141
 12570  1BDE                     u7780:
 12571  1BDE                     l8133:
 12572  1BDE  0852               	movf	___fltol@exp1,w
 12573  1BDF  3A80               	xorlw	128
 12574  1BE0  3E97               	addlw	151
 12575  1BE1  1803               	skipnc
 12576  1BE2  2BE4               	goto	u7791
 12577  1BE3  2BE5               	goto	u7790
 12578  1BE4                     u7791:
 12579  1BE4  2BE6               	goto	l8139
 12580  1BE5                     u7790:
 12581  1BE5  2BA7               	goto	l8119
 12582  1BE6                     l8139:
 12583  1BE6  3001               	movlw	1
 12584  1BE7                     u7805:
 12585  1BE7  0021               	movlb	1	; select bank1
 12586  1BE8  36EB               	lsrf	(___fltol@f1+3)^(0+128),f
 12587  1BE9  0CEA               	rrf	(___fltol@f1+2)^(0+128),f
 12588  1BEA  0CE9               	rrf	(___fltol@f1+1)^(0+128),f
 12589  1BEB  0CE8               	rrf	___fltol@f1^(0+128),f
 12590  1BEC  0B89               	decfsz	9,f
 12591  1BED  2BE7               	goto	u7805
 12592  1BEE  3001               	movlw	1
 12593  1BEF  0022               	movlb	2	; select bank2
 12594  1BF0  00C2               	movwf	??___fltol^(0+256)
 12595  1BF1  0842               	movf	??___fltol^(0+256),w
 12596  1BF2  0020               	movlb	0	; select bank0
 12597  1BF3  07D2               	addwf	___fltol@exp1,f
 12598  1BF4  1D03               	btfss	3,2
 12599  1BF5  2BF7               	goto	u7811
 12600  1BF6  2BF8               	goto	u7810
 12601  1BF7                     u7811:
 12602  1BF7  2BE6               	goto	l8139
 12603  1BF8                     u7810:
 12604  1BF8  2C10               	goto	l8149
 12605  1BF9                     l8141:
 12606  1BF9  3020               	movlw	32
 12607  1BFA  0252               	subwf	___fltol@exp1,w
 12608  1BFB  1C03               	skipc
 12609  1BFC  2BFE               	goto	u7821
 12610  1BFD  2BFF               	goto	u7820
 12611  1BFE                     u7821:
 12612  1BFE  2C0B               	goto	l2007
 12613  1BFF                     u7820:
 12614  1BFF  2BA7               	goto	l8119
 12615  1C00                     l8147:
 12616  1C00  3001               	movlw	1
 12617  1C01                     u7835:
 12618  1C01  0021               	movlb	1	; select bank1
 12619  1C02  35E8               	lslf	___fltol@f1^(0+128),f
 12620  1C03  0DE9               	rlf	(___fltol@f1+1)^(0+128),f
 12621  1C04  0DEA               	rlf	(___fltol@f1+2)^(0+128),f
 12622  1C05  0DEB               	rlf	(___fltol@f1+3)^(0+128),f
 12623  1C06  0B89               	decfsz	9,f
 12624  1C07  2C01               	goto	u7835
 12625  1C08  3001               	movlw	1
 12626  1C09  0020               	movlb	0	; select bank0
 12627  1C0A  02D2               	subwf	___fltol@exp1,f
 12628  1C0B                     l2007:
 12629  1C0B  0852               	movf	___fltol@exp1,w
 12630  1C0C  1D03               	btfss	3,2
 12631  1C0D  2C0F               	goto	u7841
 12632  1C0E  2C10               	goto	u7840
 12633  1C0F                     u7841:
 12634  1C0F  2C00               	goto	l8147
 12635  1C10                     u7840:
 12636  1C10                     l8149:
 12637  1C10  0851               	movf	___fltol@sign1,w
 12638  1C11  1903               	btfsc	3,2
 12639  1C12  2C14               	goto	u7851
 12640  1C13  2C15               	goto	u7850
 12641  1C14                     u7851:
 12642  1C14  2C21               	goto	l2010
 12643  1C15                     u7850:
 12644  1C15                     l8151:
 12645  1C15  0021               	movlb	1	; select bank1
 12646  1C16  09E8               	comf	___fltol@f1^(0+128),f
 12647  1C17  09E9               	comf	(___fltol@f1+1)^(0+128),f
 12648  1C18  09EA               	comf	(___fltol@f1+2)^(0+128),f
 12649  1C19  09EB               	comf	(___fltol@f1+3)^(0+128),f
 12650  1C1A  0AE8               	incf	___fltol@f1^(0+128),f
 12651  1C1B  1903               	skipnz
 12652  1C1C  0AE9               	incf	(___fltol@f1+1)^(0+128),f
 12653  1C1D  1903               	skipnz
 12654  1C1E  0AEA               	incf	(___fltol@f1+2)^(0+128),f
 12655  1C1F  1903               	skipnz
 12656  1C20  0AEB               	incf	(___fltol@f1+3)^(0+128),f
 12657  1C21                     l2010:
 12658  1C21                     l2000:
 12659  1C21  0008               	return
 12660  1C22                     __end_of___fltol:
 12661                           
 12662                           	psect	text41
 12663  0D7C                     __ptext41:	
 12664 ;; *************** function ___flmul *****************
 12665 ;; Defined at:
 12666 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 12667 ;; Parameters:    Size  Location     Type
 12668 ;;  b               4    0[BANK1 ] long 
 12669 ;;  a               4    4[BANK1 ] long 
 12670 ;; Auto vars:     Size  Location     Type
 12671 ;;  prod            4   20[BANK1 ] struct .
 12672 ;;  grs             4   15[BANK1 ] unsigned long 
 12673 ;;  temp            2   24[BANK1 ] struct .
 12674 ;;  bexp            1   19[BANK1 ] unsigned char 
 12675 ;;  aexp            1   14[BANK1 ] unsigned char 
 12676 ;;  sign            1   13[BANK1 ] unsigned char 
 12677 ;; Return value:  Size  Location     Type
 12678 ;;                  4    0[BANK1 ] unsigned char 
 12679 ;; Registers used:
 12680 ;;		wreg, status,2, status,0, pclath, cstack
 12681 ;; Tracked objects:
 12682 ;;		On entry : 0/0
 12683 ;;		On exit  : 0/0
 12684 ;;		Unchanged: 0/0
 12685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12686 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12687 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 12688 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12689 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
 12690 ;;Total ram usage:       26 bytes
 12691 ;; Hardware stack levels used: 1
 12692 ;; Hardware stack levels required when called: 6
 12693 ;; This function calls:
 12694 ;;		__Umul8_16
 12695 ;; This function is called by:
 12696 ;;		_KE
 12697 ;;		_AutoCircleHandle
 12698 ;;		_AutoLineControl
 12699 ;;		_TimeLapseHandle
 12700 ;;		_distance_sensor_bottom
 12701 ;;		_distance_sensor_top
 12702 ;;		_PID
 12703 ;; This function uses a non-reentrant model
 12704 ;;
 12705                           
 12706                           
 12707                           ;psect for function ___flmul
 12708  0D7C                     ___flmul:
 12709  0D7C                     l8299:	
 12710                           ;incstack = 0
 12711                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 12712                           
 12713  0D7C  0021               	movlb	1	; select bank1
 12714  0D7D  0823               	movf	(___flmul@b^(0+128)+3),w
 12715  0D7E  3980               	andlw	128
 12716  0D7F  00A8               	movwf	??___flmul^(0+128)
 12717  0D80  0828               	movf	??___flmul^(0+128),w
 12718  0D81  00AD               	movwf	___flmul@sign^(0+128)
 12719  0D82                     l8301:
 12720  0D82  3523               	lslf	(___flmul@b^(0+128)+3),w
 12721  0D83  00A8               	movwf	??___flmul^(0+128)
 12722  0D84  0828               	movf	??___flmul^(0+128),w
 12723  0D85  00B3               	movwf	___flmul@bexp^(0+128)
 12724  0D86                     l8303:
 12725  0D86  1FA2               	btfss	(___flmul@b^(0+128)+2),7
 12726  0D87  2D89               	goto	u8151
 12727  0D88  2D8A               	goto	u8150
 12728  0D89                     u8151:
 12729  0D89  2D8B               	goto	l8307
 12730  0D8A                     u8150:
 12731  0D8A                     l8305:
 12732  0D8A  1433               	bsf	___flmul@bexp^(0+128),0
 12733  0D8B                     l8307:
 12734  0D8B  0833               	movf	___flmul@bexp^(0+128),w
 12735  0D8C  1903               	btfsc	3,2
 12736  0D8D  2D8F               	goto	u8161
 12737  0D8E  2D90               	goto	u8160
 12738  0D8F                     u8161:
 12739  0D8F  2D9F               	goto	l8315
 12740  0D90                     u8160:
 12741  0D90                     l8309:
 12742  0D90  0A33               	incf	___flmul@bexp^(0+128),w
 12743  0D91  1D03               	btfss	3,2
 12744  0D92  2D94               	goto	u8171
 12745  0D93  2D95               	goto	u8170
 12746  0D94                     u8171:
 12747  0D94  2D9D               	goto	l8313
 12748  0D95                     u8170:
 12749  0D95                     l8311:
 12750  0D95  3000               	movlw	0
 12751  0D96  00A3               	movwf	(___flmul@b+3)^(0+128)
 12752  0D97  3000               	movlw	0
 12753  0D98  00A2               	movwf	(___flmul@b+2)^(0+128)
 12754  0D99  3000               	movlw	0
 12755  0D9A  00A1               	movwf	(___flmul@b+1)^(0+128)
 12756  0D9B  3000               	movlw	0
 12757  0D9C  00A0               	movwf	___flmul@b^(0+128)
 12758  0D9D                     l8313:
 12759  0D9D  17A2               	bsf	(___flmul@b^(0+128)+2),7
 12760  0D9E  2DA7               	goto	l8317
 12761  0D9F                     l8315:
 12762  0D9F  3000               	movlw	0
 12763  0DA0  00A3               	movwf	(___flmul@b+3)^(0+128)
 12764  0DA1  3000               	movlw	0
 12765  0DA2  00A2               	movwf	(___flmul@b+2)^(0+128)
 12766  0DA3  3000               	movlw	0
 12767  0DA4  00A1               	movwf	(___flmul@b+1)^(0+128)
 12768  0DA5  3000               	movlw	0
 12769  0DA6  00A0               	movwf	___flmul@b^(0+128)
 12770  0DA7                     l8317:
 12771  0DA7  0827               	movf	(___flmul@a^(0+128)+3),w
 12772  0DA8  3980               	andlw	128
 12773  0DA9  00A8               	movwf	??___flmul^(0+128)
 12774  0DAA  0828               	movf	??___flmul^(0+128),w
 12775  0DAB  06AD               	xorwf	___flmul@sign^(0+128),f
 12776  0DAC                     l8319:
 12777  0DAC  3527               	lslf	(___flmul@a^(0+128)+3),w
 12778  0DAD  00A8               	movwf	??___flmul^(0+128)
 12779  0DAE  0828               	movf	??___flmul^(0+128),w
 12780  0DAF  00AE               	movwf	___flmul@aexp^(0+128)
 12781  0DB0                     l8321:
 12782  0DB0  1FA6               	btfss	(___flmul@a^(0+128)+2),7
 12783  0DB1  2DB3               	goto	u8181
 12784  0DB2  2DB4               	goto	u8180
 12785  0DB3                     u8181:
 12786  0DB3  2DB5               	goto	l8325
 12787  0DB4                     u8180:
 12788  0DB4                     l8323:
 12789  0DB4  142E               	bsf	___flmul@aexp^(0+128),0
 12790  0DB5                     l8325:
 12791  0DB5  082E               	movf	___flmul@aexp^(0+128),w
 12792  0DB6  1903               	btfsc	3,2
 12793  0DB7  2DB9               	goto	u8191
 12794  0DB8  2DBA               	goto	u8190
 12795  0DB9                     u8191:
 12796  0DB9  2DC9               	goto	l8333
 12797  0DBA                     u8190:
 12798  0DBA                     l8327:
 12799  0DBA  0A2E               	incf	___flmul@aexp^(0+128),w
 12800  0DBB  1D03               	btfss	3,2
 12801  0DBC  2DBE               	goto	u8201
 12802  0DBD  2DBF               	goto	u8200
 12803  0DBE                     u8201:
 12804  0DBE  2DC7               	goto	l8331
 12805  0DBF                     u8200:
 12806  0DBF                     l8329:
 12807  0DBF  3000               	movlw	0
 12808  0DC0  00A7               	movwf	(___flmul@a+3)^(0+128)
 12809  0DC1  3000               	movlw	0
 12810  0DC2  00A6               	movwf	(___flmul@a+2)^(0+128)
 12811  0DC3  3000               	movlw	0
 12812  0DC4  00A5               	movwf	(___flmul@a+1)^(0+128)
 12813  0DC5  3000               	movlw	0
 12814  0DC6  00A4               	movwf	___flmul@a^(0+128)
 12815  0DC7                     l8331:
 12816  0DC7  17A6               	bsf	(___flmul@a^(0+128)+2),7
 12817  0DC8  2DD1               	goto	l8335
 12818  0DC9                     l8333:
 12819  0DC9  3000               	movlw	0
 12820  0DCA  00A7               	movwf	(___flmul@a+3)^(0+128)
 12821  0DCB  3000               	movlw	0
 12822  0DCC  00A6               	movwf	(___flmul@a+2)^(0+128)
 12823  0DCD  3000               	movlw	0
 12824  0DCE  00A5               	movwf	(___flmul@a+1)^(0+128)
 12825  0DCF  3000               	movlw	0
 12826  0DD0  00A4               	movwf	___flmul@a^(0+128)
 12827  0DD1                     l8335:
 12828  0DD1  082E               	movf	___flmul@aexp^(0+128),w
 12829  0DD2  1903               	btfsc	3,2
 12830  0DD3  2DD5               	goto	u8211
 12831  0DD4  2DD6               	goto	u8210
 12832  0DD5                     u8211:
 12833  0DD5  2DDB               	goto	l8339
 12834  0DD6                     u8210:
 12835  0DD6                     l8337:
 12836  0DD6  0833               	movf	___flmul@bexp^(0+128),w
 12837  0DD7  1D03               	btfss	3,2
 12838  0DD8  2DDA               	goto	u8221
 12839  0DD9  2DDB               	goto	u8220
 12840  0DDA                     u8221:
 12841  0DDA  2DE4               	goto	l8343
 12842  0DDB                     u8220:
 12843  0DDB                     l8339:
 12844  0DDB  3000               	movlw	0
 12845  0DDC  00A3               	movwf	(?___flmul+3)^(0+128)
 12846  0DDD  3000               	movlw	0
 12847  0DDE  00A2               	movwf	(?___flmul+2)^(0+128)
 12848  0DDF  3000               	movlw	0
 12849  0DE0  00A1               	movwf	(?___flmul+1)^(0+128)
 12850  0DE1  3000               	movlw	0
 12851  0DE2  00A0               	movwf	?___flmul^(0+128)
 12852  0DE3  2FFF               	goto	l2203
 12853  0DE4                     l8343:
 12854  0DE4  0820               	movf	___flmul@b^(0+128),w
 12855  0DE5  00A8               	movwf	??___flmul^(0+128)
 12856  0DE6  0828               	movf	??___flmul^(0+128),w
 12857  0DE7  0020               	movlb	0	; select bank0
 12858  0DE8  00AE               	movwf	__Umul8_16@multiplicand
 12859  0DE9  0021               	movlb	1	; select bank1
 12860  0DEA  0826               	movf	(___flmul@a^(0+128)+2),w
 12861  0DEB  319B  2326  318D   	fcall	__Umul8_16
 12862  0DEE  0020               	movlb	0	; select bank0
 12863  0DEF  082F               	movf	?__Umul8_16+1,w
 12864  0DF0  0021               	movlb	1	; select bank1
 12865  0DF1  00B9               	movwf	(___flmul@temp+1)^(0+128)
 12866  0DF2  0020               	movlb	0	; select bank0
 12867  0DF3  082E               	movf	?__Umul8_16,w
 12868  0DF4  0021               	movlb	1	; select bank1
 12869  0DF5  00B8               	movwf	___flmul@temp^(0+128)
 12870  0DF6                     l8345:
 12871  0DF6  0838               	movf	___flmul@temp^(0+128),w
 12872  0DF7  00A8               	movwf	??___flmul^(0+128)
 12873  0DF8  01A9               	clrf	(??___flmul^(0+128)+1)
 12874  0DF9  01AA               	clrf	(??___flmul^(0+128)+2)
 12875  0DFA  01AB               	clrf	(??___flmul^(0+128)+3)
 12876  0DFB  082B               	movf	(??___flmul+3)^(0+128),w
 12877  0DFC  00B2               	movwf	(___flmul@grs+3)^(0+128)
 12878  0DFD  082A               	movf	(??___flmul+2)^(0+128),w
 12879  0DFE  00B1               	movwf	(___flmul@grs+2)^(0+128)
 12880  0DFF  0829               	movf	(??___flmul+1)^(0+128),w
 12881  0E00  00B0               	movwf	(___flmul@grs+1)^(0+128)
 12882  0E01  0828               	movf	??___flmul^(0+128),w
 12883  0E02  00AF               	movwf	___flmul@grs^(0+128)
 12884  0E03                     l8347:
 12885  0E03  0839               	movf	(___flmul@temp^(0+128)+1),w
 12886  0E04  00A8               	movwf	??___flmul^(0+128)
 12887  0E05  01A9               	clrf	(??___flmul^(0+128)+1)
 12888  0E06  01AA               	clrf	(??___flmul^(0+128)+2)
 12889  0E07  01AB               	clrf	(??___flmul^(0+128)+3)
 12890  0E08  082B               	movf	(??___flmul+3)^(0+128),w
 12891  0E09  00B7               	movwf	(___flmul@prod+3)^(0+128)
 12892  0E0A  082A               	movf	(??___flmul+2)^(0+128),w
 12893  0E0B  00B6               	movwf	(___flmul@prod+2)^(0+128)
 12894  0E0C  0829               	movf	(??___flmul+1)^(0+128),w
 12895  0E0D  00B5               	movwf	(___flmul@prod+1)^(0+128)
 12896  0E0E  0828               	movf	??___flmul^(0+128),w
 12897  0E0F  00B4               	movwf	___flmul@prod^(0+128)
 12898  0E10  0821               	movf	(___flmul@b^(0+128)+1),w
 12899  0E11  00A8               	movwf	??___flmul^(0+128)
 12900  0E12  0828               	movf	??___flmul^(0+128),w
 12901  0E13  0020               	movlb	0	; select bank0
 12902  0E14  00AE               	movwf	__Umul8_16@multiplicand
 12903  0E15  0021               	movlb	1	; select bank1
 12904  0E16  0825               	movf	(___flmul@a^(0+128)+1),w
 12905  0E17  319B  2326  318D   	fcall	__Umul8_16
 12906  0E1A  0020               	movlb	0	; select bank0
 12907  0E1B  082F               	movf	?__Umul8_16+1,w
 12908  0E1C  0021               	movlb	1	; select bank1
 12909  0E1D  00B9               	movwf	(___flmul@temp+1)^(0+128)
 12910  0E1E  0020               	movlb	0	; select bank0
 12911  0E1F  082E               	movf	?__Umul8_16,w
 12912  0E20  0021               	movlb	1	; select bank1
 12913  0E21  00B8               	movwf	___flmul@temp^(0+128)
 12914  0E22                     l8349:
 12915  0E22  0838               	movf	___flmul@temp^(0+128),w
 12916  0E23  00A8               	movwf	??___flmul^(0+128)
 12917  0E24  01A9               	clrf	(??___flmul^(0+128)+1)
 12918  0E25  01AA               	clrf	(??___flmul^(0+128)+2)
 12919  0E26  01AB               	clrf	(??___flmul^(0+128)+3)
 12920  0E27  0828               	movf	??___flmul^(0+128),w
 12921  0E28  07AF               	addwf	___flmul@grs^(0+128),f
 12922  0E29  0829               	movf	(??___flmul+1)^(0+128),w
 12923  0E2A  3DB0               	addwfc	(___flmul@grs+1)^(0+128),f
 12924  0E2B  082A               	movf	(??___flmul+2)^(0+128),w
 12925  0E2C  3DB1               	addwfc	(___flmul@grs+2)^(0+128),f
 12926  0E2D  082B               	movf	(??___flmul+3)^(0+128),w
 12927  0E2E  3DB2               	addwfc	(___flmul@grs+3)^(0+128),f
 12928  0E2F                     l8351:
 12929  0E2F  0839               	movf	(___flmul@temp^(0+128)+1),w
 12930  0E30  00A8               	movwf	??___flmul^(0+128)
 12931  0E31  01A9               	clrf	(??___flmul^(0+128)+1)
 12932  0E32  01AA               	clrf	(??___flmul^(0+128)+2)
 12933  0E33  01AB               	clrf	(??___flmul^(0+128)+3)
 12934  0E34  0828               	movf	??___flmul^(0+128),w
 12935  0E35  07B4               	addwf	___flmul@prod^(0+128),f
 12936  0E36  0829               	movf	(??___flmul+1)^(0+128),w
 12937  0E37  3DB5               	addwfc	(___flmul@prod+1)^(0+128),f
 12938  0E38  082A               	movf	(??___flmul+2)^(0+128),w
 12939  0E39  3DB6               	addwfc	(___flmul@prod+2)^(0+128),f
 12940  0E3A  082B               	movf	(??___flmul+3)^(0+128),w
 12941  0E3B  3DB7               	addwfc	(___flmul@prod+3)^(0+128),f
 12942  0E3C  0822               	movf	(___flmul@b^(0+128)+2),w
 12943  0E3D  00A8               	movwf	??___flmul^(0+128)
 12944  0E3E  0828               	movf	??___flmul^(0+128),w
 12945  0E3F  0020               	movlb	0	; select bank0
 12946  0E40  00AE               	movwf	__Umul8_16@multiplicand
 12947  0E41  0021               	movlb	1	; select bank1
 12948  0E42  0824               	movf	___flmul@a^(0+128),w
 12949  0E43  319B  2326  318D   	fcall	__Umul8_16
 12950  0E46  0020               	movlb	0	; select bank0
 12951  0E47  082F               	movf	?__Umul8_16+1,w
 12952  0E48  0021               	movlb	1	; select bank1
 12953  0E49  00B9               	movwf	(___flmul@temp+1)^(0+128)
 12954  0E4A  0020               	movlb	0	; select bank0
 12955  0E4B  082E               	movf	?__Umul8_16,w
 12956  0E4C  0021               	movlb	1	; select bank1
 12957  0E4D  00B8               	movwf	___flmul@temp^(0+128)
 12958  0E4E                     l8353:
 12959  0E4E  0838               	movf	___flmul@temp^(0+128),w
 12960  0E4F  00A8               	movwf	??___flmul^(0+128)
 12961  0E50  01A9               	clrf	(??___flmul^(0+128)+1)
 12962  0E51  01AA               	clrf	(??___flmul^(0+128)+2)
 12963  0E52  01AB               	clrf	(??___flmul^(0+128)+3)
 12964  0E53  0828               	movf	??___flmul^(0+128),w
 12965  0E54  07AF               	addwf	___flmul@grs^(0+128),f
 12966  0E55  0829               	movf	(??___flmul+1)^(0+128),w
 12967  0E56  3DB0               	addwfc	(___flmul@grs+1)^(0+128),f
 12968  0E57  082A               	movf	(??___flmul+2)^(0+128),w
 12969  0E58  3DB1               	addwfc	(___flmul@grs+2)^(0+128),f
 12970  0E59  082B               	movf	(??___flmul+3)^(0+128),w
 12971  0E5A  3DB2               	addwfc	(___flmul@grs+3)^(0+128),f
 12972  0E5B                     l8355:
 12973  0E5B  0839               	movf	(___flmul@temp^(0+128)+1),w
 12974  0E5C  00A8               	movwf	??___flmul^(0+128)
 12975  0E5D  01A9               	clrf	(??___flmul^(0+128)+1)
 12976  0E5E  01AA               	clrf	(??___flmul^(0+128)+2)
 12977  0E5F  01AB               	clrf	(??___flmul^(0+128)+3)
 12978  0E60  0828               	movf	??___flmul^(0+128),w
 12979  0E61  07B4               	addwf	___flmul@prod^(0+128),f
 12980  0E62  0829               	movf	(??___flmul+1)^(0+128),w
 12981  0E63  3DB5               	addwfc	(___flmul@prod+1)^(0+128),f
 12982  0E64  082A               	movf	(??___flmul+2)^(0+128),w
 12983  0E65  3DB6               	addwfc	(___flmul@prod+2)^(0+128),f
 12984  0E66  082B               	movf	(??___flmul+3)^(0+128),w
 12985  0E67  3DB7               	addwfc	(___flmul@prod+3)^(0+128),f
 12986  0E68                     l8357:
 12987  0E68  3008               	movlw	8
 12988  0E69                     u8235:
 12989  0E69  35AF               	lslf	___flmul@grs^(0+128),f
 12990  0E6A  0DB0               	rlf	(___flmul@grs+1)^(0+128),f
 12991  0E6B  0DB1               	rlf	(___flmul@grs+2)^(0+128),f
 12992  0E6C  0DB2               	rlf	(___flmul@grs+3)^(0+128),f
 12993  0E6D  0B89               	decfsz	9,f
 12994  0E6E  2E69               	goto	u8235
 12995  0E6F                     l8359:
 12996  0E6F  0821               	movf	(___flmul@b^(0+128)+1),w
 12997  0E70  00A8               	movwf	??___flmul^(0+128)
 12998  0E71  0828               	movf	??___flmul^(0+128),w
 12999  0E72  0020               	movlb	0	; select bank0
 13000  0E73  00AE               	movwf	__Umul8_16@multiplicand
 13001  0E74  0021               	movlb	1	; select bank1
 13002  0E75  0824               	movf	___flmul@a^(0+128),w
 13003  0E76  319B  2326  318D   	fcall	__Umul8_16
 13004  0E79  0020               	movlb	0	; select bank0
 13005  0E7A  082F               	movf	?__Umul8_16+1,w
 13006  0E7B  0021               	movlb	1	; select bank1
 13007  0E7C  00B9               	movwf	(___flmul@temp+1)^(0+128)
 13008  0E7D  0020               	movlb	0	; select bank0
 13009  0E7E  082E               	movf	?__Umul8_16,w
 13010  0E7F  0021               	movlb	1	; select bank1
 13011  0E80  00B8               	movwf	___flmul@temp^(0+128)
 13012  0E81                     l8361:
 13013  0E81  0838               	movf	___flmul@temp^(0+128),w
 13014  0E82  07AF               	addwf	___flmul@grs^(0+128),f
 13015  0E83  0839               	movf	(___flmul@temp+1)^(0+128),w
 13016  0E84  3DB0               	addwfc	(___flmul@grs+1)^(0+128),f
 13017  0E85  3000               	movlw	0
 13018  0E86  3DB1               	addwfc	(___flmul@grs+2)^(0+128),f
 13019  0E87  3DB2               	addwfc	(___flmul@grs+3)^(0+128),f
 13020  0E88                     l8363:
 13021  0E88  0820               	movf	___flmul@b^(0+128),w
 13022  0E89  00A8               	movwf	??___flmul^(0+128)
 13023  0E8A  0828               	movf	??___flmul^(0+128),w
 13024  0E8B  0020               	movlb	0	; select bank0
 13025  0E8C  00AE               	movwf	__Umul8_16@multiplicand
 13026  0E8D  0021               	movlb	1	; select bank1
 13027  0E8E  0825               	movf	(___flmul@a^(0+128)+1),w
 13028  0E8F  319B  2326  318D   	fcall	__Umul8_16
 13029  0E92  0020               	movlb	0	; select bank0
 13030  0E93  082F               	movf	?__Umul8_16+1,w
 13031  0E94  0021               	movlb	1	; select bank1
 13032  0E95  00B9               	movwf	(___flmul@temp+1)^(0+128)
 13033  0E96  0020               	movlb	0	; select bank0
 13034  0E97  082E               	movf	?__Umul8_16,w
 13035  0E98  0021               	movlb	1	; select bank1
 13036  0E99  00B8               	movwf	___flmul@temp^(0+128)
 13037  0E9A                     l8365:
 13038  0E9A  0838               	movf	___flmul@temp^(0+128),w
 13039  0E9B  07AF               	addwf	___flmul@grs^(0+128),f
 13040  0E9C  0839               	movf	(___flmul@temp+1)^(0+128),w
 13041  0E9D  3DB0               	addwfc	(___flmul@grs+1)^(0+128),f
 13042  0E9E  3000               	movlw	0
 13043  0E9F  3DB1               	addwfc	(___flmul@grs+2)^(0+128),f
 13044  0EA0  3DB2               	addwfc	(___flmul@grs+3)^(0+128),f
 13045  0EA1                     l8367:
 13046  0EA1  3008               	movlw	8
 13047  0EA2                     u8245:
 13048  0EA2  35AF               	lslf	___flmul@grs^(0+128),f
 13049  0EA3  0DB0               	rlf	(___flmul@grs+1)^(0+128),f
 13050  0EA4  0DB1               	rlf	(___flmul@grs+2)^(0+128),f
 13051  0EA5  0DB2               	rlf	(___flmul@grs+3)^(0+128),f
 13052  0EA6  0B89               	decfsz	9,f
 13053  0EA7  2EA2               	goto	u8245
 13054  0EA8  0820               	movf	___flmul@b^(0+128),w
 13055  0EA9  00A8               	movwf	??___flmul^(0+128)
 13056  0EAA  0828               	movf	??___flmul^(0+128),w
 13057  0EAB  0020               	movlb	0	; select bank0
 13058  0EAC  00AE               	movwf	__Umul8_16@multiplicand
 13059  0EAD  0021               	movlb	1	; select bank1
 13060  0EAE  0824               	movf	___flmul@a^(0+128),w
 13061  0EAF  319B  2326  318D   	fcall	__Umul8_16
 13062  0EB2  0020               	movlb	0	; select bank0
 13063  0EB3  082F               	movf	?__Umul8_16+1,w
 13064  0EB4  0021               	movlb	1	; select bank1
 13065  0EB5  00B9               	movwf	(___flmul@temp+1)^(0+128)
 13066  0EB6  0020               	movlb	0	; select bank0
 13067  0EB7  082E               	movf	?__Umul8_16,w
 13068  0EB8  0021               	movlb	1	; select bank1
 13069  0EB9  00B8               	movwf	___flmul@temp^(0+128)
 13070  0EBA                     l8369:
 13071  0EBA  0838               	movf	___flmul@temp^(0+128),w
 13072  0EBB  07AF               	addwf	___flmul@grs^(0+128),f
 13073  0EBC  0839               	movf	(___flmul@temp+1)^(0+128),w
 13074  0EBD  3DB0               	addwfc	(___flmul@grs+1)^(0+128),f
 13075  0EBE  3000               	movlw	0
 13076  0EBF  3DB1               	addwfc	(___flmul@grs+2)^(0+128),f
 13077  0EC0  3DB2               	addwfc	(___flmul@grs+3)^(0+128),f
 13078  0EC1                     l8371:
 13079  0EC1  0821               	movf	(___flmul@b^(0+128)+1),w
 13080  0EC2  00A8               	movwf	??___flmul^(0+128)
 13081  0EC3  0828               	movf	??___flmul^(0+128),w
 13082  0EC4  0020               	movlb	0	; select bank0
 13083  0EC5  00AE               	movwf	__Umul8_16@multiplicand
 13084  0EC6  0021               	movlb	1	; select bank1
 13085  0EC7  0826               	movf	(___flmul@a^(0+128)+2),w
 13086  0EC8  319B  2326  318D   	fcall	__Umul8_16
 13087  0ECB  0020               	movlb	0	; select bank0
 13088  0ECC  082F               	movf	?__Umul8_16+1,w
 13089  0ECD  0021               	movlb	1	; select bank1
 13090  0ECE  00B9               	movwf	(___flmul@temp+1)^(0+128)
 13091  0ECF  0020               	movlb	0	; select bank0
 13092  0ED0  082E               	movf	?__Umul8_16,w
 13093  0ED1  0021               	movlb	1	; select bank1
 13094  0ED2  00B8               	movwf	___flmul@temp^(0+128)
 13095  0ED3  0838               	movf	___flmul@temp^(0+128),w
 13096  0ED4  07B4               	addwf	___flmul@prod^(0+128),f
 13097  0ED5  0839               	movf	(___flmul@temp+1)^(0+128),w
 13098  0ED6  3DB5               	addwfc	(___flmul@prod+1)^(0+128),f
 13099  0ED7  3000               	movlw	0
 13100  0ED8  3DB6               	addwfc	(___flmul@prod+2)^(0+128),f
 13101  0ED9  3DB7               	addwfc	(___flmul@prod+3)^(0+128),f
 13102  0EDA                     l8373:
 13103  0EDA  0822               	movf	(___flmul@b^(0+128)+2),w
 13104  0EDB  00A8               	movwf	??___flmul^(0+128)
 13105  0EDC  0828               	movf	??___flmul^(0+128),w
 13106  0EDD  0020               	movlb	0	; select bank0
 13107  0EDE  00AE               	movwf	__Umul8_16@multiplicand
 13108  0EDF  0021               	movlb	1	; select bank1
 13109  0EE0  0825               	movf	(___flmul@a^(0+128)+1),w
 13110  0EE1  319B  2326  318D   	fcall	__Umul8_16
 13111  0EE4  0020               	movlb	0	; select bank0
 13112  0EE5  082F               	movf	?__Umul8_16+1,w
 13113  0EE6  0021               	movlb	1	; select bank1
 13114  0EE7  00B9               	movwf	(___flmul@temp+1)^(0+128)
 13115  0EE8  0020               	movlb	0	; select bank0
 13116  0EE9  082E               	movf	?__Umul8_16,w
 13117  0EEA  0021               	movlb	1	; select bank1
 13118  0EEB  00B8               	movwf	___flmul@temp^(0+128)
 13119  0EEC                     l8375:
 13120  0EEC  0838               	movf	___flmul@temp^(0+128),w
 13121  0EED  07B4               	addwf	___flmul@prod^(0+128),f
 13122  0EEE  0839               	movf	(___flmul@temp+1)^(0+128),w
 13123  0EEF  3DB5               	addwfc	(___flmul@prod+1)^(0+128),f
 13124  0EF0  3000               	movlw	0
 13125  0EF1  3DB6               	addwfc	(___flmul@prod+2)^(0+128),f
 13126  0EF2  3DB7               	addwfc	(___flmul@prod+3)^(0+128),f
 13127  0EF3  0822               	movf	(___flmul@b^(0+128)+2),w
 13128  0EF4  00A8               	movwf	??___flmul^(0+128)
 13129  0EF5  0828               	movf	??___flmul^(0+128),w
 13130  0EF6  0020               	movlb	0	; select bank0
 13131  0EF7  00AE               	movwf	__Umul8_16@multiplicand
 13132  0EF8  0021               	movlb	1	; select bank1
 13133  0EF9  0826               	movf	(___flmul@a^(0+128)+2),w
 13134  0EFA  319B  2326  318D   	fcall	__Umul8_16
 13135  0EFD  0020               	movlb	0	; select bank0
 13136  0EFE  082F               	movf	?__Umul8_16+1,w
 13137  0EFF  0021               	movlb	1	; select bank1
 13138  0F00  00B9               	movwf	(___flmul@temp+1)^(0+128)
 13139  0F01  0020               	movlb	0	; select bank0
 13140  0F02  082E               	movf	?__Umul8_16,w
 13141  0F03  0021               	movlb	1	; select bank1
 13142  0F04  00B8               	movwf	___flmul@temp^(0+128)
 13143  0F05                     l8377:
 13144  0F05  0838               	movf	___flmul@temp^(0+128),w
 13145  0F06  00A8               	movwf	??___flmul^(0+128)
 13146  0F07  0839               	movf	(___flmul@temp+1)^(0+128),w
 13147  0F08  00A9               	movwf	(??___flmul^(0+128)+1)
 13148  0F09  01AA               	clrf	(??___flmul^(0+128)+2)
 13149  0F0A  01AB               	clrf	(??___flmul^(0+128)+3)
 13150  0F0B  3008               	movlw	8
 13151  0F0C                     u8255:
 13152  0F0C  35A8               	lslf	??___flmul^(0+128),f
 13153  0F0D  0DA9               	rlf	(??___flmul^(0+128)+1),f
 13154  0F0E  0DAA               	rlf	(??___flmul^(0+128)+2),f
 13155  0F0F  0DAB               	rlf	(??___flmul^(0+128)+3),f
 13156  0F10                     u8250:
 13157  0F10  0B89               	decfsz	9,f
 13158  0F11  2F0C               	goto	u8255
 13159  0F12  0828               	movf	??___flmul^(0+128),w
 13160  0F13  07B4               	addwf	___flmul@prod^(0+128),f
 13161  0F14  0829               	movf	(??___flmul+1)^(0+128),w
 13162  0F15  3DB5               	addwfc	(___flmul@prod+1)^(0+128),f
 13163  0F16  082A               	movf	(??___flmul+2)^(0+128),w
 13164  0F17  3DB6               	addwfc	(___flmul@prod+2)^(0+128),f
 13165  0F18  082B               	movf	(??___flmul+3)^(0+128),w
 13166  0F19  3DB7               	addwfc	(___flmul@prod+3)^(0+128),f
 13167  0F1A                     l8379:
 13168  0F1A  082F               	movf	___flmul@grs^(0+128),w
 13169  0F1B  00A8               	movwf	??___flmul^(0+128)
 13170  0F1C  0830               	movf	(___flmul@grs+1)^(0+128),w
 13171  0F1D  00A9               	movwf	(??___flmul^(0+128)+1)
 13172  0F1E  0831               	movf	(___flmul@grs+2)^(0+128),w
 13173  0F1F  00AA               	movwf	(??___flmul^(0+128)+2)
 13174  0F20  0832               	movf	(___flmul@grs+3)^(0+128),w
 13175  0F21  00AB               	movwf	(??___flmul^(0+128)+3)
 13176  0F22  3018               	movlw	24
 13177  0F23                     u8265:
 13178  0F23  36AB               	lsrf	(??___flmul^(0+128)+3),f
 13179  0F24  0CAA               	rrf	(??___flmul^(0+128)+2),f
 13180  0F25  0CA9               	rrf	(??___flmul^(0+128)+1),f
 13181  0F26  0CA8               	rrf	??___flmul^(0+128),f
 13182  0F27                     u8260:
 13183  0F27  0B89               	decfsz	9,f
 13184  0F28  2F23               	goto	u8265
 13185  0F29  0828               	movf	??___flmul^(0+128),w
 13186  0F2A  07B4               	addwf	___flmul@prod^(0+128),f
 13187  0F2B  0829               	movf	(??___flmul+1)^(0+128),w
 13188  0F2C  3DB5               	addwfc	(___flmul@prod+1)^(0+128),f
 13189  0F2D  082A               	movf	(??___flmul+2)^(0+128),w
 13190  0F2E  3DB6               	addwfc	(___flmul@prod+2)^(0+128),f
 13191  0F2F  082B               	movf	(??___flmul+3)^(0+128),w
 13192  0F30  3DB7               	addwfc	(___flmul@prod+3)^(0+128),f
 13193  0F31                     l8381:
 13194  0F31  3008               	movlw	8
 13195  0F32                     u8275:
 13196  0F32  35AF               	lslf	___flmul@grs^(0+128),f
 13197  0F33  0DB0               	rlf	(___flmul@grs+1)^(0+128),f
 13198  0F34  0DB1               	rlf	(___flmul@grs+2)^(0+128),f
 13199  0F35  0DB2               	rlf	(___flmul@grs+3)^(0+128),f
 13200  0F36  0B89               	decfsz	9,f
 13201  0F37  2F32               	goto	u8275
 13202  0F38                     l8383:
 13203  0F38  0833               	movf	___flmul@bexp^(0+128),w
 13204  0F39  072E               	addwf	___flmul@aexp^(0+128),w
 13205  0F3A  00A8               	movwf	??___flmul^(0+128)
 13206  0F3B  01A9               	clrf	(??___flmul^(0+128)+1)
 13207  0F3C  0DA9               	rlf	(??___flmul+1)^(0+128),f
 13208  0F3D  0828               	movf	??___flmul^(0+128),w
 13209  0F3E  3E82               	addlw	130
 13210  0F3F  00B8               	movwf	___flmul@temp^(0+128)
 13211  0F40  30FF               	movlw	255
 13212  0F41  3D29               	addwfc	(??___flmul+1)^(0+128),w
 13213  0F42  00B9               	movwf	(___flmul@temp+1)^(0+128)
 13214  0F43  2F5B               	goto	l8395
 13215  0F44                     l8385:
 13216  0F44  3001               	movlw	1
 13217  0F45                     u8285:
 13218  0F45  35B4               	lslf	___flmul@prod^(0+128),f
 13219  0F46  0DB5               	rlf	(___flmul@prod+1)^(0+128),f
 13220  0F47  0DB6               	rlf	(___flmul@prod+2)^(0+128),f
 13221  0F48  0DB7               	rlf	(___flmul@prod+3)^(0+128),f
 13222  0F49  0B89               	decfsz	9,f
 13223  0F4A  2F45               	goto	u8285
 13224  0F4B                     l8387:
 13225  0F4B  1FB2               	btfss	(___flmul@grs+3)^(0+128),7
 13226  0F4C  2F4E               	goto	u8291
 13227  0F4D  2F4F               	goto	u8290
 13228  0F4E                     u8291:
 13229  0F4E  2F50               	goto	l8391
 13230  0F4F                     u8290:
 13231  0F4F                     l8389:
 13232  0F4F  1434               	bsf	___flmul@prod^(0+128),0
 13233  0F50                     l8391:
 13234  0F50  3001               	movlw	1
 13235  0F51                     u8305:
 13236  0F51  35AF               	lslf	___flmul@grs^(0+128),f
 13237  0F52  0DB0               	rlf	(___flmul@grs+1)^(0+128),f
 13238  0F53  0DB1               	rlf	(___flmul@grs+2)^(0+128),f
 13239  0F54  0DB2               	rlf	(___flmul@grs+3)^(0+128),f
 13240  0F55  0B89               	decfsz	9,f
 13241  0F56  2F51               	goto	u8305
 13242  0F57                     l8393:
 13243  0F57  30FF               	movlw	255
 13244  0F58  07B8               	addwf	___flmul@temp^(0+128),f
 13245  0F59  30FF               	movlw	255
 13246  0F5A  3DB9               	addwfc	(___flmul@temp+1)^(0+128),f
 13247  0F5B                     l8395:
 13248  0F5B  1FB6               	btfss	(___flmul@prod+2)^(0+128),7
 13249  0F5C  2F5E               	goto	u8311
 13250  0F5D  2F5F               	goto	u8310
 13251  0F5E                     u8311:
 13252  0F5E  2F44               	goto	l8385
 13253  0F5F                     u8310:
 13254  0F5F                     l8397:
 13255  0F5F  01AE               	clrf	___flmul@aexp^(0+128)
 13256  0F60                     l8399:
 13257  0F60  1FB2               	btfss	(___flmul@grs+3)^(0+128),7
 13258  0F61  2F63               	goto	u8321
 13259  0F62  2F64               	goto	u8320
 13260  0F63                     u8321:
 13261  0F63  2F80               	goto	l8407
 13262  0F64                     u8320:
 13263  0F64                     l8401:
 13264  0F64  30FF               	movlw	255
 13265  0F65  052F               	andwf	___flmul@grs^(0+128),w
 13266  0F66  00A8               	movwf	??___flmul^(0+128)
 13267  0F67  30FF               	movlw	255
 13268  0F68  0530               	andwf	(___flmul@grs+1)^(0+128),w
 13269  0F69  00A9               	movwf	(??___flmul^(0+128)+1)
 13270  0F6A  30FF               	movlw	255
 13271  0F6B  0531               	andwf	(___flmul@grs+2)^(0+128),w
 13272  0F6C  00AA               	movwf	(??___flmul^(0+128)+2)
 13273  0F6D  307F               	movlw	127
 13274  0F6E  0532               	andwf	(___flmul@grs+3)^(0+128),w
 13275  0F6F  00AB               	movwf	(??___flmul^(0+128)+3)
 13276  0F70  082B               	movf	(??___flmul+3)^(0+128),w
 13277  0F71  042A               	iorwf	(??___flmul+2)^(0+128),w
 13278  0F72  0429               	iorwf	(??___flmul+1)^(0+128),w
 13279  0F73  0428               	iorwf	??___flmul^(0+128),w
 13280  0F74  1903               	skipnz
 13281  0F75  2F77               	goto	u8331
 13282  0F76  2F78               	goto	u8330
 13283  0F77                     u8331:
 13284  0F77  2F7B               	goto	l2209
 13285  0F78                     u8330:
 13286  0F78                     l8403:
 13287  0F78  01AE               	clrf	___flmul@aexp^(0+128)
 13288  0F79  0AAE               	incf	___flmul@aexp^(0+128),f
 13289  0F7A  2F80               	goto	l8407
 13290  0F7B                     l2209:
 13291  0F7B  1C34               	btfss	___flmul@prod^(0+128),0
 13292  0F7C  2F7E               	goto	u8341
 13293  0F7D  2F7F               	goto	u8340
 13294  0F7E                     u8341:
 13295  0F7E  2F80               	goto	l8407
 13296  0F7F                     u8340:
 13297  0F7F  2F78               	goto	l8403
 13298  0F80                     l8407:
 13299  0F80  082E               	movf	___flmul@aexp^(0+128),w
 13300  0F81  1903               	btfsc	3,2
 13301  0F82  2F84               	goto	u8351
 13302  0F83  2F85               	goto	u8350
 13303  0F84                     u8351:
 13304  0F84  2FAD               	goto	l8417
 13305  0F85                     u8350:
 13306  0F85                     l8409:
 13307  0F85  3001               	movlw	1
 13308  0F86  07B4               	addwf	___flmul@prod^(0+128),f
 13309  0F87  3000               	movlw	0
 13310  0F88  3DB5               	addwfc	(___flmul@prod+1)^(0+128),f
 13311  0F89  3000               	movlw	0
 13312  0F8A  3DB6               	addwfc	(___flmul@prod+2)^(0+128),f
 13313  0F8B  3000               	movlw	0
 13314  0F8C  3DB7               	addwfc	(___flmul@prod+3)^(0+128),f
 13315  0F8D                     l8411:
 13316  0F8D  1C37               	btfss	(___flmul@prod+3)^(0+128),0
 13317  0F8E  2F90               	goto	u8361
 13318  0F8F  2F91               	goto	u8360
 13319  0F90                     u8361:
 13320  0F90  2FAD               	goto	l8417
 13321  0F91                     u8360:
 13322  0F91                     l8413:
 13323  0F91  0834               	movf	___flmul@prod^(0+128),w
 13324  0F92  00A8               	movwf	??___flmul^(0+128)
 13325  0F93  0835               	movf	(___flmul@prod+1)^(0+128),w
 13326  0F94  00A9               	movwf	(??___flmul^(0+128)+1)
 13327  0F95  0836               	movf	(___flmul@prod+2)^(0+128),w
 13328  0F96  00AA               	movwf	(??___flmul^(0+128)+2)
 13329  0F97  0837               	movf	(___flmul@prod+3)^(0+128),w
 13330  0F98  00AB               	movwf	(??___flmul^(0+128)+3)
 13331  0F99  3001               	movlw	1
 13332  0F9A  00AC               	movwf	(??___flmul+4)^(0+128)
 13333  0F9B                     u8375:
 13334  0F9B  37AB               	asrf	(??___flmul^(0+128)+3),f
 13335  0F9C  0CAA               	rrf	(??___flmul^(0+128)+2),f
 13336  0F9D  0CA9               	rrf	(??___flmul^(0+128)+1),f
 13337  0F9E  0CA8               	rrf	??___flmul^(0+128),f
 13338  0F9F                     u8370:
 13339  0F9F  0BAC               	decfsz	(??___flmul+4)^(0+128),f
 13340  0FA0  2F9B               	goto	u8375
 13341  0FA1  082B               	movf	(??___flmul+3)^(0+128),w
 13342  0FA2  00B7               	movwf	(___flmul@prod+3)^(0+128)
 13343  0FA3  082A               	movf	(??___flmul+2)^(0+128),w
 13344  0FA4  00B6               	movwf	(___flmul@prod+2)^(0+128)
 13345  0FA5  0829               	movf	(??___flmul+1)^(0+128),w
 13346  0FA6  00B5               	movwf	(___flmul@prod+1)^(0+128)
 13347  0FA7  0828               	movf	??___flmul^(0+128),w
 13348  0FA8  00B4               	movwf	___flmul@prod^(0+128)
 13349  0FA9                     l8415:
 13350  0FA9  3001               	movlw	1
 13351  0FAA  07B8               	addwf	___flmul@temp^(0+128),f
 13352  0FAB  3000               	movlw	0
 13353  0FAC  3DB9               	addwfc	(___flmul@temp+1)^(0+128),f
 13354  0FAD                     l8417:
 13355  0FAD  0839               	movf	(___flmul@temp+1)^(0+128),w
 13356  0FAE  3A80               	xorlw	128
 13357  0FAF  00A8               	movwf	??___flmul^(0+128)
 13358  0FB0  3080               	movlw	128
 13359  0FB1  0228               	subwf	??___flmul^(0+128),w
 13360  0FB2  1D03               	skipz
 13361  0FB3  2FB6               	goto	u8385
 13362  0FB4  30FF               	movlw	255
 13363  0FB5  0238               	subwf	___flmul@temp^(0+128),w
 13364  0FB6                     u8385:
 13365  0FB6  1C03               	skipc
 13366  0FB7  2FB9               	goto	u8381
 13367  0FB8  2FBA               	goto	u8380
 13368  0FB9                     u8381:
 13369  0FB9  2FC4               	goto	l8421
 13370  0FBA                     u8380:
 13371  0FBA                     l8419:
 13372  0FBA  307F               	movlw	127
 13373  0FBB  0021               	movlb	1	; select bank1
 13374  0FBC  00B7               	movwf	(___flmul@prod+3)^(0+128)
 13375  0FBD  3080               	movlw	128
 13376  0FBE  00B6               	movwf	(___flmul@prod+2)^(0+128)
 13377  0FBF  3000               	movlw	0
 13378  0FC0  00B5               	movwf	(___flmul@prod+1)^(0+128)
 13379  0FC1  3000               	movlw	0
 13380  0FC2  00B4               	movwf	___flmul@prod^(0+128)
 13381  0FC3  2FF3               	goto	l2215
 13382  0FC4                     l8421:
 13383  0FC4  0021               	movlb	1	; select bank1
 13384  0FC5  0839               	movf	(___flmul@temp+1)^(0+128),w
 13385  0FC6  3A80               	xorlw	128
 13386  0FC7  00A8               	movwf	??___flmul^(0+128)
 13387  0FC8  3080               	movlw	128
 13388  0FC9  0228               	subwf	??___flmul^(0+128),w
 13389  0FCA  1D03               	skipz
 13390  0FCB  2FCE               	goto	u8395
 13391  0FCC  3001               	movlw	1
 13392  0FCD  0238               	subwf	___flmul@temp^(0+128),w
 13393  0FCE                     u8395:
 13394  0FCE  1803               	skipnc
 13395  0FCF  2FD1               	goto	u8391
 13396  0FD0  2FD2               	goto	u8390
 13397  0FD1                     u8391:
 13398  0FD1  2FDD               	goto	l8427
 13399  0FD2                     u8390:
 13400  0FD2                     l8423:
 13401  0FD2  3000               	movlw	0
 13402  0FD3  0021               	movlb	1	; select bank1
 13403  0FD4  00B7               	movwf	(___flmul@prod+3)^(0+128)
 13404  0FD5  3000               	movlw	0
 13405  0FD6  00B6               	movwf	(___flmul@prod+2)^(0+128)
 13406  0FD7  3000               	movlw	0
 13407  0FD8  00B5               	movwf	(___flmul@prod+1)^(0+128)
 13408  0FD9  3000               	movlw	0
 13409  0FDA  00B4               	movwf	___flmul@prod^(0+128)
 13410  0FDB                     l8425:
 13411  0FDB  01AD               	clrf	___flmul@sign^(0+128)
 13412  0FDC  2FF3               	goto	l2215
 13413  0FDD                     l8427:
 13414  0FDD  0021               	movlb	1	; select bank1
 13415  0FDE  0838               	movf	___flmul@temp^(0+128),w
 13416  0FDF  00A8               	movwf	??___flmul^(0+128)
 13417  0FE0  0828               	movf	??___flmul^(0+128),w
 13418  0FE1  00B3               	movwf	___flmul@bexp^(0+128)
 13419  0FE2  30FF               	movlw	255
 13420  0FE3  05B4               	andwf	___flmul@prod^(0+128),f
 13421  0FE4  30FF               	movlw	255
 13422  0FE5  05B5               	andwf	(___flmul@prod+1)^(0+128),f
 13423  0FE6  307F               	movlw	127
 13424  0FE7  05B6               	andwf	(___flmul@prod+2)^(0+128),f
 13425  0FE8  3000               	movlw	0
 13426  0FE9  05B7               	andwf	(___flmul@prod+3)^(0+128),f
 13427  0FEA                     l8429:
 13428  0FEA  1C33               	btfss	___flmul@bexp^(0+128),0
 13429  0FEB  2FED               	goto	u8401
 13430  0FEC  2FEE               	goto	u8400
 13431  0FED                     u8401:
 13432  0FED  2FEF               	goto	l8433
 13433  0FEE                     u8400:
 13434  0FEE                     l8431:
 13435  0FEE  17B6               	bsf	(___flmul@prod^(0+128)+2),7
 13436  0FEF                     l8433:
 13437  0FEF  3633               	lsrf	___flmul@bexp^(0+128),w
 13438  0FF0  00A8               	movwf	??___flmul^(0+128)
 13439  0FF1  0828               	movf	??___flmul^(0+128),w
 13440  0FF2  00B7               	movwf	(___flmul@prod^(0+128)+3)
 13441  0FF3                     l2215:
 13442  0FF3  082D               	movf	___flmul@sign^(0+128),w
 13443  0FF4  00A8               	movwf	??___flmul^(0+128)
 13444  0FF5  0828               	movf	??___flmul^(0+128),w
 13445  0FF6  04B7               	iorwf	(___flmul@prod^(0+128)+3),f
 13446  0FF7                     l8435:
 13447  0FF7  0837               	movf	(___flmul@prod+3)^(0+128),w
 13448  0FF8  00A3               	movwf	(?___flmul+3)^(0+128)
 13449  0FF9  0836               	movf	(___flmul@prod+2)^(0+128),w
 13450  0FFA  00A2               	movwf	(?___flmul+2)^(0+128)
 13451  0FFB  0835               	movf	(___flmul@prod+1)^(0+128),w
 13452  0FFC  00A1               	movwf	(?___flmul+1)^(0+128)
 13453  0FFD  0834               	movf	___flmul@prod^(0+128),w
 13454  0FFE  00A0               	movwf	?___flmul^(0+128)
 13455  0FFF                     l2203:
 13456  0FFF  0008               	return
 13457  1000                     __end_of___flmul:
 13458                           
 13459                           	psect	text42
 13460  1B26                     __ptext42:	
 13461 ;; *************** function __Umul8_16 *****************
 13462 ;; Defined at:
 13463 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul8_16.c"
 13464 ;; Parameters:    Size  Location     Type
 13465 ;;  multiplier      1    wreg     unsigned char 
 13466 ;;  multiplicand    1   14[BANK0 ] unsigned char 
 13467 ;; Auto vars:     Size  Location     Type
 13468 ;;  multiplier      1   22[BANK0 ] unsigned char 
 13469 ;;  word_mpld       2   20[BANK0 ] unsigned int 
 13470 ;;  product         2   18[BANK0 ] unsigned int 
 13471 ;; Return value:  Size  Location     Type
 13472 ;;                  2   14[BANK0 ] unsigned int 
 13473 ;; Registers used:
 13474 ;;		wreg, status,2, status,0
 13475 ;; Tracked objects:
 13476 ;;		On entry : 0/0
 13477 ;;		On exit  : 0/0
 13478 ;;		Unchanged: 0/0
 13479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13480 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13481 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13482 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13483 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13484 ;;Total ram usage:        9 bytes
 13485 ;; Hardware stack levels used: 1
 13486 ;; Hardware stack levels required when called: 5
 13487 ;; This function calls:
 13488 ;;		Nothing
 13489 ;; This function is called by:
 13490 ;;		___flmul
 13491 ;; This function uses a non-reentrant model
 13492 ;;
 13493                           
 13494                           
 13495                           ;psect for function __Umul8_16
 13496  1B26                     __Umul8_16:
 13497                           
 13498                           ;incstack = 0
 13499                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 13500                           ;__Umul8_16@multiplier stored from wreg
 13501  1B26  0020               	movlb	0	; select bank0
 13502  1B27  00B6               	movwf	__Umul8_16@multiplier
 13503  1B28                     l8049:
 13504  1B28  01B2               	clrf	__Umul8_16@product
 13505  1B29  01B3               	clrf	__Umul8_16@product+1
 13506  1B2A                     l8051:
 13507  1B2A  082E               	movf	__Umul8_16@multiplicand,w
 13508  1B2B  00B0               	movwf	??__Umul8_16
 13509  1B2C  01B1               	clrf	??__Umul8_16+1
 13510  1B2D  0830               	movf	??__Umul8_16,w
 13511  1B2E  00B4               	movwf	__Umul8_16@word_mpld
 13512  1B2F  0831               	movf	??__Umul8_16+1,w
 13513  1B30  00B5               	movwf	__Umul8_16@word_mpld+1
 13514  1B31                     l8053:
 13515  1B31  1C36               	btfss	__Umul8_16@multiplier,0
 13516  1B32  2B34               	goto	u7601
 13517  1B33  2B35               	goto	u7600
 13518  1B34                     u7601:
 13519  1B34  2B39               	goto	l2222
 13520  1B35                     u7600:
 13521  1B35                     l8055:
 13522  1B35  0834               	movf	__Umul8_16@word_mpld,w
 13523  1B36  07B2               	addwf	__Umul8_16@product,f
 13524  1B37  0835               	movf	__Umul8_16@word_mpld+1,w
 13525  1B38  3DB3               	addwfc	__Umul8_16@product+1,f
 13526  1B39                     l2222:
 13527  1B39  3001               	movlw	1
 13528  1B3A                     u7615:
 13529  1B3A  35B4               	lslf	__Umul8_16@word_mpld,f
 13530  1B3B  0DB5               	rlf	__Umul8_16@word_mpld+1,f
 13531  1B3C  0B89               	decfsz	9,f
 13532  1B3D  2B3A               	goto	u7615
 13533  1B3E  1003               	clrc
 13534  1B3F  0CB6               	rrf	__Umul8_16@multiplier,f
 13535  1B40                     l8057:
 13536  1B40  0836               	movf	__Umul8_16@multiplier,w
 13537  1B41  1D03               	btfss	3,2
 13538  1B42  2B44               	goto	u7621
 13539  1B43  2B45               	goto	u7620
 13540  1B44                     u7621:
 13541  1B44  2B31               	goto	l8053
 13542  1B45                     u7620:
 13543  1B45                     l8059:
 13544  1B45  0833               	movf	__Umul8_16@product+1,w
 13545  1B46  00AF               	movwf	?__Umul8_16+1
 13546  1B47  0832               	movf	__Umul8_16@product,w
 13547  1B48  00AE               	movwf	?__Umul8_16
 13548  1B49                     l2224:
 13549  1B49  0008               	return
 13550  1B4A                     __end_of__Umul8_16:
 13551                           
 13552                           	psect	text43
 13553  1B4A                     __ptext43:	
 13554 ;; *************** function ___fleq *****************
 13555 ;; Defined at:
 13556 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
 13557 ;; Parameters:    Size  Location     Type
 13558 ;;  ff1             4    0[BANK1 ] unsigned int 
 13559 ;;  ff2             4    4[BANK1 ] unsigned int 
 13560 ;; Auto vars:     Size  Location     Type
 13561 ;;		None
 13562 ;; Return value:  Size  Location     Type
 13563 ;;		None               void
 13564 ;; Registers used:
 13565 ;;		wreg, status,2, status,0
 13566 ;; Tracked objects:
 13567 ;;		On entry : 0/0
 13568 ;;		On exit  : 0/0
 13569 ;;		Unchanged: 0/0
 13570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13571 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13573 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13574 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 13575 ;;Total ram usage:       12 bytes
 13576 ;; Hardware stack levels used: 1
 13577 ;; Hardware stack levels required when called: 5
 13578 ;; This function calls:
 13579 ;;		Nothing
 13580 ;; This function is called by:
 13581 ;;		_KE
 13582 ;;		_ManualControl
 13583 ;;		_AutoCircleHandle
 13584 ;;		_AutoLineControl
 13585 ;;		_TimeLapseControl
 13586 ;; This function uses a non-reentrant model
 13587 ;;
 13588                           
 13589                           
 13590                           ;psect for function ___fleq
 13591  1B4A                     ___fleq:
 13592  1B4A                     l8077:	
 13593                           ;incstack = 0
 13594                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 13595                           
 13596  1B4A  3000               	movlw	0
 13597  1B4B  0021               	movlb	1	; select bank1
 13598  1B4C  0520               	andwf	___fleq@ff1^(0+128),w
 13599  1B4D  00A8               	movwf	??___fleq^(0+128)
 13600  1B4E  3000               	movlw	0
 13601  1B4F  0521               	andwf	(___fleq@ff1+1)^(0+128),w
 13602  1B50  00A9               	movwf	(??___fleq^(0+128)+1)
 13603  1B51  3080               	movlw	128
 13604  1B52  0522               	andwf	(___fleq@ff1+2)^(0+128),w
 13605  1B53  00AA               	movwf	(??___fleq^(0+128)+2)
 13606  1B54  307F               	movlw	127
 13607  1B55  0523               	andwf	(___fleq@ff1+3)^(0+128),w
 13608  1B56  00AB               	movwf	(??___fleq^(0+128)+3)
 13609  1B57  082B               	movf	(??___fleq+3)^(0+128),w
 13610  1B58  042A               	iorwf	(??___fleq+2)^(0+128),w
 13611  1B59  0429               	iorwf	(??___fleq+1)^(0+128),w
 13612  1B5A  0428               	iorwf	??___fleq^(0+128),w
 13613  1B5B  1D03               	skipz
 13614  1B5C  2B5E               	goto	u7671
 13615  1B5D  2B5F               	goto	u7670
 13616  1B5E                     u7671:
 13617  1B5E  2B67               	goto	l1975
 13618  1B5F                     u7670:
 13619  1B5F                     l8079:
 13620  1B5F  3000               	movlw	0
 13621  1B60  00A3               	movwf	(___fleq@ff1+3)^(0+128)
 13622  1B61  3000               	movlw	0
 13623  1B62  00A2               	movwf	(___fleq@ff1+2)^(0+128)
 13624  1B63  3000               	movlw	0
 13625  1B64  00A1               	movwf	(___fleq@ff1+1)^(0+128)
 13626  1B65  3000               	movlw	0
 13627  1B66  00A0               	movwf	___fleq@ff1^(0+128)
 13628  1B67                     l1975:
 13629  1B67  3000               	movlw	0
 13630  1B68  0524               	andwf	___fleq@ff2^(0+128),w
 13631  1B69  00A8               	movwf	??___fleq^(0+128)
 13632  1B6A  3000               	movlw	0
 13633  1B6B  0525               	andwf	(___fleq@ff2+1)^(0+128),w
 13634  1B6C  00A9               	movwf	(??___fleq^(0+128)+1)
 13635  1B6D  3080               	movlw	128
 13636  1B6E  0526               	andwf	(___fleq@ff2+2)^(0+128),w
 13637  1B6F  00AA               	movwf	(??___fleq^(0+128)+2)
 13638  1B70  307F               	movlw	127
 13639  1B71  0527               	andwf	(___fleq@ff2+3)^(0+128),w
 13640  1B72  00AB               	movwf	(??___fleq^(0+128)+3)
 13641  1B73  082B               	movf	(??___fleq+3)^(0+128),w
 13642  1B74  042A               	iorwf	(??___fleq+2)^(0+128),w
 13643  1B75  0429               	iorwf	(??___fleq+1)^(0+128),w
 13644  1B76  0428               	iorwf	??___fleq^(0+128),w
 13645  1B77  1D03               	skipz
 13646  1B78  2B7A               	goto	u7681
 13647  1B79  2B7B               	goto	u7680
 13648  1B7A                     u7681:
 13649  1B7A  2B83               	goto	l1976
 13650  1B7B                     u7680:
 13651  1B7B                     l8081:
 13652  1B7B  3000               	movlw	0
 13653  1B7C  00A7               	movwf	(___fleq@ff2+3)^(0+128)
 13654  1B7D  3000               	movlw	0
 13655  1B7E  00A6               	movwf	(___fleq@ff2+2)^(0+128)
 13656  1B7F  3000               	movlw	0
 13657  1B80  00A5               	movwf	(___fleq@ff2+1)^(0+128)
 13658  1B81  3000               	movlw	0
 13659  1B82  00A4               	movwf	___fleq@ff2^(0+128)
 13660  1B83                     l1976:
 13661  1B83  0827               	movf	(___fleq@ff2+3)^(0+128),w
 13662  1B84  0623               	xorwf	(___fleq@ff1+3)^(0+128),w
 13663  1B85  1D03               	skipz
 13664  1B86  2B91               	goto	u7695
 13665  1B87  0826               	movf	(___fleq@ff2+2)^(0+128),w
 13666  1B88  0622               	xorwf	(___fleq@ff1+2)^(0+128),w
 13667  1B89  1D03               	skipz
 13668  1B8A  2B91               	goto	u7695
 13669  1B8B  0825               	movf	(___fleq@ff2+1)^(0+128),w
 13670  1B8C  0621               	xorwf	(___fleq@ff1+1)^(0+128),w
 13671  1B8D  1D03               	skipz
 13672  1B8E  2B91               	goto	u7695
 13673  1B8F  0824               	movf	___fleq@ff2^(0+128),w
 13674  1B90  0620               	xorwf	___fleq@ff1^(0+128),w
 13675  1B91                     u7695:
 13676  1B91  1903               	skipnz
 13677  1B92  2B94               	goto	u7691
 13678  1B93  2B95               	goto	u7690
 13679  1B94                     u7691:
 13680  1B94  2B97               	goto	l8085
 13681  1B95                     u7690:
 13682  1B95                     l8083:
 13683  1B95  1003               	clrc
 13684  1B96  2B98               	goto	l1981
 13685  1B97                     l8085:
 13686  1B97  1403               	setc
 13687  1B98                     l1981:
 13688  1B98  0008               	return
 13689  1B99                     __end_of___fleq:
 13690                           
 13691                           	psect	text44
 13692  1288                     __ptext44:	
 13693 ;; *************** function ___fldiv *****************
 13694 ;; Defined at:
 13695 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 13696 ;; Parameters:    Size  Location     Type
 13697 ;;  a               4   26[BANK1 ] unsigned int 
 13698 ;;  b               4   30[BANK1 ] unsigned int 
 13699 ;; Auto vars:     Size  Location     Type
 13700 ;;  grs             4   46[BANK1 ] unsigned long 
 13701 ;;  rem             4   39[BANK1 ] unsigned long 
 13702 ;;  new_exp         2   44[BANK1 ] int 
 13703 ;;  aexp            1   51[BANK1 ] unsigned char 
 13704 ;;  bexp            1   50[BANK1 ] unsigned char 
 13705 ;;  sign            1   43[BANK1 ] unsigned char 
 13706 ;; Return value:  Size  Location     Type
 13707 ;;                  4   26[BANK1 ] unsigned char 
 13708 ;; Registers used:
 13709 ;;		wreg, status,2, status,0
 13710 ;; Tracked objects:
 13711 ;;		On entry : 0/0
 13712 ;;		On exit  : 0/0
 13713 ;;		Unchanged: 0/0
 13714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13715 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13716 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 13717 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 13718 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
 13719 ;;Total ram usage:       26 bytes
 13720 ;; Hardware stack levels used: 1
 13721 ;; Hardware stack levels required when called: 5
 13722 ;; This function calls:
 13723 ;;		Nothing
 13724 ;; This function is called by:
 13725 ;;		_KE
 13726 ;;		_AutoCircleHandle
 13727 ;;		_AutoLineControl
 13728 ;;		_TimeLapseHandle
 13729 ;;		_distance_sensor_bottom
 13730 ;;		_distance_sensor_top
 13731 ;; This function uses a non-reentrant model
 13732 ;;
 13733                           
 13734                           
 13735                           ;psect for function ___fldiv
 13736  1288                     ___fldiv:
 13737  1288                     l8159:	
 13738                           ;incstack = 0
 13739                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 13740                           
 13741  1288  0021               	movlb	1	; select bank1
 13742  1289  0841               	movf	(___fldiv@b^(0+128)+3),w
 13743  128A  3980               	andlw	128
 13744  128B  00C2               	movwf	??___fldiv^(0+128)
 13745  128C  0842               	movf	??___fldiv^(0+128),w
 13746  128D  00CB               	movwf	___fldiv@sign^(0+128)
 13747  128E                     l8161:
 13748  128E  3541               	lslf	(___fldiv@b^(0+128)+3),w
 13749  128F  00C2               	movwf	??___fldiv^(0+128)
 13750  1290  0842               	movf	??___fldiv^(0+128),w
 13751  1291  00D2               	movwf	___fldiv@bexp^(0+128)
 13752  1292                     l8163:
 13753  1292  1FC0               	btfss	(___fldiv@b^(0+128)+2),7
 13754  1293  2A95               	goto	u7861
 13755  1294  2A96               	goto	u7860
 13756  1295                     u7861:
 13757  1295  2A97               	goto	l8167
 13758  1296                     u7860:
 13759  1296                     l8165:
 13760  1296  1452               	bsf	___fldiv@bexp^(0+128),0
 13761  1297                     l8167:
 13762  1297  0852               	movf	___fldiv@bexp^(0+128),w
 13763  1298  1903               	btfsc	3,2
 13764  1299  2A9B               	goto	u7871
 13765  129A  2A9C               	goto	u7870
 13766  129B                     u7871:
 13767  129B  2AAC               	goto	l8177
 13768  129C                     u7870:
 13769  129C                     l8169:
 13770  129C  0A52               	incf	___fldiv@bexp^(0+128),w
 13771  129D  1D03               	btfss	3,2
 13772  129E  2AA0               	goto	u7881
 13773  129F  2AA1               	goto	u7880
 13774  12A0                     u7881:
 13775  12A0  2AA9               	goto	l8173
 13776  12A1                     u7880:
 13777  12A1                     l8171:
 13778  12A1  3000               	movlw	0
 13779  12A2  00C1               	movwf	(___fldiv@b+3)^(0+128)
 13780  12A3  3000               	movlw	0
 13781  12A4  00C0               	movwf	(___fldiv@b+2)^(0+128)
 13782  12A5  3000               	movlw	0
 13783  12A6  00BF               	movwf	(___fldiv@b+1)^(0+128)
 13784  12A7  3000               	movlw	0
 13785  12A8  00BE               	movwf	___fldiv@b^(0+128)
 13786  12A9                     l8173:
 13787  12A9  17C0               	bsf	(___fldiv@b^(0+128)+2),7
 13788  12AA                     l8175:
 13789  12AA  01C1               	clrf	(___fldiv@b^(0+128)+3)
 13790  12AB  2AB4               	goto	l8179
 13791  12AC                     l8177:
 13792  12AC  3000               	movlw	0
 13793  12AD  00C1               	movwf	(___fldiv@b+3)^(0+128)
 13794  12AE  3000               	movlw	0
 13795  12AF  00C0               	movwf	(___fldiv@b+2)^(0+128)
 13796  12B0  3000               	movlw	0
 13797  12B1  00BF               	movwf	(___fldiv@b+1)^(0+128)
 13798  12B2  3000               	movlw	0
 13799  12B3  00BE               	movwf	___fldiv@b^(0+128)
 13800  12B4                     l8179:
 13801  12B4  083D               	movf	(___fldiv@a^(0+128)+3),w
 13802  12B5  3980               	andlw	128
 13803  12B6  00C2               	movwf	??___fldiv^(0+128)
 13804  12B7  0842               	movf	??___fldiv^(0+128),w
 13805  12B8  06CB               	xorwf	___fldiv@sign^(0+128),f
 13806  12B9                     l8181:
 13807  12B9  353D               	lslf	(___fldiv@a^(0+128)+3),w
 13808  12BA  00C2               	movwf	??___fldiv^(0+128)
 13809  12BB  0842               	movf	??___fldiv^(0+128),w
 13810  12BC  00D3               	movwf	___fldiv@aexp^(0+128)
 13811  12BD                     l8183:
 13812  12BD  1FBC               	btfss	(___fldiv@a^(0+128)+2),7
 13813  12BE  2AC0               	goto	u7891
 13814  12BF  2AC1               	goto	u7890
 13815  12C0                     u7891:
 13816  12C0  2AC2               	goto	l8187
 13817  12C1                     u7890:
 13818  12C1                     l8185:
 13819  12C1  1453               	bsf	___fldiv@aexp^(0+128),0
 13820  12C2                     l8187:
 13821  12C2  0853               	movf	___fldiv@aexp^(0+128),w
 13822  12C3  1903               	btfsc	3,2
 13823  12C4  2AC6               	goto	u7901
 13824  12C5  2AC7               	goto	u7900
 13825  12C6                     u7901:
 13826  12C6  2AD7               	goto	l8197
 13827  12C7                     u7900:
 13828  12C7                     l8189:
 13829  12C7  0A53               	incf	___fldiv@aexp^(0+128),w
 13830  12C8  1D03               	btfss	3,2
 13831  12C9  2ACB               	goto	u7911
 13832  12CA  2ACC               	goto	u7910
 13833  12CB                     u7911:
 13834  12CB  2AD4               	goto	l8193
 13835  12CC                     u7910:
 13836  12CC                     l8191:
 13837  12CC  3000               	movlw	0
 13838  12CD  00BD               	movwf	(___fldiv@a+3)^(0+128)
 13839  12CE  3000               	movlw	0
 13840  12CF  00BC               	movwf	(___fldiv@a+2)^(0+128)
 13841  12D0  3000               	movlw	0
 13842  12D1  00BB               	movwf	(___fldiv@a+1)^(0+128)
 13843  12D2  3000               	movlw	0
 13844  12D3  00BA               	movwf	___fldiv@a^(0+128)
 13845  12D4                     l8193:
 13846  12D4  17BC               	bsf	(___fldiv@a^(0+128)+2),7
 13847  12D5                     l8195:
 13848  12D5  01BD               	clrf	(___fldiv@a^(0+128)+3)
 13849  12D6  2ADF               	goto	l2163
 13850  12D7                     l8197:
 13851  12D7  3000               	movlw	0
 13852  12D8  00BD               	movwf	(___fldiv@a+3)^(0+128)
 13853  12D9  3000               	movlw	0
 13854  12DA  00BC               	movwf	(___fldiv@a+2)^(0+128)
 13855  12DB  3000               	movlw	0
 13856  12DC  00BB               	movwf	(___fldiv@a+1)^(0+128)
 13857  12DD  3000               	movlw	0
 13858  12DE  00BA               	movwf	___fldiv@a^(0+128)
 13859  12DF                     l2163:
 13860  12DF  083D               	movf	(___fldiv@a+3)^(0+128),w
 13861  12E0  043C               	iorwf	(___fldiv@a+2)^(0+128),w
 13862  12E1  043B               	iorwf	(___fldiv@a+1)^(0+128),w
 13863  12E2  043A               	iorwf	___fldiv@a^(0+128),w
 13864  12E3  1D03               	skipz
 13865  12E4  2AE6               	goto	u7921
 13866  12E5  2AE7               	goto	u7920
 13867  12E6                     u7921:
 13868  12E6  2B00               	goto	l8207
 13869  12E7                     u7920:
 13870  12E7                     l8199:
 13871  12E7  3000               	movlw	0
 13872  12E8  00C1               	movwf	(___fldiv@b+3)^(0+128)
 13873  12E9  3000               	movlw	0
 13874  12EA  00C0               	movwf	(___fldiv@b+2)^(0+128)
 13875  12EB  3000               	movlw	0
 13876  12EC  00BF               	movwf	(___fldiv@b+1)^(0+128)
 13877  12ED  3000               	movlw	0
 13878  12EE  00BE               	movwf	___fldiv@b^(0+128)
 13879  12EF  3080               	movlw	128
 13880  12F0  04C0               	iorwf	(___fldiv@b^(0+128)+2),f
 13881  12F1  307F               	movlw	127
 13882  12F2  04C1               	iorwf	((___fldiv@b+1)^(0+128)+2),f
 13883  12F3                     l8201:
 13884  12F3  084B               	movf	___fldiv@sign^(0+128),w
 13885  12F4  00C2               	movwf	??___fldiv^(0+128)
 13886  12F5  0842               	movf	??___fldiv^(0+128),w
 13887  12F6  04C1               	iorwf	(___fldiv@b^(0+128)+3),f
 13888  12F7                     l8203:
 13889  12F7  0841               	movf	(___fldiv@b+3)^(0+128),w
 13890  12F8  00BD               	movwf	(?___fldiv+3)^(0+128)
 13891  12F9  0840               	movf	(___fldiv@b+2)^(0+128),w
 13892  12FA  00BC               	movwf	(?___fldiv+2)^(0+128)
 13893  12FB  083F               	movf	(___fldiv@b+1)^(0+128),w
 13894  12FC  00BB               	movwf	(?___fldiv+1)^(0+128)
 13895  12FD  083E               	movf	___fldiv@b^(0+128),w
 13896  12FE  00BA               	movwf	?___fldiv^(0+128)
 13897  12FF  2C3B               	goto	l2165
 13898  1300                     l8207:
 13899  1300  0852               	movf	___fldiv@bexp^(0+128),w
 13900  1301  1D03               	btfss	3,2
 13901  1302  2B04               	goto	u7931
 13902  1303  2B05               	goto	u7930
 13903  1304                     u7931:
 13904  1304  2B0E               	goto	l8213
 13905  1305                     u7930:
 13906  1305                     l8209:
 13907  1305  3000               	movlw	0
 13908  1306  00BD               	movwf	(?___fldiv+3)^(0+128)
 13909  1307  3000               	movlw	0
 13910  1308  00BC               	movwf	(?___fldiv+2)^(0+128)
 13911  1309  3000               	movlw	0
 13912  130A  00BB               	movwf	(?___fldiv+1)^(0+128)
 13913  130B  3000               	movlw	0
 13914  130C  00BA               	movwf	?___fldiv^(0+128)
 13915  130D  2C3B               	goto	l2165
 13916  130E                     l8213:
 13917  130E  0852               	movf	___fldiv@bexp^(0+128),w
 13918  130F  00C2               	movwf	??___fldiv^(0+128)
 13919  1310  01C3               	clrf	(??___fldiv^(0+128)+1)
 13920  1311  0843               	movf	(??___fldiv+1)^(0+128),w
 13921  1312  00C5               	movwf	((??___fldiv+2)^(0+128)+1)
 13922  1313  0853               	movf	___fldiv@aexp^(0+128),w
 13923  1314  0242               	subwf	??___fldiv^(0+128),w
 13924  1315  00C4               	movwf	(??___fldiv+2)^(0+128)
 13925  1316  1C03               	skipc
 13926  1317  03C5               	decf	((??___fldiv+2)^(0+128)+1),f
 13927  1318  0844               	movf	(??___fldiv+2)^(0+128),w
 13928  1319  3E7F               	addlw	127
 13929  131A  00CC               	movwf	___fldiv@new_exp^(0+128)
 13930  131B  3000               	movlw	0
 13931  131C  3D45               	addwfc	(??___fldiv+3)^(0+128),w
 13932  131D  00CD               	movwf	(___fldiv@new_exp+1)^(0+128)
 13933  131E                     l8215:
 13934  131E  0841               	movf	(___fldiv@b+3)^(0+128),w
 13935  131F  00CA               	movwf	(___fldiv@rem+3)^(0+128)
 13936  1320  0840               	movf	(___fldiv@b+2)^(0+128),w
 13937  1321  00C9               	movwf	(___fldiv@rem+2)^(0+128)
 13938  1322  083F               	movf	(___fldiv@b+1)^(0+128),w
 13939  1323  00C8               	movwf	(___fldiv@rem+1)^(0+128)
 13940  1324  083E               	movf	___fldiv@b^(0+128),w
 13941  1325  00C7               	movwf	___fldiv@rem^(0+128)
 13942  1326                     l8217:
 13943  1326  3000               	movlw	0
 13944  1327  00C1               	movwf	(___fldiv@b+3)^(0+128)
 13945  1328  3000               	movlw	0
 13946  1329  00C0               	movwf	(___fldiv@b+2)^(0+128)
 13947  132A  3000               	movlw	0
 13948  132B  00BF               	movwf	(___fldiv@b+1)^(0+128)
 13949  132C  3000               	movlw	0
 13950  132D  00BE               	movwf	___fldiv@b^(0+128)
 13951  132E                     l8219:
 13952  132E  3000               	movlw	0
 13953  132F  00D1               	movwf	(___fldiv@grs+3)^(0+128)
 13954  1330  3000               	movlw	0
 13955  1331  00D0               	movwf	(___fldiv@grs+2)^(0+128)
 13956  1332  3000               	movlw	0
 13957  1333  00CF               	movwf	(___fldiv@grs+1)^(0+128)
 13958  1334  3000               	movlw	0
 13959  1335  00CE               	movwf	___fldiv@grs^(0+128)
 13960  1336                     l8221:
 13961  1336  01D3               	clrf	___fldiv@aexp^(0+128)
 13962  1337  2B76               	goto	l8241
 13963  1338                     l8223:
 13964  1338  0853               	movf	___fldiv@aexp^(0+128),w
 13965  1339  1903               	btfsc	3,2
 13966  133A  2B3C               	goto	u7941
 13967  133B  2B3D               	goto	u7940
 13968  133C                     u7941:
 13969  133C  2B57               	goto	l8233
 13970  133D                     u7940:
 13971  133D                     l8225:
 13972  133D  3001               	movlw	1
 13973  133E                     u7955:
 13974  133E  35C7               	lslf	___fldiv@rem^(0+128),f
 13975  133F  0DC8               	rlf	(___fldiv@rem+1)^(0+128),f
 13976  1340  0DC9               	rlf	(___fldiv@rem+2)^(0+128),f
 13977  1341  0DCA               	rlf	(___fldiv@rem+3)^(0+128),f
 13978  1342  0B89               	decfsz	9,f
 13979  1343  2B3E               	goto	u7955
 13980  1344  3001               	movlw	1
 13981  1345                     u7965:
 13982  1345  35BE               	lslf	___fldiv@b^(0+128),f
 13983  1346  0DBF               	rlf	(___fldiv@b+1)^(0+128),f
 13984  1347  0DC0               	rlf	(___fldiv@b+2)^(0+128),f
 13985  1348  0DC1               	rlf	(___fldiv@b+3)^(0+128),f
 13986  1349  0B89               	decfsz	9,f
 13987  134A  2B45               	goto	u7965
 13988  134B                     l8227:
 13989  134B  1FD1               	btfss	(___fldiv@grs+3)^(0+128),7
 13990  134C  2B4E               	goto	u7971
 13991  134D  2B4F               	goto	u7970
 13992  134E                     u7971:
 13993  134E  2B50               	goto	l8231
 13994  134F                     u7970:
 13995  134F                     l8229:
 13996  134F  143E               	bsf	___fldiv@b^(0+128),0
 13997  1350                     l8231:
 13998  1350  3001               	movlw	1
 13999  1351                     u7985:
 14000  1351  35CE               	lslf	___fldiv@grs^(0+128),f
 14001  1352  0DCF               	rlf	(___fldiv@grs+1)^(0+128),f
 14002  1353  0DD0               	rlf	(___fldiv@grs+2)^(0+128),f
 14003  1354  0DD1               	rlf	(___fldiv@grs+3)^(0+128),f
 14004  1355  0B89               	decfsz	9,f
 14005  1356  2B51               	goto	u7985
 14006  1357                     l8233:
 14007  1357  083D               	movf	(___fldiv@a+3)^(0+128),w
 14008  1358  024A               	subwf	(___fldiv@rem+3)^(0+128),w
 14009  1359  1D03               	skipz
 14010  135A  2B65               	goto	u7995
 14011  135B  083C               	movf	(___fldiv@a+2)^(0+128),w
 14012  135C  0249               	subwf	(___fldiv@rem+2)^(0+128),w
 14013  135D  1D03               	skipz
 14014  135E  2B65               	goto	u7995
 14015  135F  083B               	movf	(___fldiv@a+1)^(0+128),w
 14016  1360  0248               	subwf	(___fldiv@rem+1)^(0+128),w
 14017  1361  1D03               	skipz
 14018  1362  2B65               	goto	u7995
 14019  1363  083A               	movf	___fldiv@a^(0+128),w
 14020  1364  0247               	subwf	___fldiv@rem^(0+128),w
 14021  1365                     u7995:
 14022  1365  1C03               	skipc
 14023  1366  2B68               	goto	u7991
 14024  1367  2B69               	goto	u7990
 14025  1368                     u7991:
 14026  1368  2B72               	goto	l8239
 14027  1369                     u7990:
 14028  1369                     l8235:
 14029  1369  1751               	bsf	(___fldiv@grs^(0+128)+3),6
 14030  136A                     l8237:
 14031  136A  083A               	movf	___fldiv@a^(0+128),w
 14032  136B  02C7               	subwf	___fldiv@rem^(0+128),f
 14033  136C  083B               	movf	(___fldiv@a+1)^(0+128),w
 14034  136D  3BC8               	subwfb	(___fldiv@rem+1)^(0+128),f
 14035  136E  083C               	movf	(___fldiv@a+2)^(0+128),w
 14036  136F  3BC9               	subwfb	(___fldiv@rem+2)^(0+128),f
 14037  1370  083D               	movf	(___fldiv@a+3)^(0+128),w
 14038  1371  3BCA               	subwfb	(___fldiv@rem+3)^(0+128),f
 14039  1372                     l8239:
 14040  1372  3001               	movlw	1
 14041  1373  00C2               	movwf	??___fldiv^(0+128)
 14042  1374  0842               	movf	??___fldiv^(0+128),w
 14043  1375  07D3               	addwf	___fldiv@aexp^(0+128),f
 14044  1376                     l8241:
 14045  1376  301A               	movlw	26
 14046  1377  0253               	subwf	___fldiv@aexp^(0+128),w
 14047  1378  1C03               	skipc
 14048  1379  2B7B               	goto	u8001
 14049  137A  2B7C               	goto	u8000
 14050  137B                     u8001:
 14051  137B  2B38               	goto	l8223
 14052  137C                     u8000:
 14053  137C                     l8243:
 14054  137C  084A               	movf	(___fldiv@rem+3)^(0+128),w
 14055  137D  0449               	iorwf	(___fldiv@rem+2)^(0+128),w
 14056  137E  0448               	iorwf	(___fldiv@rem+1)^(0+128),w
 14057  137F  0447               	iorwf	___fldiv@rem^(0+128),w
 14058  1380  1903               	skipnz
 14059  1381  2B83               	goto	u8011
 14060  1382  2B84               	goto	u8010
 14061  1383                     u8011:
 14062  1383  2B9D               	goto	l8257
 14063  1384                     u8010:
 14064  1384                     l8245:
 14065  1384  144E               	bsf	___fldiv@grs^(0+128),0
 14066  1385  2B9D               	goto	l8257
 14067  1386                     l8247:
 14068  1386  3001               	movlw	1
 14069  1387                     u8025:
 14070  1387  35BE               	lslf	___fldiv@b^(0+128),f
 14071  1388  0DBF               	rlf	(___fldiv@b+1)^(0+128),f
 14072  1389  0DC0               	rlf	(___fldiv@b+2)^(0+128),f
 14073  138A  0DC1               	rlf	(___fldiv@b+3)^(0+128),f
 14074  138B  0B89               	decfsz	9,f
 14075  138C  2B87               	goto	u8025
 14076  138D                     l8249:
 14077  138D  1FD1               	btfss	(___fldiv@grs+3)^(0+128),7
 14078  138E  2B90               	goto	u8031
 14079  138F  2B91               	goto	u8030
 14080  1390                     u8031:
 14081  1390  2B92               	goto	l8253
 14082  1391                     u8030:
 14083  1391                     l8251:
 14084  1391  143E               	bsf	___fldiv@b^(0+128),0
 14085  1392                     l8253:
 14086  1392  3001               	movlw	1
 14087  1393                     u8045:
 14088  1393  35CE               	lslf	___fldiv@grs^(0+128),f
 14089  1394  0DCF               	rlf	(___fldiv@grs+1)^(0+128),f
 14090  1395  0DD0               	rlf	(___fldiv@grs+2)^(0+128),f
 14091  1396  0DD1               	rlf	(___fldiv@grs+3)^(0+128),f
 14092  1397  0B89               	decfsz	9,f
 14093  1398  2B93               	goto	u8045
 14094  1399                     l8255:
 14095  1399  30FF               	movlw	255
 14096  139A  07CC               	addwf	___fldiv@new_exp^(0+128),f
 14097  139B  30FF               	movlw	255
 14098  139C  3DCD               	addwfc	(___fldiv@new_exp+1)^(0+128),f
 14099  139D                     l8257:
 14100  139D  1FC0               	btfss	(___fldiv@b+2)^(0+128),7
 14101  139E  2BA0               	goto	u8051
 14102  139F  2BA1               	goto	u8050
 14103  13A0                     u8051:
 14104  13A0  2B86               	goto	l8247
 14105  13A1                     u8050:
 14106  13A1                     l8259:
 14107  13A1  01D3               	clrf	___fldiv@aexp^(0+128)
 14108  13A2                     l8261:
 14109  13A2  1FD1               	btfss	(___fldiv@grs+3)^(0+128),7
 14110  13A3  2BA5               	goto	u8061
 14111  13A4  2BA6               	goto	u8060
 14112  13A5                     u8061:
 14113  13A5  2BC2               	goto	l8269
 14114  13A6                     u8060:
 14115  13A6                     l8263:
 14116  13A6  30FF               	movlw	255
 14117  13A7  054E               	andwf	___fldiv@grs^(0+128),w
 14118  13A8  00C2               	movwf	??___fldiv^(0+128)
 14119  13A9  30FF               	movlw	255
 14120  13AA  054F               	andwf	(___fldiv@grs+1)^(0+128),w
 14121  13AB  00C3               	movwf	(??___fldiv^(0+128)+1)
 14122  13AC  30FF               	movlw	255
 14123  13AD  0550               	andwf	(___fldiv@grs+2)^(0+128),w
 14124  13AE  00C4               	movwf	(??___fldiv^(0+128)+2)
 14125  13AF  307F               	movlw	127
 14126  13B0  0551               	andwf	(___fldiv@grs+3)^(0+128),w
 14127  13B1  00C5               	movwf	(??___fldiv^(0+128)+3)
 14128  13B2  0845               	movf	(??___fldiv+3)^(0+128),w
 14129  13B3  0444               	iorwf	(??___fldiv+2)^(0+128),w
 14130  13B4  0443               	iorwf	(??___fldiv+1)^(0+128),w
 14131  13B5  0442               	iorwf	??___fldiv^(0+128),w
 14132  13B6  1903               	skipnz
 14133  13B7  2BB9               	goto	u8071
 14134  13B8  2BBA               	goto	u8070
 14135  13B9                     u8071:
 14136  13B9  2BBD               	goto	l2179
 14137  13BA                     u8070:
 14138  13BA                     l8265:
 14139  13BA  01D3               	clrf	___fldiv@aexp^(0+128)
 14140  13BB  0AD3               	incf	___fldiv@aexp^(0+128),f
 14141  13BC  2BC2               	goto	l8269
 14142  13BD                     l2179:
 14143  13BD  1C3E               	btfss	___fldiv@b^(0+128),0
 14144  13BE  2BC0               	goto	u8081
 14145  13BF  2BC1               	goto	u8080
 14146  13C0                     u8081:
 14147  13C0  2BC2               	goto	l8269
 14148  13C1                     u8080:
 14149  13C1  2BBA               	goto	l8265
 14150  13C2                     l8269:
 14151  13C2  0853               	movf	___fldiv@aexp^(0+128),w
 14152  13C3  1903               	btfsc	3,2
 14153  13C4  2BC6               	goto	u8091
 14154  13C5  2BC7               	goto	u8090
 14155  13C6                     u8091:
 14156  13C6  2BEF               	goto	l8279
 14157  13C7                     u8090:
 14158  13C7                     l8271:
 14159  13C7  3001               	movlw	1
 14160  13C8  07BE               	addwf	___fldiv@b^(0+128),f
 14161  13C9  3000               	movlw	0
 14162  13CA  3DBF               	addwfc	(___fldiv@b+1)^(0+128),f
 14163  13CB  3000               	movlw	0
 14164  13CC  3DC0               	addwfc	(___fldiv@b+2)^(0+128),f
 14165  13CD  3000               	movlw	0
 14166  13CE  3DC1               	addwfc	(___fldiv@b+3)^(0+128),f
 14167  13CF                     l8273:
 14168  13CF  1C41               	btfss	(___fldiv@b+3)^(0+128),0
 14169  13D0  2BD2               	goto	u8101
 14170  13D1  2BD3               	goto	u8100
 14171  13D2                     u8101:
 14172  13D2  2BEF               	goto	l8279
 14173  13D3                     u8100:
 14174  13D3                     l8275:
 14175  13D3  083E               	movf	___fldiv@b^(0+128),w
 14176  13D4  00C2               	movwf	??___fldiv^(0+128)
 14177  13D5  083F               	movf	(___fldiv@b+1)^(0+128),w
 14178  13D6  00C3               	movwf	(??___fldiv^(0+128)+1)
 14179  13D7  0840               	movf	(___fldiv@b+2)^(0+128),w
 14180  13D8  00C4               	movwf	(??___fldiv^(0+128)+2)
 14181  13D9  0841               	movf	(___fldiv@b+3)^(0+128),w
 14182  13DA  00C5               	movwf	(??___fldiv^(0+128)+3)
 14183  13DB  3001               	movlw	1
 14184  13DC  00C6               	movwf	(??___fldiv+4)^(0+128)
 14185  13DD                     u8115:
 14186  13DD  37C5               	asrf	(??___fldiv^(0+128)+3),f
 14187  13DE  0CC4               	rrf	(??___fldiv^(0+128)+2),f
 14188  13DF  0CC3               	rrf	(??___fldiv^(0+128)+1),f
 14189  13E0  0CC2               	rrf	??___fldiv^(0+128),f
 14190  13E1                     u8110:
 14191  13E1  0BC6               	decfsz	(??___fldiv+4)^(0+128),f
 14192  13E2  2BDD               	goto	u8115
 14193  13E3  0845               	movf	(??___fldiv+3)^(0+128),w
 14194  13E4  00C1               	movwf	(___fldiv@b+3)^(0+128)
 14195  13E5  0844               	movf	(??___fldiv+2)^(0+128),w
 14196  13E6  00C0               	movwf	(___fldiv@b+2)^(0+128)
 14197  13E7  0843               	movf	(??___fldiv+1)^(0+128),w
 14198  13E8  00BF               	movwf	(___fldiv@b+1)^(0+128)
 14199  13E9  0842               	movf	??___fldiv^(0+128),w
 14200  13EA  00BE               	movwf	___fldiv@b^(0+128)
 14201  13EB                     l8277:
 14202  13EB  3001               	movlw	1
 14203  13EC  07CC               	addwf	___fldiv@new_exp^(0+128),f
 14204  13ED  3000               	movlw	0
 14205  13EE  3DCD               	addwfc	(___fldiv@new_exp+1)^(0+128),f
 14206  13EF                     l8279:
 14207  13EF  084D               	movf	(___fldiv@new_exp+1)^(0+128),w
 14208  13F0  3A80               	xorlw	128
 14209  13F1  00C2               	movwf	??___fldiv^(0+128)
 14210  13F2  3080               	movlw	128
 14211  13F3  0242               	subwf	??___fldiv^(0+128),w
 14212  13F4  1D03               	skipz
 14213  13F5  2BF8               	goto	u8125
 14214  13F6  30FF               	movlw	255
 14215  13F7  024C               	subwf	___fldiv@new_exp^(0+128),w
 14216  13F8                     u8125:
 14217  13F8  1C03               	skipc
 14218  13F9  2BFB               	goto	u8121
 14219  13FA  2BFC               	goto	u8120
 14220  13FB                     u8121:
 14221  13FB  2C09               	goto	l2184
 14222  13FC                     u8120:
 14223  13FC                     l8281:
 14224  13FC  30FF               	movlw	255
 14225  13FD  0021               	movlb	1	; select bank1
 14226  13FE  00CC               	movwf	___fldiv@new_exp^(0+128)
 14227  13FF  3000               	movlw	0
 14228  1400  00CD               	movwf	(___fldiv@new_exp^(0+128)+1)
 14229  1401  3000               	movlw	0
 14230  1402  00C1               	movwf	(___fldiv@b+3)^(0+128)
 14231  1403  3000               	movlw	0
 14232  1404  00C0               	movwf	(___fldiv@b+2)^(0+128)
 14233  1405  3000               	movlw	0
 14234  1406  00BF               	movwf	(___fldiv@b+1)^(0+128)
 14235  1407  3000               	movlw	0
 14236  1408  00BE               	movwf	___fldiv@b^(0+128)
 14237  1409                     l2184:
 14238  1409  0021               	movlb	1	; select bank1
 14239  140A  084D               	movf	(___fldiv@new_exp+1)^(0+128),w
 14240  140B  3A80               	xorlw	128
 14241  140C  00C2               	movwf	??___fldiv^(0+128)
 14242  140D  3080               	movlw	128
 14243  140E  0242               	subwf	??___fldiv^(0+128),w
 14244  140F  1D03               	skipz
 14245  1410  2C13               	goto	u8135
 14246  1411  3001               	movlw	1
 14247  1412  024C               	subwf	___fldiv@new_exp^(0+128),w
 14248  1413                     u8135:
 14249  1413  1803               	skipnc
 14250  1414  2C16               	goto	u8131
 14251  1415  2C17               	goto	u8130
 14252  1416                     u8131:
 14253  1416  2C23               	goto	l2185
 14254  1417                     u8130:
 14255  1417                     l8283:
 14256  1417  0021               	movlb	1	; select bank1
 14257  1418  01CC               	clrf	___fldiv@new_exp^(0+128)
 14258  1419  01CD               	clrf	(___fldiv@new_exp+1)^(0+128)
 14259  141A                     l8285:
 14260  141A  3000               	movlw	0
 14261  141B  00C1               	movwf	(___fldiv@b+3)^(0+128)
 14262  141C  3000               	movlw	0
 14263  141D  00C0               	movwf	(___fldiv@b+2)^(0+128)
 14264  141E  3000               	movlw	0
 14265  141F  00BF               	movwf	(___fldiv@b+1)^(0+128)
 14266  1420  3000               	movlw	0
 14267  1421  00BE               	movwf	___fldiv@b^(0+128)
 14268  1422                     l8287:
 14269  1422  01CB               	clrf	___fldiv@sign^(0+128)
 14270  1423                     l2185:
 14271  1423  0021               	movlb	1	; select bank1
 14272  1424  084C               	movf	___fldiv@new_exp^(0+128),w
 14273  1425  00C2               	movwf	??___fldiv^(0+128)
 14274  1426  0842               	movf	??___fldiv^(0+128),w
 14275  1427  00D2               	movwf	___fldiv@bexp^(0+128)
 14276  1428                     l8289:
 14277  1428  1C52               	btfss	___fldiv@bexp^(0+128),0
 14278  1429  2C2B               	goto	u8141
 14279  142A  2C2C               	goto	u8140
 14280  142B                     u8141:
 14281  142B  2C2E               	goto	l8293
 14282  142C                     u8140:
 14283  142C                     l8291:
 14284  142C  17C0               	bsf	(___fldiv@b^(0+128)+2),7
 14285  142D  2C32               	goto	l2187
 14286  142E                     l8293:
 14287  142E  307F               	movlw	127
 14288  142F  00C2               	movwf	??___fldiv^(0+128)
 14289  1430  0842               	movf	??___fldiv^(0+128),w
 14290  1431  05C0               	andwf	(___fldiv@b^(0+128)+2),f
 14291  1432                     l2187:
 14292  1432  3652               	lsrf	___fldiv@bexp^(0+128),w
 14293  1433  00C2               	movwf	??___fldiv^(0+128)
 14294  1434  0842               	movf	??___fldiv^(0+128),w
 14295  1435  00C1               	movwf	(___fldiv@b^(0+128)+3)
 14296  1436  084B               	movf	___fldiv@sign^(0+128),w
 14297  1437  00C2               	movwf	??___fldiv^(0+128)
 14298  1438  0842               	movf	??___fldiv^(0+128),w
 14299  1439  04C1               	iorwf	(___fldiv@b^(0+128)+3),f
 14300  143A  2AF7               	goto	l8203
 14301  143B                     l2165:
 14302  143B  0008               	return
 14303  143C                     __end_of___fldiv:
 14304                           
 14305                           	psect	intentry
 14306  0004                     __pintentry:	
 14307 ;; *************** function _INTERRUPT_InterruptManager *****************
 14308 ;; Defined at:
 14309 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14310 ;; Parameters:    Size  Location     Type
 14311 ;;		None
 14312 ;; Auto vars:     Size  Location     Type
 14313 ;;		None
 14314 ;; Return value:  Size  Location     Type
 14315 ;;                  1    wreg      void 
 14316 ;; Registers used:
 14317 ;;		wreg, status,2, status,0, pclath, cstack
 14318 ;; Tracked objects:
 14319 ;;		On entry : 0/0
 14320 ;;		On exit  : 0/0
 14321 ;;		Unchanged: 0/0
 14322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14327 ;;Total ram usage:        0 bytes
 14328 ;; Hardware stack levels used: 1
 14329 ;; Hardware stack levels required when called: 4
 14330 ;; This function calls:
 14331 ;;		_TMR1_ISR
 14332 ;; This function is called by:
 14333 ;;		Interrupt level 1
 14334 ;; This function uses a non-reentrant model
 14335 ;;
 14336                           
 14337  0004                     _INTERRUPT_InterruptManager:
 14338                           
 14339                           ;incstack = 0
 14340  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 14341                           
 14342                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 14343  0005  3180               	pagesel	$
 14344  0006                     i1l7669:
 14345                           
 14346                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 14347  0006  1F0B               	btfss	11,6	;volatile
 14348  0007  2809               	goto	u704_21
 14349  0008  280A               	goto	u704_20
 14350  0009                     u704_21:
 14351  0009  2817               	goto	i1l464
 14352  000A                     u704_20:
 14353  000A                     i1l7671:
 14354                           
 14355                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 14356  000A  0021               	movlb	1	; select bank1
 14357  000B  1C11               	btfss	17,0	;volatile
 14358  000C  280E               	goto	u705_21
 14359  000D  280F               	goto	u705_20
 14360  000E                     u705_21:
 14361  000E  2817               	goto	i1l464
 14362  000F                     u705_20:
 14363  000F                     i1l7673:
 14364  000F  0020               	movlb	0	; select bank0
 14365  0010  1C11               	btfss	17,0	;volatile
 14366  0011  2813               	goto	u706_21
 14367  0012  2814               	goto	u706_20
 14368  0013                     u706_21:
 14369  0013  2817               	goto	i1l464
 14370  0014                     u706_20:
 14371  0014                     i1l7675:
 14372                           
 14373                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
 14374  0014  319A  222E  3180   	fcall	_TMR1_ISR
 14375  0017                     i1l464:	
 14376                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 14377                           
 14378  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 14379  0018  0009               	retfie
 14380  0019                     __end_of_INTERRUPT_InterruptManager:
 14381                           
 14382                           	psect	text46
 14383  1A2E                     __ptext46:	
 14384 ;; *************** function _TMR1_ISR *****************
 14385 ;; Defined at:
 14386 ;;		line 157 in file "mcc_generated_files/tmr1.c"
 14387 ;; Parameters:    Size  Location     Type
 14388 ;;		None
 14389 ;; Auto vars:     Size  Location     Type
 14390 ;;		None
 14391 ;; Return value:  Size  Location     Type
 14392 ;;                  1    wreg      void 
 14393 ;; Registers used:
 14394 ;;		wreg, status,2, status,0, pclath, cstack
 14395 ;; Tracked objects:
 14396 ;;		On entry : 0/0
 14397 ;;		On exit  : 0/0
 14398 ;;		Unchanged: 0/0
 14399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14404 ;;Total ram usage:        0 bytes
 14405 ;; Hardware stack levels used: 1
 14406 ;; Hardware stack levels required when called: 3
 14407 ;; This function calls:
 14408 ;;		_TMR1_CallBack
 14409 ;;		_TMR1_WriteTimer
 14410 ;; This function is called by:
 14411 ;;		_INTERRUPT_InterruptManager
 14412 ;; This function uses a non-reentrant model
 14413 ;;
 14414                           
 14415                           
 14416                           ;psect for function _TMR1_ISR
 14417  1A2E                     _TMR1_ISR:
 14418  1A2E                     i1l6915:	
 14419                           ;incstack = 0
 14420                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 14421                           
 14422                           
 14423                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
 14424  1A2E  0020               	movlb	0	; select bank0
 14425  1A2F  1011               	bcf	17,0	;volatile
 14426  1A30                     i1l6917:
 14427                           
 14428                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
 14429  1A30  0022               	movlb	2	; select bank2
 14430  1A31  0862               	movf	(_timer1ReloadVal+1)^(0+256),w	;volatile
 14431  1A32  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 14432  1A33  0861               	movf	_timer1ReloadVal^(0+256),w	;volatile
 14433  1A34  00F0               	movwf	TMR1_WriteTimer@timerVal
 14434  1A35  319A  224B  319A   	fcall	_TMR1_WriteTimer
 14435                           
 14436                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
 14437  1A38  319A  2221  319A   	fcall	_TMR1_CallBack
 14438  1A3B                     i1l437:
 14439  1A3B  0008               	return
 14440  1A3C                     __end_of_TMR1_ISR:
 14441                           
 14442                           	psect	text47
 14443  1A4B                     __ptext47:	
 14444 ;; *************** function _TMR1_WriteTimer *****************
 14445 ;; Defined at:
 14446 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 14447 ;; Parameters:    Size  Location     Type
 14448 ;;  timerVal        2    0[COMMON] unsigned short 
 14449 ;; Auto vars:     Size  Location     Type
 14450 ;;		None
 14451 ;; Return value:  Size  Location     Type
 14452 ;;                  1    wreg      void 
 14453 ;; Registers used:
 14454 ;;		wreg, status,2
 14455 ;; Tracked objects:
 14456 ;;		On entry : 0/0
 14457 ;;		On exit  : 0/0
 14458 ;;		Unchanged: 0/0
 14459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14460 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14463 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14464 ;;Total ram usage:        2 bytes
 14465 ;; Hardware stack levels used: 1
 14466 ;; This function calls:
 14467 ;;		Nothing
 14468 ;; This function is called by:
 14469 ;;		_TMR1_ISR
 14470 ;;		_TMR1_Reload
 14471 ;; This function uses a non-reentrant model
 14472 ;;
 14473                           
 14474                           
 14475                           ;psect for function _TMR1_WriteTimer
 14476  1A4B                     _TMR1_WriteTimer:
 14477  1A4B                     i1l6765:	
 14478                           ;incstack = 0
 14479                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 14480                           
 14481                           
 14482                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
 14483  1A4B  0020               	movlb	0	; select bank0
 14484  1A4C  1D18               	btfss	24,2	;volatile
 14485  1A4D  2A4F               	goto	u549_21
 14486  1A4E  2A50               	goto	u549_20
 14487  1A4F                     u549_21:
 14488  1A4F  2A57               	goto	i1l6775
 14489  1A50                     u549_20:
 14490  1A50                     i1l6767:
 14491                           
 14492                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 14493  1A50  1018               	bcf	24,0	;volatile
 14494  1A51                     i1l6769:
 14495                           
 14496                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
 14497  1A51  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 14498  1A52  0097               	movwf	23	;volatile
 14499  1A53                     i1l6771:
 14500                           
 14501                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 14502  1A53  0870               	movf	TMR1_WriteTimer@timerVal,w
 14503  1A54  0096               	movwf	22	;volatile
 14504  1A55                     i1l6773:
 14505                           
 14506                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 14507  1A55  1418               	bsf	24,0	;volatile
 14508                           
 14509                           ;mcc_generated_files/tmr1.c: 133:     }
 14510  1A56  2A5B               	goto	i1l425
 14511  1A57                     i1l6775:
 14512                           
 14513                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 14514  1A57  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 14515  1A58  0097               	movwf	23	;volatile
 14516  1A59                     i1l6777:
 14517                           
 14518                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 14519  1A59  0870               	movf	TMR1_WriteTimer@timerVal,w
 14520  1A5A  0096               	movwf	22	;volatile
 14521  1A5B                     i1l425:
 14522  1A5B  0008               	return
 14523  1A5C                     __end_of_TMR1_WriteTimer:
 14524                           
 14525                           	psect	text48
 14526  1A21                     __ptext48:	
 14527 ;; *************** function _TMR1_CallBack *****************
 14528 ;; Defined at:
 14529 ;;		line 169 in file "mcc_generated_files/tmr1.c"
 14530 ;; Parameters:    Size  Location     Type
 14531 ;;		None
 14532 ;; Auto vars:     Size  Location     Type
 14533 ;;		None
 14534 ;; Return value:  Size  Location     Type
 14535 ;;                  1    wreg      void 
 14536 ;; Registers used:
 14537 ;;		wreg, status,2, status,0, pclath, cstack
 14538 ;; Tracked objects:
 14539 ;;		On entry : 0/0
 14540 ;;		On exit  : 0/0
 14541 ;;		Unchanged: 0/0
 14542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14547 ;;Total ram usage:        0 bytes
 14548 ;; Hardware stack levels used: 1
 14549 ;; Hardware stack levels required when called: 2
 14550 ;; This function calls:
 14551 ;;		Absolute function
 14552 ;;		_T1_ROBOT_ISR
 14553 ;;		_TMR1_DefaultInterruptHandler
 14554 ;; This function is called by:
 14555 ;;		_TMR1_ISR
 14556 ;; This function uses a non-reentrant model
 14557 ;;
 14558                           
 14559                           
 14560                           ;psect for function _TMR1_CallBack
 14561  1A21                     _TMR1_CallBack:
 14562  1A21                     i1l6779:	
 14563                           ;incstack = 0
 14564                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
 14565                           
 14566                           
 14567                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
 14568  1A21  0024               	movlb	4	; select bank4
 14569  1A22  086D               	movf	_TMR1_InterruptHandler^(0+512),w
 14570  1A23  046E               	iorwf	(_TMR1_InterruptHandler+1)^(0+512),w
 14571  1A24  1903               	btfsc	3,2
 14572  1A25  2A27               	goto	u550_21
 14573  1A26  2A28               	goto	u550_20
 14574  1A27                     u550_21:
 14575  1A27  2A2D               	goto	i1l441
 14576  1A28                     u550_20:
 14577  1A28                     i1l6781:
 14578                           
 14579                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
 14580  1A28  086E               	movf	(_TMR1_InterruptHandler+1)^(0+512),w
 14581  1A29  008A               	movwf	10
 14582  1A2A  086D               	movf	_TMR1_InterruptHandler^(0+512),w
 14583  1A2B  000A               	callw
 14584  1A2C  319A               	pagesel	$
 14585  1A2D                     i1l441:
 14586  1A2D  0008               	return
 14587  1A2E                     __end_of_TMR1_CallBack:
 14588                           
 14589                           	psect	text49
 14590  1F1C                     __ptext49:	
 14591 ;; *************** function _T1_ROBOT_ISR *****************
 14592 ;; Defined at:
 14593 ;;		line 113 in file "main.c"
 14594 ;; Parameters:    Size  Location     Type
 14595 ;;		None
 14596 ;; Auto vars:     Size  Location     Type
 14597 ;;		None
 14598 ;; Return value:  Size  Location     Type
 14599 ;;                  1    wreg      void 
 14600 ;; Registers used:
 14601 ;;		wreg, status,2, status,0, pclath, cstack
 14602 ;; Tracked objects:
 14603 ;;		On entry : 0/0
 14604 ;;		On exit  : 0/0
 14605 ;;		Unchanged: 0/0
 14606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14609 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14610 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14611 ;;Total ram usage:        2 bytes
 14612 ;; Hardware stack levels used: 1
 14613 ;; Hardware stack levels required when called: 1
 14614 ;; This function calls:
 14615 ;;		i1___flge
 14616 ;;		i1___xxtofl
 14617 ;; This function is called by:
 14618 ;;		_main
 14619 ;;		_TMR1_CallBack
 14620 ;; This function uses a non-reentrant model
 14621 ;;
 14622                           
 14623                           
 14624                           ;psect for function _T1_ROBOT_ISR
 14625  1F1C                     _T1_ROBOT_ISR:
 14626  1F1C                     i1l6229:	
 14627                           ;incstack = 0
 14628                           ; Regs used in _T1_ROBOT_ISR: [wreg+status,2+status,0+pclath+cstack]
 14629                           
 14630                           
 14631                           ;main.c: 115:     if (t_left != 1000){
 14632  1F1C  30E8               	movlw	232
 14633  1F1D  0022               	movlb	2	; select bank2
 14634  1F1E  065F               	xorwf	_t_left^(0+256),w
 14635  1F1F  3003               	movlw	3
 14636  1F20  1903               	skipnz
 14637  1F21  0660               	xorwf	(_t_left+1)^(0+256),w
 14638  1F22  1903               	btfsc	3,2
 14639  1F23  2F25               	goto	u454_21
 14640  1F24  2F26               	goto	u454_20
 14641  1F25                     u454_21:
 14642  1F25  2F75               	goto	i1l6239
 14643  1F26                     u454_20:
 14644  1F26                     i1l6231:
 14645                           
 14646                           ;main.c: 116:         if (cntLeft < (float)(t_left/4)) cntLeft++;
 14647  1F26  0023               	movlb	3	; select bank3
 14648  1F27  0865               	movf	_cntLeft^(0+384),w
 14649  1F28  00F0               	movwf	i1___xxtofl@val
 14650  1F29  0866               	movf	(_cntLeft+1)^(0+384),w
 14651  1F2A  00F1               	movwf	i1___xxtofl@val+1
 14652  1F2B  01F2               	clrf	i1___xxtofl@val+2
 14653  1F2C  01F3               	clrf	i1___xxtofl@val+3
 14654  1F2D  3000               	movlw	0
 14655  1F2E  319D  25C3  319F   	fcall	i1___xxtofl
 14656  1F31  0873               	movf	?i1___xxtofl+3,w
 14657  1F32  0020               	movlb	0	; select bank0
 14658  1F33  00A3               	movwf	i1___flge@ff1+3
 14659  1F34  0872               	movf	?i1___xxtofl+2,w
 14660  1F35  00A2               	movwf	i1___flge@ff1+2
 14661  1F36  0871               	movf	?i1___xxtofl+1,w
 14662  1F37  00A1               	movwf	i1___flge@ff1+1
 14663  1F38  0870               	movf	?i1___xxtofl,w
 14664  1F39  00A0               	movwf	i1___flge@ff1
 14665  1F3A  0022               	movlb	2	; select bank2
 14666  1F3B  0860               	movf	(_t_left+1)^(0+256),w
 14667  1F3C  0020               	movlb	0	; select bank0
 14668  1F3D  00AD               	movwf	??_T1_ROBOT_ISR+1
 14669  1F3E  0022               	movlb	2	; select bank2
 14670  1F3F  085F               	movf	_t_left^(0+256),w
 14671  1F40  0020               	movlb	0	; select bank0
 14672  1F41  00AC               	movwf	??_T1_ROBOT_ISR
 14673  1F42  36AD               	lsrf	??_T1_ROBOT_ISR+1,f
 14674  1F43  0CAC               	rrf	??_T1_ROBOT_ISR,f
 14675  1F44  36AD               	lsrf	??_T1_ROBOT_ISR+1,f
 14676  1F45  0CAC               	rrf	??_T1_ROBOT_ISR,f
 14677  1F46  082C               	movf	??_T1_ROBOT_ISR,w
 14678  1F47  00F0               	movwf	i1___xxtofl@val
 14679  1F48  082D               	movf	??_T1_ROBOT_ISR+1,w
 14680  1F49  00F1               	movwf	i1___xxtofl@val+1
 14681  1F4A  01F2               	clrf	i1___xxtofl@val+2
 14682  1F4B  01F3               	clrf	i1___xxtofl@val+3
 14683  1F4C  3000               	movlw	0
 14684  1F4D  319D  25C3  319F   	fcall	i1___xxtofl
 14685  1F50  0873               	movf	?i1___xxtofl+3,w
 14686  1F51  0020               	movlb	0	; select bank0
 14687  1F52  00A7               	movwf	i1___flge@ff2+3
 14688  1F53  0872               	movf	?i1___xxtofl+2,w
 14689  1F54  00A6               	movwf	i1___flge@ff2+2
 14690  1F55  0871               	movf	?i1___xxtofl+1,w
 14691  1F56  00A5               	movwf	i1___flge@ff2+1
 14692  1F57  0870               	movf	?i1___xxtofl,w
 14693  1F58  00A4               	movwf	i1___flge@ff2
 14694  1F59  319C  2422  319F   	fcall	i1___flge
 14695  1F5C  1803               	btfsc	3,0
 14696  1F5D  2F5F               	goto	u455_21
 14697  1F5E  2F60               	goto	u455_20
 14698  1F5F                     u455_21:
 14699  1F5F  2F66               	goto	i1l6235
 14700  1F60                     u455_20:
 14701  1F60                     i1l6233:
 14702  1F60  3001               	movlw	1
 14703  1F61  0023               	movlb	3	; select bank3
 14704  1F62  07E5               	addwf	_cntLeft^(0+384),f
 14705  1F63  3000               	movlw	0
 14706  1F64  3DE6               	addwfc	(_cntLeft+1)^(0+384),f
 14707  1F65  2F75               	goto	i1l6239
 14708  1F66                     i1l6235:
 14709                           
 14710                           ;main.c: 118:             LATFbits.LATF2 = !LATFbits.LATF2;
 14711  1F66  1003               	clrc
 14712  1F67  0027               	movlb	7	; select bank7
 14713  1F68  1D0C               	btfss	12,2	;volatile
 14714  1F69  1403               	setc
 14715  1F6A  1803               	btfsc	3,0
 14716  1F6B  2F6D               	goto	u456_21
 14717  1F6C  2F70               	goto	u456_20
 14718  1F6D                     u456_21:
 14719  1F6D  0027               	movlb	7	; select bank7
 14720  1F6E  150C               	bsf	12,2	;volatile
 14721  1F6F  2F72               	goto	u457_24
 14722  1F70                     u456_20:
 14723  1F70  0027               	movlb	7	; select bank7
 14724  1F71  110C               	bcf	12,2	;volatile
 14725  1F72                     u457_24:
 14726  1F72                     i1l6237:
 14727                           
 14728                           ;main.c: 119:             cntLeft = 0;
 14729  1F72  0023               	movlb	3	; select bank3
 14730  1F73  01E5               	clrf	_cntLeft^(0+384)
 14731  1F74  01E6               	clrf	(_cntLeft+1)^(0+384)
 14732  1F75                     i1l6239:
 14733                           
 14734                           ;main.c: 122:     if (t_right != 1000){
 14735  1F75  30E8               	movlw	232
 14736  1F76  0022               	movlb	2	; select bank2
 14737  1F77  065D               	xorwf	_t_right^(0+256),w
 14738  1F78  3003               	movlw	3
 14739  1F79  1903               	skipnz
 14740  1F7A  065E               	xorwf	(_t_right+1)^(0+256),w
 14741  1F7B  1903               	btfsc	3,2
 14742  1F7C  2F7E               	goto	u458_21
 14743  1F7D  2F7F               	goto	u458_20
 14744  1F7E                     u458_21:
 14745  1F7E  2FCE               	goto	i1l6249
 14746  1F7F                     u458_20:
 14747  1F7F                     i1l6241:
 14748                           
 14749                           ;main.c: 123:         if (cntRight < (float)(t_right/4)) cntRight++;
 14750  1F7F  0023               	movlb	3	; select bank3
 14751  1F80  0863               	movf	_cntRight^(0+384),w
 14752  1F81  00F0               	movwf	i1___xxtofl@val
 14753  1F82  0864               	movf	(_cntRight+1)^(0+384),w
 14754  1F83  00F1               	movwf	i1___xxtofl@val+1
 14755  1F84  01F2               	clrf	i1___xxtofl@val+2
 14756  1F85  01F3               	clrf	i1___xxtofl@val+3
 14757  1F86  3000               	movlw	0
 14758  1F87  319D  25C3  319F   	fcall	i1___xxtofl
 14759  1F8A  0873               	movf	?i1___xxtofl+3,w
 14760  1F8B  0020               	movlb	0	; select bank0
 14761  1F8C  00A3               	movwf	i1___flge@ff1+3
 14762  1F8D  0872               	movf	?i1___xxtofl+2,w
 14763  1F8E  00A2               	movwf	i1___flge@ff1+2
 14764  1F8F  0871               	movf	?i1___xxtofl+1,w
 14765  1F90  00A1               	movwf	i1___flge@ff1+1
 14766  1F91  0870               	movf	?i1___xxtofl,w
 14767  1F92  00A0               	movwf	i1___flge@ff1
 14768  1F93  0022               	movlb	2	; select bank2
 14769  1F94  085E               	movf	(_t_right+1)^(0+256),w
 14770  1F95  0020               	movlb	0	; select bank0
 14771  1F96  00AD               	movwf	??_T1_ROBOT_ISR+1
 14772  1F97  0022               	movlb	2	; select bank2
 14773  1F98  085D               	movf	_t_right^(0+256),w
 14774  1F99  0020               	movlb	0	; select bank0
 14775  1F9A  00AC               	movwf	??_T1_ROBOT_ISR
 14776  1F9B  36AD               	lsrf	??_T1_ROBOT_ISR+1,f
 14777  1F9C  0CAC               	rrf	??_T1_ROBOT_ISR,f
 14778  1F9D  36AD               	lsrf	??_T1_ROBOT_ISR+1,f
 14779  1F9E  0CAC               	rrf	??_T1_ROBOT_ISR,f
 14780  1F9F  082C               	movf	??_T1_ROBOT_ISR,w
 14781  1FA0  00F0               	movwf	i1___xxtofl@val
 14782  1FA1  082D               	movf	??_T1_ROBOT_ISR+1,w
 14783  1FA2  00F1               	movwf	i1___xxtofl@val+1
 14784  1FA3  01F2               	clrf	i1___xxtofl@val+2
 14785  1FA4  01F3               	clrf	i1___xxtofl@val+3
 14786  1FA5  3000               	movlw	0
 14787  1FA6  319D  25C3  319F   	fcall	i1___xxtofl
 14788  1FA9  0873               	movf	?i1___xxtofl+3,w
 14789  1FAA  0020               	movlb	0	; select bank0
 14790  1FAB  00A7               	movwf	i1___flge@ff2+3
 14791  1FAC  0872               	movf	?i1___xxtofl+2,w
 14792  1FAD  00A6               	movwf	i1___flge@ff2+2
 14793  1FAE  0871               	movf	?i1___xxtofl+1,w
 14794  1FAF  00A5               	movwf	i1___flge@ff2+1
 14795  1FB0  0870               	movf	?i1___xxtofl,w
 14796  1FB1  00A4               	movwf	i1___flge@ff2
 14797  1FB2  319C  2422  319F   	fcall	i1___flge
 14798  1FB5  1803               	btfsc	3,0
 14799  1FB6  2FB8               	goto	u459_21
 14800  1FB7  2FB9               	goto	u459_20
 14801  1FB8                     u459_21:
 14802  1FB8  2FBF               	goto	i1l6245
 14803  1FB9                     u459_20:
 14804  1FB9                     i1l6243:
 14805  1FB9  3001               	movlw	1
 14806  1FBA  0023               	movlb	3	; select bank3
 14807  1FBB  07E3               	addwf	_cntRight^(0+384),f
 14808  1FBC  3000               	movlw	0
 14809  1FBD  3DE4               	addwfc	(_cntRight+1)^(0+384),f
 14810  1FBE  2FCE               	goto	i1l6249
 14811  1FBF                     i1l6245:
 14812                           
 14813                           ;main.c: 125:             LATFbits.LATF6 = !LATFbits.LATF6;
 14814  1FBF  1003               	clrc
 14815  1FC0  0027               	movlb	7	; select bank7
 14816  1FC1  1F0C               	btfss	12,6	;volatile
 14817  1FC2  1403               	setc
 14818  1FC3  1803               	btfsc	3,0
 14819  1FC4  2FC6               	goto	u460_21
 14820  1FC5  2FC9               	goto	u460_20
 14821  1FC6                     u460_21:
 14822  1FC6  0027               	movlb	7	; select bank7
 14823  1FC7  170C               	bsf	12,6	;volatile
 14824  1FC8  2FCB               	goto	u461_24
 14825  1FC9                     u460_20:
 14826  1FC9  0027               	movlb	7	; select bank7
 14827  1FCA  130C               	bcf	12,6	;volatile
 14828  1FCB                     u461_24:
 14829  1FCB                     i1l6247:
 14830                           
 14831                           ;main.c: 126:             cntRight = 0;
 14832  1FCB  0023               	movlb	3	; select bank3
 14833  1FCC  01E3               	clrf	_cntRight^(0+384)
 14834  1FCD  01E4               	clrf	(_cntRight+1)^(0+384)
 14835  1FCE                     i1l6249:
 14836                           
 14837                           ;main.c: 129:     if(cntTime < totalTime) cntTime = cntTime + 1;
 14838  1FCE  0020               	movlb	0	; select bank0
 14839  1FCF  0859               	movf	_totalTime+1,w
 14840  1FD0  0022               	movlb	2	; select bank2
 14841  1FD1  0233               	subwf	(_cntTime+1)^(0+256),w
 14842  1FD2  1D03               	skipz
 14843  1FD3  2FD8               	goto	u462_25
 14844  1FD4  0020               	movlb	0	; select bank0
 14845  1FD5  0858               	movf	_totalTime,w
 14846  1FD6  0022               	movlb	2	; select bank2
 14847  1FD7  0232               	subwf	_cntTime^(0+256),w
 14848  1FD8                     u462_25:
 14849  1FD8  1803               	skipnc
 14850  1FD9  2FDB               	goto	u462_21
 14851  1FDA  2FDC               	goto	u462_20
 14852  1FDB                     u462_21:
 14853  1FDB  2FE3               	goto	i1l6253
 14854  1FDC                     u462_20:
 14855  1FDC                     i1l6251:
 14856  1FDC  0832               	movf	_cntTime^(0+256),w
 14857  1FDD  3E01               	addlw	1
 14858  1FDE  00B2               	movwf	_cntTime^(0+256)
 14859  1FDF  3000               	movlw	0
 14860  1FE0  3D33               	addwfc	(_cntTime+1)^(0+256),w
 14861  1FE1  00B3               	movwf	(_cntTime+1)^(0+256)
 14862  1FE2  2FFF               	goto	i1l1463
 14863  1FE3                     i1l6253:
 14864                           
 14865                           ;main.c: 131:         flag_stop = 0;
 14866  1FE3  0020               	movlb	0	; select bank0
 14867  1FE4  01DE               	clrf	_flag_stop
 14868  1FE5                     i1l6255:
 14869                           
 14870                           ;main.c: 132:         omega_sys = 0;
 14871  1FE5  3000               	movlw	0
 14872  1FE6  0024               	movlb	4	; select bank4
 14873  1FE7  00D0               	movwf	(_omega_sys+3)^(0+512)
 14874  1FE8  3000               	movlw	0
 14875  1FE9  00CF               	movwf	(_omega_sys+2)^(0+512)
 14876  1FEA  3000               	movlw	0
 14877  1FEB  00CE               	movwf	(_omega_sys+1)^(0+512)
 14878  1FEC  3000               	movlw	0
 14879  1FED  00CD               	movwf	_omega_sys^(0+512)
 14880  1FEE                     i1l6257:
 14881                           
 14882                           ;main.c: 133:         velocity_sys = 0;
 14883  1FEE  3000               	movlw	0
 14884  1FEF  00D4               	movwf	(_velocity_sys+3)^(0+512)
 14885  1FF0  3000               	movlw	0
 14886  1FF1  00D3               	movwf	(_velocity_sys+2)^(0+512)
 14887  1FF2  3000               	movlw	0
 14888  1FF3  00D2               	movwf	(_velocity_sys+1)^(0+512)
 14889  1FF4  3000               	movlw	0
 14890  1FF5  00D1               	movwf	_velocity_sys^(0+512)
 14891  1FF6                     i1l6259:
 14892                           
 14893                           ;main.c: 134:         t_left = 1000;
 14894  1FF6  30E8               	movlw	232
 14895  1FF7  0022               	movlb	2	; select bank2
 14896  1FF8  00DF               	movwf	_t_left^(0+256)
 14897  1FF9  3003               	movlw	3
 14898  1FFA  00E0               	movwf	(_t_left^(0+256)+1)
 14899  1FFB                     i1l6261:
 14900                           
 14901                           ;main.c: 135:         t_right = 1000;
 14902  1FFB  30E8               	movlw	232
 14903  1FFC  00DD               	movwf	_t_right^(0+256)
 14904  1FFD  3003               	movlw	3
 14905  1FFE  00DE               	movwf	(_t_right^(0+256)+1)
 14906  1FFF                     i1l1463:
 14907  1FFF  0008               	return
 14908  2000                     __end_of_T1_ROBOT_ISR:
 14909                           
 14910                           	psect	text50
 14911  0003                     __ptext50:	
 14912 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 14913 ;; Defined at:
 14914 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 14915 ;; Parameters:    Size  Location     Type
 14916 ;;		None
 14917 ;; Auto vars:     Size  Location     Type
 14918 ;;		None
 14919 ;; Return value:  Size  Location     Type
 14920 ;;                  1    wreg      void 
 14921 ;; Registers used:
 14922 ;;		None
 14923 ;; Tracked objects:
 14924 ;;		On entry : 0/0
 14925 ;;		On exit  : 0/0
 14926 ;;		Unchanged: 0/0
 14927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14932 ;;Total ram usage:        0 bytes
 14933 ;; Hardware stack levels used: 1
 14934 ;; This function calls:
 14935 ;;		Nothing
 14936 ;; This function is called by:
 14937 ;;		_TMR1_Initialize
 14938 ;;		_TMR1_CallBack
 14939 ;; This function uses a non-reentrant model
 14940 ;;
 14941                           
 14942                           
 14943                           ;psect for function _TMR1_DefaultInterruptHandler
 14944  0003                     _TMR1_DefaultInterruptHandler:
 14945  0003                     i1l447:	
 14946                           ;incstack = 0
 14947                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 14948                           
 14949  0003  0008               	return
 14950  0004                     __end_of_TMR1_DefaultInterruptHandler:
 14951                           
 14952                           	psect	text51
 14953  1DC3                     __ptext51:	
 14954 ;; *************** function i1___xxtofl *****************
 14955 ;; Defined at:
 14956 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 14957 ;; Parameters:    Size  Location     Type
 14958 ;;  sign            1    wreg     unsigned char 
 14959 ;;  val             4    0[COMMON] long 
 14960 ;; Auto vars:     Size  Location     Type
 14961 ;;  sign            1    8[COMMON] unsigned char 
 14962 ;;  arg             4   10[COMMON] unsigned long 
 14963 ;;  exp             1    9[COMMON] unsigned char 
 14964 ;; Return value:  Size  Location     Type
 14965 ;;                  4    0[COMMON] unsigned char 
 14966 ;; Registers used:
 14967 ;;		wreg, status,2, status,0
 14968 ;; Tracked objects:
 14969 ;;		On entry : 0/0
 14970 ;;		On exit  : 0/0
 14971 ;;		Unchanged: 0/0
 14972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14973 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14974 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14975 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14976 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14977 ;;Total ram usage:       14 bytes
 14978 ;; Hardware stack levels used: 1
 14979 ;; This function calls:
 14980 ;;		Nothing
 14981 ;; This function is called by:
 14982 ;;		_T1_ROBOT_ISR
 14983 ;; This function uses a non-reentrant model
 14984 ;;
 14985                           
 14986                           
 14987                           ;psect for function i1___xxtofl
 14988  1DC3                     i1___xxtofl:
 14989                           
 14990                           ;incstack = 0
 14991                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
 14992                           ;i1___xxtofl@sign stored from wreg
 14993  1DC3  00F8               	movwf	i1___xxtofl@sign
 14994  1DC4                     i1l6059:
 14995  1DC4  0878               	movf	i1___xxtofl@sign,w
 14996  1DC5  1903               	btfsc	3,2
 14997  1DC6  2DC8               	goto	u436_21
 14998  1DC7  2DC9               	goto	u436_20
 14999  1DC8                     u436_21:
 15000  1DC8  2DDD               	goto	i1l6065
 15001  1DC9                     u436_20:
 15002  1DC9                     i1l6061:
 15003  1DC9  1FF3               	btfss	i1___xxtofl@val+3,7
 15004  1DCA  2DCC               	goto	u437_21
 15005  1DCB  2DCD               	goto	u437_20
 15006  1DCC                     u437_21:
 15007  1DCC  2DDD               	goto	i1l6065
 15008  1DCD                     u437_20:
 15009  1DCD                     i1l6063:
 15010  1DCD  0970               	comf	i1___xxtofl@val,w
 15011  1DCE  00FA               	movwf	i1___xxtofl@arg
 15012  1DCF  0971               	comf	i1___xxtofl@val+1,w
 15013  1DD0  00FB               	movwf	i1___xxtofl@arg+1
 15014  1DD1  0972               	comf	i1___xxtofl@val+2,w
 15015  1DD2  00FC               	movwf	i1___xxtofl@arg+2
 15016  1DD3  0973               	comf	i1___xxtofl@val+3,w
 15017  1DD4  00FD               	movwf	i1___xxtofl@arg+3
 15018  1DD5  0AFA               	incf	i1___xxtofl@arg,f
 15019  1DD6  1903               	skipnz
 15020  1DD7  0AFB               	incf	i1___xxtofl@arg+1,f
 15021  1DD8  1903               	skipnz
 15022  1DD9  0AFC               	incf	i1___xxtofl@arg+2,f
 15023  1DDA  1903               	skipnz
 15024  1DDB  0AFD               	incf	i1___xxtofl@arg+3,f
 15025  1DDC  2DE5               	goto	i1l2247
 15026  1DDD                     i1l6065:
 15027  1DDD  0873               	movf	i1___xxtofl@val+3,w
 15028  1DDE  00FD               	movwf	i1___xxtofl@arg+3
 15029  1DDF  0872               	movf	i1___xxtofl@val+2,w
 15030  1DE0  00FC               	movwf	i1___xxtofl@arg+2
 15031  1DE1  0871               	movf	i1___xxtofl@val+1,w
 15032  1DE2  00FB               	movwf	i1___xxtofl@arg+1
 15033  1DE3  0870               	movf	i1___xxtofl@val,w
 15034  1DE4  00FA               	movwf	i1___xxtofl@arg
 15035  1DE5                     i1l2247:
 15036  1DE5  0873               	movf	i1___xxtofl@val+3,w
 15037  1DE6  0472               	iorwf	i1___xxtofl@val+2,w
 15038  1DE7  0471               	iorwf	i1___xxtofl@val+1,w
 15039  1DE8  0470               	iorwf	i1___xxtofl@val,w
 15040  1DE9  1D03               	skipz
 15041  1DEA  2DEC               	goto	u438_21
 15042  1DEB  2DED               	goto	u438_20
 15043  1DEC                     u438_21:
 15044  1DEC  2DF6               	goto	i1l6071
 15045  1DED                     u438_20:
 15046  1DED                     i1l6067:
 15047  1DED  3000               	movlw	0
 15048  1DEE  00F3               	movwf	?i1___xxtofl+3
 15049  1DEF  3000               	movlw	0
 15050  1DF0  00F2               	movwf	?i1___xxtofl+2
 15051  1DF1  3000               	movlw	0
 15052  1DF2  00F1               	movwf	?i1___xxtofl+1
 15053  1DF3  3000               	movlw	0
 15054  1DF4  00F0               	movwf	?i1___xxtofl
 15055  1DF5  2E6E               	goto	i1l2249
 15056  1DF6                     i1l6071:
 15057  1DF6  3096               	movlw	150
 15058  1DF7  00F4               	movwf	??i1___xxtofl
 15059  1DF8  0874               	movf	??i1___xxtofl,w
 15060  1DF9  00F9               	movwf	i1___xxtofl@exp
 15061  1DFA  2E06               	goto	i1l6075
 15062  1DFB                     i1l6073:
 15063  1DFB  3001               	movlw	1
 15064  1DFC  00F4               	movwf	??i1___xxtofl
 15065  1DFD  0874               	movf	??i1___xxtofl,w
 15066  1DFE  07F9               	addwf	i1___xxtofl@exp,f
 15067  1DFF  3001               	movlw	1
 15068  1E00                     u439_25:
 15069  1E00  36FD               	lsrf	i1___xxtofl@arg+3,f
 15070  1E01  0CFC               	rrf	i1___xxtofl@arg+2,f
 15071  1E02  0CFB               	rrf	i1___xxtofl@arg+1,f
 15072  1E03  0CFA               	rrf	i1___xxtofl@arg,f
 15073  1E04  0B89               	decfsz	9,f
 15074  1E05  2E00               	goto	u439_25
 15075  1E06                     i1l6075:
 15076  1E06  30FE               	movlw	254
 15077  1E07  057D               	andwf	i1___xxtofl@arg+3,w
 15078  1E08  1D03               	btfss	3,2
 15079  1E09  2E0B               	goto	u440_21
 15080  1E0A  2E0C               	goto	u440_20
 15081  1E0B                     u440_21:
 15082  1E0B  2DFB               	goto	i1l6073
 15083  1E0C                     u440_20:
 15084  1E0C  2E20               	goto	i1l2253
 15085  1E0D                     i1l6077:
 15086  1E0D  3001               	movlw	1
 15087  1E0E  00F4               	movwf	??i1___xxtofl
 15088  1E0F  0874               	movf	??i1___xxtofl,w
 15089  1E10  07F9               	addwf	i1___xxtofl@exp,f
 15090  1E11                     i1l6079:
 15091  1E11  3001               	movlw	1
 15092  1E12  07FA               	addwf	i1___xxtofl@arg,f
 15093  1E13  3000               	movlw	0
 15094  1E14  3DFB               	addwfc	i1___xxtofl@arg+1,f
 15095  1E15  3000               	movlw	0
 15096  1E16  3DFC               	addwfc	i1___xxtofl@arg+2,f
 15097  1E17  3000               	movlw	0
 15098  1E18  3DFD               	addwfc	i1___xxtofl@arg+3,f
 15099  1E19                     i1l6081:
 15100  1E19  3001               	movlw	1
 15101  1E1A                     u441_25:
 15102  1E1A  36FD               	lsrf	i1___xxtofl@arg+3,f
 15103  1E1B  0CFC               	rrf	i1___xxtofl@arg+2,f
 15104  1E1C  0CFB               	rrf	i1___xxtofl@arg+1,f
 15105  1E1D  0CFA               	rrf	i1___xxtofl@arg,f
 15106  1E1E  0B89               	decfsz	9,f
 15107  1E1F  2E1A               	goto	u441_25
 15108  1E20                     i1l2253:
 15109  1E20  30FF               	movlw	255
 15110  1E21  057D               	andwf	i1___xxtofl@arg+3,w
 15111  1E22  1D03               	btfss	3,2
 15112  1E23  2E25               	goto	u442_21
 15113  1E24  2E26               	goto	u442_20
 15114  1E25                     u442_21:
 15115  1E25  2E0D               	goto	i1l6077
 15116  1E26                     u442_20:
 15117  1E26  2E30               	goto	i1l6085
 15118  1E27                     i1l6083:
 15119  1E27  3001               	movlw	1
 15120  1E28  02F9               	subwf	i1___xxtofl@exp,f
 15121  1E29  3001               	movlw	1
 15122  1E2A                     u443_25:
 15123  1E2A  35FA               	lslf	i1___xxtofl@arg,f
 15124  1E2B  0DFB               	rlf	i1___xxtofl@arg+1,f
 15125  1E2C  0DFC               	rlf	i1___xxtofl@arg+2,f
 15126  1E2D  0DFD               	rlf	i1___xxtofl@arg+3,f
 15127  1E2E  0B89               	decfsz	9,f
 15128  1E2F  2E2A               	goto	u443_25
 15129  1E30                     i1l6085:
 15130  1E30  1BFC               	btfsc	i1___xxtofl@arg+2,7
 15131  1E31  2E33               	goto	u444_21
 15132  1E32  2E34               	goto	u444_20
 15133  1E33                     u444_21:
 15134  1E33  2E3A               	goto	i1l2260
 15135  1E34                     u444_20:
 15136  1E34                     i1l6087:
 15137  1E34  3002               	movlw	2
 15138  1E35  0279               	subwf	i1___xxtofl@exp,w
 15139  1E36  1803               	skipnc
 15140  1E37  2E39               	goto	u445_21
 15141  1E38  2E3A               	goto	u445_20
 15142  1E39                     u445_21:
 15143  1E39  2E27               	goto	i1l6083
 15144  1E3A                     u445_20:
 15145  1E3A                     i1l2260:
 15146  1E3A  1879               	btfsc	i1___xxtofl@exp,0
 15147  1E3B  2E3D               	goto	u446_21
 15148  1E3C  2E3E               	goto	u446_20
 15149  1E3D                     u446_21:
 15150  1E3D  2E46               	goto	i1l2261
 15151  1E3E                     u446_20:
 15152  1E3E                     i1l6089:
 15153  1E3E  30FF               	movlw	255
 15154  1E3F  05FA               	andwf	i1___xxtofl@arg,f
 15155  1E40  30FF               	movlw	255
 15156  1E41  05FB               	andwf	i1___xxtofl@arg+1,f
 15157  1E42  307F               	movlw	127
 15158  1E43  05FC               	andwf	i1___xxtofl@arg+2,f
 15159  1E44  30FF               	movlw	255
 15160  1E45  05FD               	andwf	i1___xxtofl@arg+3,f
 15161  1E46                     i1l2261:
 15162  1E46  1003               	clrc
 15163  1E47  0CF9               	rrf	i1___xxtofl@exp,f
 15164  1E48                     i1l6091:
 15165  1E48  0879               	movf	i1___xxtofl@exp,w
 15166  1E49  00F4               	movwf	??i1___xxtofl
 15167  1E4A  01F5               	clrf	??i1___xxtofl+1
 15168  1E4B  01F6               	clrf	??i1___xxtofl+2
 15169  1E4C  01F7               	clrf	??i1___xxtofl+3
 15170  1E4D  3018               	movlw	24
 15171  1E4E                     u447_25:
 15172  1E4E  35F4               	lslf	??i1___xxtofl,f
 15173  1E4F  0DF5               	rlf	??i1___xxtofl+1,f
 15174  1E50  0DF6               	rlf	??i1___xxtofl+2,f
 15175  1E51  0DF7               	rlf	??i1___xxtofl+3,f
 15176  1E52                     u447_20:
 15177  1E52  0B89               	decfsz	9,f
 15178  1E53  2E4E               	goto	u447_25
 15179  1E54  0874               	movf	??i1___xxtofl,w
 15180  1E55  04FA               	iorwf	i1___xxtofl@arg,f
 15181  1E56  0875               	movf	??i1___xxtofl+1,w
 15182  1E57  04FB               	iorwf	i1___xxtofl@arg+1,f
 15183  1E58  0876               	movf	??i1___xxtofl+2,w
 15184  1E59  04FC               	iorwf	i1___xxtofl@arg+2,f
 15185  1E5A  0877               	movf	??i1___xxtofl+3,w
 15186  1E5B  04FD               	iorwf	i1___xxtofl@arg+3,f
 15187  1E5C                     i1l6093:
 15188  1E5C  0878               	movf	i1___xxtofl@sign,w
 15189  1E5D  1903               	btfsc	3,2
 15190  1E5E  2E60               	goto	u448_21
 15191  1E5F  2E61               	goto	u448_20
 15192  1E60                     u448_21:
 15193  1E60  2E66               	goto	i1l6099
 15194  1E61                     u448_20:
 15195  1E61                     i1l6095:
 15196  1E61  1FF3               	btfss	i1___xxtofl@val+3,7
 15197  1E62  2E64               	goto	u449_21
 15198  1E63  2E65               	goto	u449_20
 15199  1E64                     u449_21:
 15200  1E64  2E66               	goto	i1l6099
 15201  1E65                     u449_20:
 15202  1E65                     i1l6097:
 15203  1E65  17FD               	bsf	i1___xxtofl@arg+3,7
 15204  1E66                     i1l6099:
 15205  1E66  087D               	movf	i1___xxtofl@arg+3,w
 15206  1E67  00F3               	movwf	?i1___xxtofl+3
 15207  1E68  087C               	movf	i1___xxtofl@arg+2,w
 15208  1E69  00F2               	movwf	?i1___xxtofl+2
 15209  1E6A  087B               	movf	i1___xxtofl@arg+1,w
 15210  1E6B  00F1               	movwf	?i1___xxtofl+1
 15211  1E6C  087A               	movf	i1___xxtofl@arg,w
 15212  1E6D  00F0               	movwf	?i1___xxtofl
 15213  1E6E                     i1l2249:
 15214  1E6E  0008               	return
 15215  1E6F                     __end_ofi1___xxtofl:
 15216                           
 15217                           	psect	text52
 15218  1C22                     __ptext52:	
 15219 ;; *************** function i1___flge *****************
 15220 ;; Defined at:
 15221 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 15222 ;; Parameters:    Size  Location     Type
 15223 ;;  ff1             4    0[BANK0 ] unsigned char 
 15224 ;;  ff2             4    4[BANK0 ] unsigned char 
 15225 ;; Auto vars:     Size  Location     Type
 15226 ;;		None
 15227 ;; Return value:  Size  Location     Type
 15228 ;;		None               void
 15229 ;; Registers used:
 15230 ;;		wreg, status,2, status,0
 15231 ;; Tracked objects:
 15232 ;;		On entry : 0/0
 15233 ;;		On exit  : 0/0
 15234 ;;		Unchanged: 0/0
 15235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15236 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15238 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15239 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15240 ;;Total ram usage:       12 bytes
 15241 ;; Hardware stack levels used: 1
 15242 ;; This function calls:
 15243 ;;		Nothing
 15244 ;; This function is called by:
 15245 ;;		_T1_ROBOT_ISR
 15246 ;; This function uses a non-reentrant model
 15247 ;;
 15248                           
 15249                           
 15250                           ;psect for function i1___flge
 15251  1C22                     i1___flge:
 15252  1C22                     i1l6039:	
 15253                           ;incstack = 0
 15254                           ; Regs used in i1___flge: [wreg+status,2+status,0]
 15255                           
 15256  1C22  3000               	movlw	0
 15257  1C23  0020               	movlb	0	; select bank0
 15258  1C24  0520               	andwf	i1___flge@ff1,w
 15259  1C25  00A8               	movwf	??i1___flge
 15260  1C26  3000               	movlw	0
 15261  1C27  0521               	andwf	i1___flge@ff1+1,w
 15262  1C28  00A9               	movwf	??i1___flge+1
 15263  1C29  3080               	movlw	128
 15264  1C2A  0522               	andwf	i1___flge@ff1+2,w
 15265  1C2B  00AA               	movwf	??i1___flge+2
 15266  1C2C  307F               	movlw	127
 15267  1C2D  0523               	andwf	i1___flge@ff1+3,w
 15268  1C2E  00AB               	movwf	??i1___flge+3
 15269  1C2F  082B               	movf	??i1___flge+3,w
 15270  1C30  042A               	iorwf	??i1___flge+2,w
 15271  1C31  0429               	iorwf	??i1___flge+1,w
 15272  1C32  0428               	iorwf	??i1___flge,w
 15273  1C33  1D03               	skipz
 15274  1C34  2C36               	goto	u431_21
 15275  1C35  2C37               	goto	u431_20
 15276  1C36                     u431_21:
 15277  1C36  2C3F               	goto	i1l1984
 15278  1C37                     u431_20:
 15279  1C37                     i1l6041:
 15280  1C37  3000               	movlw	0
 15281  1C38  00A3               	movwf	i1___flge@ff1+3
 15282  1C39  3000               	movlw	0
 15283  1C3A  00A2               	movwf	i1___flge@ff1+2
 15284  1C3B  3000               	movlw	0
 15285  1C3C  00A1               	movwf	i1___flge@ff1+1
 15286  1C3D  3000               	movlw	0
 15287  1C3E  00A0               	movwf	i1___flge@ff1
 15288  1C3F                     i1l1984:
 15289  1C3F  3000               	movlw	0
 15290  1C40  0524               	andwf	i1___flge@ff2,w
 15291  1C41  00A8               	movwf	??i1___flge
 15292  1C42  3000               	movlw	0
 15293  1C43  0525               	andwf	i1___flge@ff2+1,w
 15294  1C44  00A9               	movwf	??i1___flge+1
 15295  1C45  3080               	movlw	128
 15296  1C46  0526               	andwf	i1___flge@ff2+2,w
 15297  1C47  00AA               	movwf	??i1___flge+2
 15298  1C48  307F               	movlw	127
 15299  1C49  0527               	andwf	i1___flge@ff2+3,w
 15300  1C4A  00AB               	movwf	??i1___flge+3
 15301  1C4B  082B               	movf	??i1___flge+3,w
 15302  1C4C  042A               	iorwf	??i1___flge+2,w
 15303  1C4D  0429               	iorwf	??i1___flge+1,w
 15304  1C4E  0428               	iorwf	??i1___flge,w
 15305  1C4F  1D03               	skipz
 15306  1C50  2C52               	goto	u432_21
 15307  1C51  2C53               	goto	u432_20
 15308  1C52                     u432_21:
 15309  1C52  2C5B               	goto	i1l6045
 15310  1C53                     u432_20:
 15311  1C53                     i1l6043:
 15312  1C53  3000               	movlw	0
 15313  1C54  00A7               	movwf	i1___flge@ff2+3
 15314  1C55  3000               	movlw	0
 15315  1C56  00A6               	movwf	i1___flge@ff2+2
 15316  1C57  3000               	movlw	0
 15317  1C58  00A5               	movwf	i1___flge@ff2+1
 15318  1C59  3000               	movlw	0
 15319  1C5A  00A4               	movwf	i1___flge@ff2
 15320  1C5B                     i1l6045:
 15321  1C5B  1FA3               	btfss	i1___flge@ff1+3,7
 15322  1C5C  2C5E               	goto	u433_21
 15323  1C5D  2C5F               	goto	u433_20
 15324  1C5E                     u433_21:
 15325  1C5E  2C77               	goto	i1l6049
 15326  1C5F                     u433_20:
 15327  1C5F                     i1l6047:
 15328  1C5F  3000               	movlw	0
 15329  1C60  00A8               	movwf	??i1___flge
 15330  1C61  3000               	movlw	0
 15331  1C62  00A9               	movwf	??i1___flge+1
 15332  1C63  3000               	movlw	0
 15333  1C64  00AA               	movwf	??i1___flge+2
 15334  1C65  3080               	movlw	128
 15335  1C66  00AB               	movwf	??i1___flge+3
 15336  1C67  0820               	movf	i1___flge@ff1,w
 15337  1C68  02A8               	subwf	??i1___flge,f
 15338  1C69  0821               	movf	i1___flge@ff1+1,w
 15339  1C6A  3BA9               	subwfb	??i1___flge+1,f
 15340  1C6B  0822               	movf	i1___flge@ff1+2,w
 15341  1C6C  3BAA               	subwfb	??i1___flge+2,f
 15342  1C6D  0823               	movf	i1___flge@ff1+3,w
 15343  1C6E  3BAB               	subwfb	??i1___flge+3,f
 15344  1C6F  082B               	movf	??i1___flge+3,w
 15345  1C70  00A3               	movwf	i1___flge@ff1+3
 15346  1C71  082A               	movf	??i1___flge+2,w
 15347  1C72  00A2               	movwf	i1___flge@ff1+2
 15348  1C73  0829               	movf	??i1___flge+1,w
 15349  1C74  00A1               	movwf	i1___flge@ff1+1
 15350  1C75  0828               	movf	??i1___flge,w
 15351  1C76  00A0               	movwf	i1___flge@ff1
 15352  1C77                     i1l6049:
 15353  1C77  1FA7               	btfss	i1___flge@ff2+3,7
 15354  1C78  2C7A               	goto	u434_21
 15355  1C79  2C7B               	goto	u434_20
 15356  1C7A                     u434_21:
 15357  1C7A  2C93               	goto	i1l1987
 15358  1C7B                     u434_20:
 15359  1C7B                     i1l6051:
 15360  1C7B  3000               	movlw	0
 15361  1C7C  00A8               	movwf	??i1___flge
 15362  1C7D  3000               	movlw	0
 15363  1C7E  00A9               	movwf	??i1___flge+1
 15364  1C7F  3000               	movlw	0
 15365  1C80  00AA               	movwf	??i1___flge+2
 15366  1C81  3080               	movlw	128
 15367  1C82  00AB               	movwf	??i1___flge+3
 15368  1C83  0824               	movf	i1___flge@ff2,w
 15369  1C84  02A8               	subwf	??i1___flge,f
 15370  1C85  0825               	movf	i1___flge@ff2+1,w
 15371  1C86  3BA9               	subwfb	??i1___flge+1,f
 15372  1C87  0826               	movf	i1___flge@ff2+2,w
 15373  1C88  3BAA               	subwfb	??i1___flge+2,f
 15374  1C89  0827               	movf	i1___flge@ff2+3,w
 15375  1C8A  3BAB               	subwfb	??i1___flge+3,f
 15376  1C8B  082B               	movf	??i1___flge+3,w
 15377  1C8C  00A7               	movwf	i1___flge@ff2+3
 15378  1C8D  082A               	movf	??i1___flge+2,w
 15379  1C8E  00A6               	movwf	i1___flge@ff2+2
 15380  1C8F  0829               	movf	??i1___flge+1,w
 15381  1C90  00A5               	movwf	i1___flge@ff2+1
 15382  1C91  0828               	movf	??i1___flge,w
 15383  1C92  00A4               	movwf	i1___flge@ff2
 15384  1C93                     i1l1987:
 15385  1C93  3080               	movlw	128
 15386  1C94  06A3               	xorwf	i1___flge@ff1+3,f
 15387  1C95  3080               	movlw	128
 15388  1C96  06A7               	xorwf	i1___flge@ff2+3,f
 15389  1C97  0827               	movf	i1___flge@ff2+3,w
 15390  1C98  0223               	subwf	i1___flge@ff1+3,w
 15391  1C99  1D03               	skipz
 15392  1C9A  2CA5               	goto	u435_25
 15393  1C9B  0826               	movf	i1___flge@ff2+2,w
 15394  1C9C  0222               	subwf	i1___flge@ff1+2,w
 15395  1C9D  1D03               	skipz
 15396  1C9E  2CA5               	goto	u435_25
 15397  1C9F  0825               	movf	i1___flge@ff2+1,w
 15398  1CA0  0221               	subwf	i1___flge@ff1+1,w
 15399  1CA1  1D03               	skipz
 15400  1CA2  2CA5               	goto	u435_25
 15401  1CA3  0824               	movf	i1___flge@ff2,w
 15402  1CA4  0220               	subwf	i1___flge@ff1,w
 15403  1CA5                     u435_25:
 15404  1CA5  1803               	skipnc
 15405  1CA6  2CA8               	goto	u435_21
 15406  1CA7  2CA9               	goto	u435_20
 15407  1CA8                     u435_21:
 15408  1CA8  2CAB               	goto	i1l6055
 15409  1CA9                     u435_20:
 15410  1CA9                     i1l6053:
 15411  1CA9  1003               	clrc
 15412  1CAA  2CAC               	goto	i1l1992
 15413  1CAB                     i1l6055:
 15414  1CAB  1403               	setc
 15415  1CAC                     i1l1992:
 15416  1CAC  0008               	return
 15417  1CAD                     __end_ofi1___flge:
 15418  007E                     btemp	set	126	;btemp
 15419  007E                     int$flags	set	126
 15420  007E                     wtemp0	set	126
 15421                           
 15422                           	psect	config
 15423                           
 15424                           ;Config register CONFIG1 @ 0x8007
 15425                           ;	Oscillator Selection
 15426                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 15427                           ;	Watchdog Timer Enable
 15428                           ;	WDTE = OFF, WDT disabled
 15429                           ;	Power-up Timer Enable
 15430                           ;	PWRTE = OFF, PWRT disabled
 15431                           ;	MCLR Pin Function Select
 15432                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 15433                           ;	Flash Program Memory Code Protection
 15434                           ;	CP = OFF, Program memory code protection is disabled
 15435                           ;	Data Memory Code Protection
 15436                           ;	CPD = OFF, Data memory code protection is disabled
 15437                           ;	Brown-out Reset Enable
 15438                           ;	BOREN = OFF, Brown-out Reset disabled
 15439                           ;	Clock Out Enable
 15440                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 15441                           ;	Internal/External Switchover
 15442                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 15443                           ;	Fail-Safe Clock Monitor Enable
 15444                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 15445  8007                     	org	32775
 15446  8007  09E4               	dw	2532
 15447                           
 15448                           ;Config register CONFIG2 @ 0x8008
 15449                           ;	Flash Memory Self-Write Protection
 15450                           ;	WRT = OFF, Write protection off
 15451                           ;	Voltage Regulator Capacitor Enable
 15452                           ;	VCAPEN = OFF, VCAP pin functionality is disabled
 15453                           ;	PLL Enable
 15454                           ;	PLLEN = OFF, 4x PLL disabled
 15455                           ;	Stack Overflow/Underflow Reset Enable
 15456                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
 15457                           ;	Brown-out Reset Voltage Selection
 15458                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 15459                           ;	Low-Voltage Programming Enable
 15460                           ;	LVP = ON, Low-voltage programming enabled
 15461  8008                     	org	32776
 15462  8008  3CFF               	dw	15615

Data Sizes:
    Strings     0
    Constant    64
    Data        8
    BSS         254
    Persistent  48
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     52      66
    BANK1            80     80      80
    BANK2            80     27      67
    BANK3            80      0      79
    BANK4            80      0      79
    BANK5            80      0      66
    BANK6            80     38      38
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C2_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C2_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C2_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C2_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$3260$0	PTR void  size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@data(COMMON[2]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C2_DO_TX$3267$0	PTR void  size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@data(COMMON[2]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@data(COMMON[2]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@data(COMMON[2]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@data(COMMON[2]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@data(COMMON[2]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S1002$0$0	PTR void  size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@data(COMMON[2]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> TimeLapseHandle@bufferCamera_t(BANK6[20]), AutoLineHandle@bufferALine_t(BANK1[20]), AutoCircleHandle@bufferACircle_t(BANK6[20]), ManualHandle@bufferManual_t(BANK1[20]), 
		 -> buffer_sys(BANK5[50]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 50
		 -> TimeLapseHandle@bufferCamera_t(BANK6[20]), AutoLineHandle@bufferALine_t(BANK1[20]), AutoCircleHandle@bufferACircle_t(BANK6[20]), ManualHandle@bufferManual_t(BANK1[20]), 
		 -> buffer_sys(BANK5[50]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> TimeLapseHandle@bufferCamera_t(BANK6[20]), AutoLineHandle@bufferALine_t(BANK1[20]), AutoCircleHandle@bufferACircle_t(BANK6[20]), ManualHandle@bufferManual_t(BANK1[20]), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), Absolute function(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), Absolute function(), 

    I2C2_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@reg(COMMON[1]), I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@reg(COMMON[1]), I2C2_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C2_Write1ByteRegister@reg(COMMON[1]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@reg(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@reg(COMMON[1]), I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C2_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@data(COMMON[2]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C2_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), 
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c2_master_example$F307(), wr2RegCompleteHandler@i2c2_master_example$F293(), wr1RegCompleteHandler@i2c2_master_example$F287(), 
		 -> rd2RegCompleteHandler@i2c2_master_example$F281(), rd1RegCompleteHandler@i2c2_master_example$F254(), rdBlkRegCompleteHandler@i2c1_master_example$F177(), wr2RegCompleteHandler@i2c1_master_example$F166(), 
		 -> wr1RegCompleteHandler@i2c1_master_example$F160(), rd2RegCompleteHandler@i2c1_master_example$F154(), rd1RegCompleteHandler@i2c1_master_example$F143(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    i2c2_fsmStateTable	const PTR FTN()enum E4505[16] size(2) Largest target is 1
		 -> I2C2_DO_ADDRESS_NACK(), I2C2_DO_RESET(), I2C2_DO_RX_NACK_RESTART(), I2C2_DO_RX_NACK_STOP(), 
		 -> I2C2_DO_RX_ACK(), I2C2_DO_SEND_STOP(), I2C2_DO_SEND_RESTART(), I2C2_DO_SEND_RESTART_WRITE(), 
		 -> I2C2_DO_SEND_RESTART_READ(), I2C2_DO_TX_EMPTY(), I2C2_DO_RCEN(), I2C2_DO_RX(), 
		 -> I2C2_DO_TX(), I2C2_DO_SEND_ADR_WRITE(), I2C2_DO_SEND_ADR_READ(), I2C2_DO_IDLE(), 

    S1002$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@reg(COMMON[1]), I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@reg(COMMON[1]), I2C2_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C2_Write1ByteRegister@reg(COMMON[1]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@reg(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@reg(COMMON[1]), I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@reg(COMMON[1]), I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@reg(COMMON[1]), I2C2_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C2_Write1ByteRegister@reg(COMMON[1]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@reg(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@reg(COMMON[1]), I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S1002$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@data(COMMON[2]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@data(COMMON[2]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S1002$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), 
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c2_master_example$F307(), wr2RegCompleteHandler@i2c2_master_example$F293(), wr1RegCompleteHandler@i2c2_master_example$F287(), 
		 -> rd2RegCompleteHandler@i2c2_master_example$F281(), rd1RegCompleteHandler@i2c2_master_example$F254(), rdBlkRegCompleteHandler@i2c1_master_example$F177(), wr2RegCompleteHandler@i2c1_master_example$F166(), 
		 -> wr1RegCompleteHandler@i2c1_master_example$F160(), rd2RegCompleteHandler@i2c1_master_example$F154(), rd1RegCompleteHandler@i2c1_master_example$F143(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), 
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c2_master_example$F307(), wr2RegCompleteHandler@i2c2_master_example$F293(), wr1RegCompleteHandler@i2c2_master_example$F287(), 
		 -> rd2RegCompleteHandler@i2c2_master_example$F281(), rd1RegCompleteHandler@i2c2_master_example$F254(), rdBlkRegCompleteHandler@i2c1_master_example$F177(), wr2RegCompleteHandler@i2c1_master_example$F166(), 
		 -> wr1RegCompleteHandler@i2c1_master_example$F160(), rd2RegCompleteHandler@i2c1_master_example$F154(), rd1RegCompleteHandler@i2c1_master_example$F143(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E4505[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> T1_ROBOT_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> T1_ROBOT_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@i2c2_master_example$F307@ptr.data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@i2c1_master_example$F177@ptr.data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    d.data	PTR unsigned char  size(1) Largest target is 0

    S74$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _T1_ROBOT_ISR->i1___xxtofl
    i1___flge->i1___xxtofl

Critical Paths under _main in BANK0

    _main->_AutoCircleHandle
    _main->_AutoLineControl
    _main->_TimeLapseHandle
    _TimeLapseHandle->___fltol
    _TimeLapseControl->___fltol
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _ManualHandle->___xxtofl
    _AutoLineHandle->___xxtofl
    _AutoLineControl->___fltol
    _KE->___fltol
    _AutoCircleHandle->___fltol
    _atoi->___wmul
    _atoi->_isdigit
    ___xxtofl->_atoi
    ___flmul->___xxtofl
    ___fleq->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_CallBack->_T1_ROBOT_ISR
    _T1_ROBOT_ISR->i1___flge

Critical Paths under _main in BANK1

    _main->_TimeLapseControl
    _TimeLapseHandle->___fltol
    _TimeLapseControl->___fltol
    _ManualControl->___fleq
    _KE->___flsub
    ___flsub->___fladd
    ___fladd->___fldiv
    _AutoCircleHandle->___fltol
    ___fltol->___fladd
    ___fldiv->___flmul

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_AutoLineControl
    _TimeLapseHandle->___fltol
    _TimeLapseControl->___fltol
    _AutoLineControl->_KE
    _KE->___fltol
    _AutoCircleHandle->___fltol

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    _main->_AutoCircleHandle
    _main->_TimeLapseHandle

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  142490
                                             25 BANK2      2     2      0
                   _AutoCircleHandle
                    _AutoLineControl
                     _AutoLineHandle
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                      _EUSART2_Write
                                 _KE
                      _ManualControl
                       _ManualHandle
                  _SYSTEM_Initialize
                 _SetUpModeHalf_step
           _TMR1_SetInterruptHandler
                   _TimeLapseControl
                    _TimeLapseHandle
 ---------------------------------------------------------------------------------
 (1) _TimeLapseHandle                                     39    39      0   20536
                                             51 BANK0      1     1      0
                                              0 BANK6     38    38      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _TimeLapseControl                                     4     4      0    5272
                                             76 BANK1      4     4      0
                      _EUSART1_Write
                             ___fleq
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      22
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SetUpModeHalf_step                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     762
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                    _I2C1_Initialize
                    _I2C2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     294
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ManualHandle                                        27    27      0    7431
                                             49 BANK0      1     1      0
                                              0 BANK1     26    26      0
                           ___xxtofl
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _ManualControl                                        0     0      0    3921
                             ___fleq
                             ___flge
                            ___flneg
 ---------------------------------------------------------------------------------
 (1) _EUSART2_Write                                        1     1      0      22
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AutoLineHandle                                      31    31      0    7889
                                             49 BANK0      1     1      0
                                              0 BANK1     30    30      0
                           ___xxtofl
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _AutoLineControl                                      5     5      0   47674
                                             51 BANK0      1     1      0
                                             21 BANK2      4     4      0
                                 _KE
                            ___fladd
                            ___fldiv
                             ___fleq
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _KE                                                  16     8      8   26557
                                              5 BANK2     16     8      8
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    4959
                                             72 BANK1      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    4382
                                             52 BANK1     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     425
                                             14 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1746
                                             14 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _AutoCircleHandle                                    39    39      0   22252
                                             51 BANK0      1     1      0
                                              0 BANK6     38    38      0
                            ___fldiv
                             ___fleq
                            ___flmul
                            ___fltol
                           ___xxtofl
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     850
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _atoi                                                15    13      2    3619
                                             20 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (3) _isspace                                              5     3      2     259
                                             14 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              6     4      2     191
                                             14 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2296
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    2406
                                             35 BANK0     14    10      4
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4    1057
                                             49 BANK0      2     2      0
                                             72 BANK1      4     0      4
                                              0 BANK2      5     5      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    6925
                                              0 BANK1     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                             14 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8    1750
                                              0 BANK1     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    4563
                                             26 BANK1     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     952
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     952
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_CallBack                                        0     0      0     712
                   Absolute function *
                       _T1_ROBOT_ISR *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _T1_ROBOT_ISR                                         2     2      0     712
                                             12 BANK0      2     2      0
                           i1___flge
                         i1___xxtofl
 ---------------------------------------------------------------------------------
 (9) i1___xxtofl                                          14    10      4     426
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (9) i1___flge                                            12     4      8     286
                                              0 BANK0     12     4      8
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AutoCircleHandle
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
             _isspace
       ___xxtofl (ARG)
     ___fleq
       ___xxtofl (ARG)
     ___flmul
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
     ___xxtofl
     _atoi
     _strlen
   _AutoLineControl
     _KE
       ___fladd
       ___fldiv
       ___fleq
       ___flge
       ___flmul
       ___flneg
       ___flsub
         ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
       ___fltol
     ___fladd
     ___fldiv
     ___fleq
     ___flmul
     ___fltol
     ___xxtofl
   _AutoLineHandle
     ___xxtofl
     _atoi
     _strlen
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _EUSART2_Write
   _KE
   _ManualControl
     ___fleq
     ___flge
     ___flneg
   _ManualHandle
     ___xxtofl
     _atoi
     _strlen
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
     _I2C1_Initialize
     _I2C2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _SetUpModeHalf_step
   _TMR1_SetInterruptHandler
   _TimeLapseControl
     _EUSART1_Write
     ___fleq
     ___fltol
     ___xxtofl
   _TimeLapseHandle
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _atoi
     _strlen

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _T1_ROBOT_ISR *
         i1___flge
           i1___xxtofl (ARG)
         i1___xxtofl
       _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     34      42       5       82.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     1B      43       9       83.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4F      11       98.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4F      13       98.8%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      42      15       82.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50     26      26      17       47.5%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1E9      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1E9      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun May 09 16:35:56 2021

                                    ___fldiv@aexp 00D3                                      ___fldiv@bexp 00D2  
                                    ___fldiv@sign 00CB                                 ??_TimeLapseHandle 0053  
                                              _KE 1608                               ___wmul@multiplicand 0030  
                               ?_TimeLapseControl 0070                                      i1___flge@ff1 0020  
                                    i1___flge@ff2 0024                              _I2C2_DO_ADDRESS_NACK 0000  
                             __Umul8_16@word_mpld 0034                                               ?_KE 0147  
                                      i1___xxtofl 1DC3                                               l411 1AC3  
                                             l346 0839                                               l515 19A7  
                                             l507 102C                                               l531 1A0D  
                                             l524 1A3C                                               l444 19EC  
                                             l382 199A                                               l534 1A14  
                                             l528 1A4A                                               l552 19B6  
                                             l376 1A8D                                               l546 19BF  
                                             l379 0807                                               l549 19C8  
                                             l659 1A00                                               l994 1A0A  
                              ??_TimeLapseControl 00EC                              _AutoLineControl$3254 0157  
                                     KE@OmegaLeft 014F            __end_of_EUSART2_SetFramingErrorHandler 19DB  
         __size_of_EUSART2_SetFramingErrorHandler 0009                    _EUSART2_SetFramingErrorHandler 19D2  
                                 _timer1ReloadVal 0161                     TimeLapseHandle@bufferCamera_t 0320  
                                             wreg 0009                              _I2C1_DO_RX_NACK_STOP 0000  
                                    ___flmul@aexp 00AE                                      ___flmul@bexp 00B3  
                                    ___flmul@sign 00AD                                      ___flmul@temp 00B8  
                                    ___flmul@prod 00B4                                              ??_KE 0053  
                                    ___fltol@exp1 0052                                              l2000 1C21  
                                            l2010 1C21                                              l2007 1C0B  
                                            l2111 0C43                                              l2120 0D7B  
                                            l1312 19D1                                              l2113 0C1F  
                                            l1306 19DA                                              l2203 0FFF  
                                            l2107 0BA2                                              l2132 0CF7  
                                            l2141 0D50                                              l1309 19E3  
                                   _ManualControl 143C                                              l2222 1B39  
                                            l2150 0D7B                                              l2215 0FF3  
                                            l2224 1B49                                              l2304 1B25  
                                            l2128 0CD5                                              l2209 0F7B  
                                            l2313 1AA7                                              l2153 1B03  
                                            l1521 15E9                                              l1513 1607  
                                            l1505 0934                                              l2138 0D19  
                                            l1522 1607                                              l2163 12DF  
                                            l1291 19EF                                              l1515 1507  
                                            l1267 07F9                                              l1603 006C  
                                            l2260 1EE7                                              l2165 143B  
                                            l2261 1EF3                                              l2253 1ECD  
                                            l2149 0D72                                              l1294 19F6  
                                            l1518 1575                                              l2247 1E92  
                                            l1527 03FA                                              l1471 17AB  
                                            l2184 1409                                              l2280 106A  
                                            l1640 07D3                                              l2185 1423  
                                            l2249 1F1B                                              l1554 071E  
                                            l1474 17FF                                              l1466 170D  
                                            l2187 1432                                              l2179 13BD  
                                            l1483 19AD                                              l1635 075A  
                                            l1468 1754                                              l2293 10D9  
                                            l1629 03EC                                              l1806 1ACF  
                                            l1559 10E7                                              l1808 1AE3  
                                            l2296 1A74                                              l1592 0A35  
                                            l1488 0847                                              l1586 1287  
                                            l1598 0B43                                              l1981 1B98  
                                            l6221 19AE                                              l1975 1B67  
                                            l6223 19D2                                              l6215 19E4  
                                            l1976 1B83                                              l1992 1D37  
                                            l1984 1CCA                                              l8001 0CFB  
                                            l6217 19B7                                              l6225 19DB  
                                            l1987 1D1E                                              l8003 0CFE  
                                            l8011 0D0B                                              l6219 19C0  
                                            l6227 19C9                                              l1996 1A20  
                 AutoCircleHandle@bufferACircle_t 0320                                              l8101 1D06  
                                            l8021 0D1E                                              l8013 0D0C  
                                            l8005 0D00                                              l8103 1D34  
                                            l8111 1A1E                                              l8031 0D55  
                                            l8023 0D23                                              l8015 0D10  
                                            l8007 0D05                                              l8201 12F3  
                                            l8105 1D36                                              l8113 1A20  
                                            l8041 0D6C                                              l8033 0D5A  
                                            l8025 0D2B                                              l8017 0D16  
                                            l8009 0D07                                              l9001 0225  
                                            l8203 12F7                                              l8051 1B2A  
                                            l8131 1BDA                                              l8123 1BB1  
                                            l8043 0D6E                                              l8035 0D62  
                                            l8027 0D2F                                              l9011 0726  
                                            l9003 023B                                              l8221 1336  
                                            l8213 130E                                              l8053 1B31  
                                            l8301 0D82                                              l8133 1BDE  
                                            l8141 1BF9                                              l8125 1BCD  
                                            l8117 1B99                                              l8109 1A15  
                                            l8045 0D76                                              l8037 0D67  
                                            l8029 0D4C                                              l6701 0835  
                                            l9021 074C                                              l9013 0738  
                                            l9005 0242                                              l8231 1350  
                                            l8223 1338                                              l8215 131E  
                                            l8207 1300                                              l8055 1B35  
                                            l8311 0D95                                              l8303 0D86  
                                            l8151 1C15                                              l8127 1BCF  
                                            l8119 1BA7                                              l8071 1AD9  
                                            l8063 1AC4                                              l9103 107B  
                                            l8047 0D7A                                              l8039 0D68  
                                            l6711 19FF                                              l6703 0837  
                                            l9031 07BB                                              l9023 0768  
                                            l9015 073E                                              l9007 03E6  
                                            l8225 133D                                              l8233 1357  
                                            l8241 1376                                              l8217 1326  
                                            l8209 1305                                              l8161 128E  
                                            l8081 1B7B                                              l8057 1B40  
                                            l8049 1B28                                              l8401 0F64  
                                            l8321 0DB0                                              l8313 0D9D  
                                            l8305 0D8A                                              l8129 1BD7  
                                            l8073 1ADF                                              l8065 1AC7  
                                            l8153 1AE4                                              l6705 19F7  
                                            l6713 1A01                                              l6721 0801  
                                            l9033 07C4                                              l9025 079A  
                                            l9017 0744                                              l9009 071F  
                                            l8251 1391                                              l8243 137C  
                                            l8235 1369                                              l8227 134B  
                                            l8219 132E                                              l8171 12A1  
                                            l8163 1292                                              l8083 1B95  
                                            l8059 1B45                                              l8411 0F8D  
                                            l8403 0F78                                              l8331 0DC7  
                                            l8323 0DB4                                              l8315 0D9F  
                                            l8307 0D8B                                              l8147 1C00  
                                            l8139 1BE6                                              l8067 1ACB  
                                            l8091 1CC2                                              l8155 1AE7  
                                            l6707 19FC                                              l6715 1A06  
                                            l6723 0804                                              l6731 1AAA  
                                            l9027 07B5                                              l9019 0748  
                                            l9035 07CD                                              l8261 13A2  
                                            l8253 1392                                              l8245 1384  
                                            l8237 136A                                              l8229 134F  
                                            l8181 12B9                                              l8173 12A9  
                                            l8165 1296                                              l8085 1B97  
                                            l8077 1B4A                                              l8421 0FC4  
                                            l8413 0F91                                              l8333 0DC9  
                                            l8325 0DB5                                              l8317 0DA7  
                                            l8309 0D90                                              l8149 1C10  
                                            l8069 1AD4                                              l8501 1066  
                                            l8093 1CDE                                              l6709 19FD  
                                            l6717 1A07                                              l6725 0805  
                                            l6741 1AB8                                              l6733 1AAC  
                                            l9037 07D1                                              l9029 07B8  
                                            l9061 1D52                                              l9053 1D38  
                                            l8271 13C7                                              l8263 13A6  
                                            l8255 1399                                              l8247 1386  
                                            l8239 1372                                              l8191 12CC  
                                            l8183 12BD                                              l8175 12AA  
                                            l8167 1297                                              l8159 1288  
                                            l8079 1B5F                                              l8431 0FEE  
                                            l8423 0FD2                                              l8415 0FA9  
                                            l8407 0F80                                              l8351 0E2F  
                                            l8343 0DE4                                              l8335 0DD1  
                                            l8327 0DBA                                              l8319 0DAC  
                                            l8503 106F                                              l8095 1CE6  
                                            l6751 1022                                              l6719 1A09  
                                            l6743 1AC0                                              l6735 1AAE  
                                            l6727 1997                                              l9071 1D86  
                                            l9063 1D57                                              l9055 1D43  
                                            l8281 13FC                                              l8273 13CF  
                                            l8265 13BA                                              l8249 138D  
                                            l8257 139D                                              l8193 12D4  
                                            l8185 12C1                                              l8169 129C  
                                            l8177 12AC                                              l8433 0FEF  
                                            l8425 0FDB                                              l8409 0F85  
                                            l8417 0FAD                                              l8361 0E81  
                                            l8353 0E4E                                              l8345 0DF6  
                                            l8337 0DD6                                              l8329 0DBF  
                                            l8441 1B07                                              l8513 10BD  
                                            l8505 1083                                              l8097 1CEA  
                                            l8089 1CAD                                              l8601 084A  
                                            l6753 102A                                              l6745 1007  
                                            l6761 07EF                                              l6737 1AAF  
                                            l6729 1AA8                                              l6913 1A75  
                                            l9081 1D9D                                              l9073 1D92  
                                            l9065 1D5F                                              l9057 1D44  
                                            l8291 142C                                              l8283 1417  
                                            l8275 13D3                                              l8259 13A1  
                                            l8195 12D5                                              l8187 12C2  
                                            l8179 12B4                                              l8435 0FF7  
                                            l8427 0FDD                                              l8419 0FBA  
                                            l8371 0EC1                                              l8363 0E88  
                                            l8355 0E5B                                              l8347 0E03  
                                            l8339 0DDB                                              l8451 1A5C  
                                            l8443 1B0E                                              l8515 10C3  
                                            l8531 1A98                                              l8099 1D02  
                                            l6931 1A49                                              l6923 1A3C  
                                            l8611 0872                                              l8603 084E  
                                            l6747 1012                                              l6763 07F7  
                                            l6755 07D4                                              l6691 0808  
                                            l6739 1AB6                                              l9075 1D94  
                                            l9067 1D74                                              l9059 1D45  
                                            l8293 142E                                              l8285 141A  
                                            l8277 13EB                                              l8269 13C2  
                                            l8189 12C7                                              l8197 12D7  
                                            l8429 0FEA                                              l8381 0F31  
                                            l8373 0EDA                                              l8365 0E9A  
                                            l8357 0E68                                              l8349 0E22  
                                            l8541 1E7A                                              l8445 1B1D  
                                            l8517 10C9                                              l8509 10A1  
                                            l8533 1AA1                                              l7901 0BAC  
                                            l8461 16C9                                              l6925 1A41  
                                            l8701 15F5                                              l8621 08B0  
                                            l8613 087D                                              l8605 0855  
                                            l6749 101A                                              l6757 07DF  
                                            l6693 0814                                              l9077 1D97  
                                            l9069 1D7A                                              l8287 1422  
                                            l8279 13EF                                              l8199 12E7  
                                            l8391 0F50                                              l8383 0F38  
                                            l8375 0EEC                                              l8367 0EA1  
                                            l8359 0E6F                                              l8551 1EA8  
                                            l8543 1E8A                                              l8447 1B1E  
                                            l8439 1B04                                              l8519 10D5  
                                            l8527 1A8E                                              l8711 0401  
                                            l7911 0BC0                                              l7903 0BB0  
                                            l8471 1751                                              l8463 16E7  
                                            l8455 1608                                              l6927 1A42  
                                            l6919 19A3                                              l6935 19EF  
                                            l8703 15FE                                              l8631 08E6  
                                            l8623 08C6                                              l8615 089C  
                                            l8607 085B                                              l6759 07E7  
                                            l6695 0817                                              l6783 1A0D  
                                            l9079 1D9A                                              l8289 1428  
                                            l8393 0F57                                              l8385 0F44  
                                            l8377 0F05                                              l8369 0EBA  
                                            l8561 1ED4                                              l8553 1EB3  
                                            l8545 1E9A                                              l8537 1E71  
                                            l8529 1A94                                              l8721 0430  
                                            l8713 0408                                              l8705 03ED  
                                            l7921 0BD4                                              l7913 0BC4  
                                            l7905 0BB4                                              l8481 17CF  
                                            l8473 1756                                              l8465 170A  
                                            l8457 1611                                              l8801 10E1  
                                            l6929 1A47                                              l6937 19F3  
                                            l8633 08EB                                              l8617 08A0  
                                            l8625 08C9                                              l8609 0867  
                                            l8641 091E                                              l6697 0831  
                                            l6785 1A11                                              l8387 0F4B  
                                            l8395 0F5B                                              l8379 0F1A  
                                            l8299 0D7C                                              l8571 1F09  
                                            l8563 1EDD                                              l8555 1EBA  
                                            l8539 1E76                                              l8491 1043  
                                            l8483 102D                                              l8731 047C  
                                            l8723 043B                                              l8715 040E  
                                            l8707 03F4                                              l7931 0BE8  
                                            l7923 0BD8                                              l7915 0BC8  
                                            l7907 0BB8                                              l8475 1775  
                                            l8467 170F                                              l8459 166D  
                                            l8811 1107                                              l8803 10EA  
                                            l8651 1459                                              l8643 143C  
                                            l8627 08D5                                              l8619 08AB  
                                            l8635 0902                                              l6699 0833  
                                            l6955 19A8                                              l8397 0F5F  
                                            l8389 0F4F                                              l8573 1F0E  
                                            l8565 1EE1                                              l8557 1EBE  
                                            l8549 1EA3                                              l8493 1057  
                                            l8485 1033                                              l8741 04CB  
                                            l8733 0481                                              l8725 0446  
                                            l8717 041A                                              l8709 03FD  
                                            l7941 0C29                                              l7925 0BDC  
                                            l7917 0BCC                                              l7909 0BBC  
                                            l7933 0BEC                                              l7861 0B52  
                                            l8477 177B                                              l8469 172E  
                                            l8901 0A06                                              l8821 1159  
                                            l8813 1112                                              l8805 10EE  
                                            l8661 149F                                              l8653 1471  
                                            l8645 1443                                              l8637 0912  
                                            l8629 08DB                                              l8399 0F60  
                                            l8575 1F12                                              l8567 1EEB  
                                            l8559 1EC6                                              l8495 1058  
                                            l8487 1037                                              l8743 04CF  
                                            l8751 04F8                                              l8735 0497  
                                            l8727 046C                                              l8719 0425  
                                            l7943 0C2B                                              l7951 0C3C  
                                            l7935 0BED                                              l7927 0BE0  
                                            l7919 0BD0                                              l7871 0B66  
                                            l7863 0B53                                              l7855 0B44  
                                            l8479 17C9                                              l8911 0AFB  
                                            l8903 0A50                                              l8823 115D  
                                            l8831 1185                                              l8815 111D  
                                            l8807 10F5                                              l8663 14A4  
                                            l8671 14CC                                              l8655 1486  
                                            l8647 1445                                              l8639 0919  
                                            l8577 1F13                                              l8569 1EF5  
                                            l8489 1039                                              l8761 0529  
                                            l8753 0504                                              l8745 04DB  
                                            l8729 0470                                              l8737 0499  
                                            l7961 0C5D                                              l7953 0C47  
                                            l7945 0C2F                                              l7937 0C04  
                                            l7929 0BE4                                              l7881 0B7C  
                                            l7865 0B58                                              l7873 0B68  
                                            l7857 0B4A                                              l8921 0B41  
                                            l8913 0B16                                              l8905 0A5E  
                                            l8841 11B5                                              l8833 1191  
                                            l8825 1168                                              l8817 1128  
                                            l8809 10FB                                              l8673 14D2  
                                            l8681 153A                                              l8665 14B3  
                                            l8649 144A                                              l8657 1497  
                                            l8499 105F                                              l8771 0557  
                                            l8763 053F                                              l8755 0514  
                                            l8747 04E0                                              l8739 04A5  
                                            l7971 0C71                                              l7963 0C61  
                                            l7955 0C4C                                              l7947 0C30  
                                            l7939 0C23                                              l7891 0B8F  
                                            l7883 0B80                                              l7875 0B70  
                                            l7867 0B5D                                              l7859 0B4E  
                                            l8915 0B19                                              l8907 0A6C  
                                            l8851 11EA                                              l8843 11CB  
                                            l8835 11A1                                              l8827 116D  
                                            l8819 1133                                              l8683 1540  
                                            l8691 15A8                                              l8675 14D4  
                                            l8659 149D                                              l8931 007A  
                                            l8923 005F                                              l8773 0563  
                                            l8781 0598                                              l8757 0518  
                                            l8765 0541                                              l8749 04F6  
                                            l7981 0CB9                                              l7973 0C72  
                                            l7965 0C65                                              l7949 0C38  
                                            l7893 0B97                                              l7885 0B84  
                                            l7877 0B75                                              l7869 0B65  
                                            l8917 0B22                                              l8909 0A73  
                                            l8861 121E                                              l8853 11F5  
                                            l8837 11A5                                              l8845 11CD  
                                            l8829 1183                                              l8693 15AE  
                                            l8685 1542                                              l8677 14D9  
                                            l8597 083A                                              l8941 00AD  
                                            l8933 0080                                              l8925 0066  
                                            l8791 0702                                              l8775 0568  
                                            l8767 054D                                              l8759 0524  
                                            l8783 059D                                              l7991 0CE2  
                                            l7983 0CBF                                              l7975 0C7A  
                                            l7967 0C6B                                              l7959 0C55  
                                            l7895 0B98                                              l7887 0B85  
                                            l7879 0B7B                                              l8919 0B31  
                                            l8871 123D                                              l8863 1225  
                                            l8855 11FA                                              l8847 11D9  
                                            l8839 11B0                                              l8695 15B2  
                                            l8687 1547                                              l8679 14F7  
                                            l8599 0841                                              l8951 00F3  
                                            l8943 00B8                                              l8935 008C  
                                            l8927 006F                                              l8793 0705  
                                            l8769 0553                                              l8777 057F  
                                            l8785 05B3                                              l7985 0CC4  
                                            l7969 0C6D                                              l7977 0C7F  
                                            l7889 0B8A                                              l7897 0B9A  
                                            l8873 1242                                              l8865 122A  
                                            l8857 1210                                              l8849 11E6  
                                            l8881 1271                                              l8697 15D9  
                                            l8689 1565                                              l8961 0141  
                                            l8953 0109                                              l8945 00DE  
                                            l8937 0097                                              l8929 0073  
                                            l8795 0714                                              l8787 05BA  
                                            l8779 0590                                              l7995 0CEB  
                                            l7979 0C95                                              l7987 0CCD  
                                            l7899 0BA8                                              l8891 094F  
                                            l8883 0935                                              l8867 122E  
                                            l8859 1212                                              l8875 1259  
                                            l8699 15F2                                              l8971 0176  
                                            l8963 014D                                              l8947 00E2  
                                            l8955 010B                                              l8939 00A2  
                                            l8797 071C                                              l8789 06E7  
                                            l7997 0CF2                                              l7989 0CDD  
                                            l8893 0958                                              l8885 093C  
                                            l8877 1267                                              l8869 1232  
                                            l8981 01C7                                              l8973 019C  
                                            l8965 0152                                              l8957 0117  
                                            l8949 00EE                                              l7999 0CF6  
                                            l8895 0992                                              l8887 0940  
                                            l8879 126C                                              l8799 10DA  
                                            l8991 01EB                                              l8975 01A0  
                                            l8983 01C9                                              l8967 0168  
                                            l8959 013D                                              l8897 09D2  
                                            l8889 0945                                              l8993 01F0  
                                            l8985 01D5                                              l8977 01AC  
                                            l8969 016A                                              l8899 09D4  
                                            l8987 01DB                                              l8979 01B1  
                                            l8995 0207                                              l8997 0218  
                                            l8989 01DF                                              l8999 0220  
                                            _LATA 010C                                              _LATB 010D  
                                            _LATC 010E                                              _LATD 010F  
                                            _LATE 0110                                              _LATF 038C  
                                            _LATG 038D                                              u5510 1A11  
                                            u5511 1A10                                              u8000 137C  
                                            u7200 0B7B                                              u8001 137B  
                                            u7201 0B7A                                              u8010 1384  
                                            u7210 0B84                                              u8011 1383  
                                            u7211 0B83                                              u8100 13D3  
                                            u7300 0C2F                                              u7220 0B8A  
                                            u8101 13D2                                              u7301 0C2E  
                                            u7221 0B89                                              u8110 13E1  
                                            u8030 1391                                              u7230 0B8F  
                                            u8031 1390                                              u7231 0B8E  
                                            u8120 13FC                                              u8200 0DBF  
                                            u9000 04A5                                              u7400 0CC4  
                                            u7320 0C43                                              u7240 0BA8  
                                            u5800 19F3                                              u8121 13FB  
                                            u8025 1387                                              u8201 0DBE  
                                            u9001 04A4                                              u7401 0CC3  
                                            u7321 0C42                                              u7241 0BA7  
                                            u5801 19F2                                              u8130 1417  
                                            u8050 13A1                                              u8210 0DD6  
                                            u9010 04F6                                              u7410 0CDD  
                                            u7330 0C47                                              u7250 0BAC  
                                            u7170 0B52                                              u8131 1416  
                                            u8115 13DD                                              u8051 13A0  
                                            u8211 0DD5                                              u9011 04F5  
                                            u7411 0CDC                                              u7331 0C46  
                                            u7315 0C32                                              u7251 0BAB  
                                            u7171 0B51                                              u8140 142C  
                                            u8060 13A6                                              u8220 0DDB  
                                            u9020 0504                                              u7500 0D1D  
                                            u7420 0CE2                                              u7340 0C4C  
                                            u7260 0C04                                              u7180 0B58  
                                            u9100 10E7                                              u8141 142B  
                                            u8125 13F8                                              u8061 13A5  
                                            u8045 1393                                              u8221 0DDA  
                                            u9021 0503                                              u7501 0D1C  
                                            u7421 0CE1                                              u7341 0C4B  
                                            u7261 0C03                                              u7181 0B57  
                                            u9101 10E6                                              u8070 13BA  
                                            u8310 0F5F                                              u8150 0D8A  
                                            u9030 053F                                              u7510 0D23  
                                            u7350 0C61                                              u7270 0C0E  
                                            u7190 0B5D                                              u9110 10F5  
                                            u8135 1413                                              u8071 13B9  
                                            u8311 0F5E                                              u8151 0D89  
                                            u9031 053E                                              u9015 04F2  
                                            u7511 0D22                                              u7351 0C60  
                                            u7271 0C0C                                              u7191 0B5C  
                                            u9111 10F4                                              u8080 13C1  
                                            u7600 1B35                                              u8400 0FEE  
                                            u8320 0F64                                              u8160 0D90  
                                            u9040 054D                                              u7520 0D2F  
                                            u7440 0CF6                                              u7360 0C65  
                                            u7280 0C0F                                              u9200 11D9  
                                            u9120 1107                                              u8081 13C0  
                                            u7601 1B34                                              u8401 0FED  
                                            u8321 0F63                                              u8305 0F51  
                                            u8161 0D8F                                              u9041 054C  
                                            u7521 0D2E                                              u7441 0CF5  
                                            u7361 0C64                                              u7265 0C00  
                                            u9201 11D8                                              u9121 1106  
                                            u8090 13C7                                              u8330 0F78  
                                            u8250 0F10                                              u8170 0D95  
                                            u8410 1B0E                                              u9050 057E  
                                            u7530 0D3D                                              u7450 0CFB  
                                            u7370 0C71                                              u7290 0C23  
                                            u9210 1210                                              u9130 1112  
                                            u8091 13C6                                              u8331 0F77  
                                            u8235 0E69                                              u8171 0D94  
                                            u8411 1B0D                                              u9051 057D  
                                            u9035 053B                                              u7451 0CFA  
                                            u7435 0CEC                                              u7371 0C70  
                                            u7291 0C22                                              u9211 120F  
                                            u9131 1111                                              u7620 1B45  
                                            u8340 0F7F                                              u8260 0F27  
                                            u8180 0DB4                                              u8420 1B1D  
                                            u8500 1057                                              u9060 05B3  
                                            u7700 1CC2                                              u7540 0D4C  
                                            u7460 0D05                                              u9300 0A73  
                                            u9220 121E                                              u9140 111D  
                                            u5780 1A41                                              u7621 1B44  
                                            u8341 0F7E                                              u8245 0EA2  
                                            u8181 0DB3                                              u8421 1B1C  
                                            u8501 1056                                              u9061 05B2  
                                            u7701 1CC1                                              u7541 0D4B  
                                            u7461 0D04                                              u9301 0A72  
                                            u9221 121D                                              u9141 111C  
                                            u5781 1A40                                              u8350 0F85  
                                            u8190 0DBA                                              u7630 1ACB  
                                            u8430 1A6D                                              u8510 1065  
                                            u9070 05BA                                              u7710 1CDE  
                                            u7550 0D55                                              u7470 0D0B  
                                            u7390 0C95                                              u9310 0AFB  
                                            u9230 1225                                              u9150 1128  
                                            u5790 1A47                                              u7615 1B3A  
                                            u8351 0F84                                              u8255 0F0C  
                                            u8191 0DB9                                              u7631 1ACA  
                                            u8431 1A6B                                              u8511 1064  
                                            u9071 05B9                                              u9055 057A  
                                            u7711 1CDD                                              u7551 0D54  
                                            u7535 0D39                                              u7471 0D0A  
                                            u7391 0C94                                              u9311 0AFA  
                                            u9231 1224                                              u9215 120C  
                                            u9151 1127                                              u5791 1A46  
                                            u8360 0F91                                              u8440 1A6E  
                                            u8520 10B6                                              u9080 06E7  
                                            u7720 1CEA                                              u7560 0D5A  
                                            u7480 0D10                                              u9240 1258  
                                            u9160 1133                                              u9400 0109  
                                            u9320 0066                                              u8361 0F90  
                                            u8265 0F23                                              u8521 10B4  
                                            u9081 06E6                                              u9065 05AF  
                                            u7721 1CE9                                              u7561 0D59  
                                            u7481 0D0F                                              u7393 0C91  
                                            u7385 0C74                                              u9241 1257  
                                            u9161 1132                                              u9401 0108  
                                            u9321 0065                                              u8370 0F9F  
                                            u8290 0F4F                                              u7810 1BF8  
                                            u8610 1EB9                                              u8530 10B7  
                                            u7730 1D06                                              u7570 0D67  
                                            u7490 0D16                                              u8450 16E7  
                                            u9250 1287                                              u9170 1183  
                                            u9090 10E1                                              u9410 0117  
                                            u9330 006C                                              u8291 0F4E  
                                            u8275 0F32                                              u7811 1BF7  
                                            u8611 1EB8                                              u7731 1D05  
                                            u7571 0D66                                              u7491 0D15  
                                            u8451 16E6                                              u9251 1286  
                                            u9171 1182                                              u9091 10E0  
                                            u9411 0116                                              u9331 006B  
                                            u7900 12C7                                              u8380 0FBA  
                                            u7820 1BFF                                              u8700 1F12  
                                            u7660 1ADF                                              u8540 10C3  
                                            u7740 1D34                                              u7580 0D6C  
                                            u8460 172E                                              u9260 093C  
                                            u9180 1191                                              u9500 0738  
                                            u9420 0168                                              u9340 007A  
                                            u7901 12C6                                              u8381 0FB9  
                                            u8285 0F45                                              u7821 1BFE  
                                            u7805 1BE7                                              u8701 1F11  
                                            u8605 1EAD                                              u7661 1ADE  
                                            u7645 1AD0                                              u8541 10C2  
                                            u7741 1D33                                              u7581 0D6B  
                                            u8461 172D                                              u9261 093B  
                                            u9245 1254                                              u9181 1190  
                                            u9501 0737                                              u9421 0167  
                                            u9405 0105                                              u9341 0079  
                                            u7910 12CC                                              u7670 1B5F  
                                            u8390 0FD2                                              u8630 1ED3  
                                            u8550 10C9                                              u7750 1A1E  
                                            u7590 0D7A                                              u8470 1775  
                                            u9270 0940                                              u9190 11CB  
                                            u8710 0841                                              u9510 073E  
                                            u9430 0176                                              u9350 008C  
                                            u7911 12CB                                              u7671 1B5E  
                                            u8391 0FD1                                              u8375 0F9B  
                                            u8631 1ED2                                              u7655 1AD5  
                                            u8551 10C8                                              u7751 1A1D  
                                            u7591 0D79                                              u8471 1774  
                                            u9271 093F                                              u9255 1283  
                                            u9191 11CA                                              u9175 117F  
                                            u8711 0840                                              u9511 073D  
                                            u9431 0175                                              u9351 008B  
                                            u7920 12E7                                              u7680 1B7B  
                                            u7840 1C10                                              u7760 1BA7  
                                            u8560 1AA1                                              u8480 17C9  
                                            u9280 0A06                                              u8800 0934  
                                            u8720 0847                                              u9520 0768  
                                            u9440 01C7                                              u9360 0097  
                                            u7921 12E6                                              u7681 1B7A  
                                            u8385 0FB6                                              u7841 1C0F  
                                            u7761 1BA6                                              u8625 1EC7  
                                            u8561 1AA0                                              u7745 1D30  
                                            u8481 17C8                                              u9281 0A05  
                                            u8801 0933                                              u8721 0846  
                                            u9521 0767                                              u9505 0734  
                                            u9441 01C6                                              u9425 0164  
                                            u9361 0096                                              u7930 1305  
                                            u7690 1B95                                              u7850 1C15  
                                            u7770 1BC6                                              u8650 1EE1  
                                            u8570 1E76                                              u8490 1043  
                                            u9290 0A5E                                              u8810 1443  
                                            u8730 0855                                              u9530 079A  
                                            u9450 01D5                                              u9370 00A2  
                                            u7931 1304                                              u7691 1B94  
                                            u8395 0FCE                                              u7851 1C14  
                                            u7835 1C01                                              u8651 1EE0  
                                            u8571 1E75                                              u8491 1042  
                                            u9291 0A5D                                              u9195 11C7  
                                            u8811 1442                                              u8731 0854  
                                            u9531 0799                                              u9451 01D4  
                                            u9371 00A1                                              u7940 133D  
                                            u7860 1296                                              u7780 1BDE  
                                            u8660 1EE7                                              u8580 1E7A  
                                            u8900 15D9                                              u8820 1471  
                                            u8740 0867                                              u9460 0206  
                                            u9380 00AD                                              u7941 133C  
                                            u7861 1295                                              u7781 1BDD  
                                            u8661 1EE6                                              u8645 1ED7  
                                            u8581 1E79                                              u8901 15D8  
                                            u8821 1470                                              u8805 0930  
                                            u8741 0866                                              u9525 0764  
                                            u9461 0205                                              u9445 01C3  
                                            u9381 00AC                                              u7870 129C  
                                            u7790 1BE5                                              u8670 1EEB  
                                            u8590 1E9A                                              u8910 03F4  
                                            u8830 149D                                              u8750 0872  
                                            u9470 023B                                              u9390 00B8  
                                            u7871 129B                                              u7695 1B91  
                                            u7791 1BE4                                              u7775 1BC2  
                                            u8671 1EEA                                              u8591 1E99  
                                            u8911 03F3                                              u9295 0A5A  
                                            u8831 149C                                              u8751 0871  
                                            u9607 0750                                              u9471 023A  
                                            u9391 00B7                                              u7880 12A1  
                                            u8680 1EFF                                              u8920 03FA  
                                            u8840 14CB                                              u8760 087D  
                                            u9480 0242                                              u7881 12A0  
                                            u8921 03F9                                              u8841 14CA  
                                            u8761 087C                                              u9481 0241  
                                            u9465 0202                                              u7970 134F  
                                            u7890 12C1                                              u8690 1F0E  
                                            u8930 0408                                              u8850 14D2  
                                            u8770 08C6                                              u9490 0726  
                                            u9570 1D5F                                              u7971 134E  
                                            u7955 133E                                              u7891 12C0  
                                            u8691 1F0D                                              u8931 0407  
                                            u8851 14D1                                              u8771 08C5  
                                            u9491 0725                                              u9475 0237  
                                            u9571 1D5E                                              u8940 041A  
                                            u8860 14F7                                              u8780 08D5  
                                            u9580 1D86                                              u7965 1345  
                                            u8685 1EFB                                              u8941 0419  
                                            u8861 14F6                                              u8781 08D4  
                                            u9581 1D85                                              u7990 1369  
                                            u8950 0425                                              u8870 1540  
                                            u8790 0901                                              u7991 1368  
                                            u8951 0424                                              u8871 153F  
                                            u8791 0900                                              u8775 08C2  
                                            u8960 0430                                              u8880 1565  
                                            u7985 1351                                              u8961 042F  
                                            u8881 1564                                              u8970 043B  
                                            u8890 15AE                                              u7995 1365  
                                            u8971 043A                                              u8891 15AD  
                                            u8795 08FD                                              u8980 0446  
                                            u8981 0445                                              u9597 1D4B  
                                            u8990 0497                                              u8991 0496  
                                            u8995 0493                                              _WPUB 020D  
                                            _WPUG 048D                                     _EUSART1_Write 1A0B  
                                   _EUSART2_Write 19ED                                     ?_ManualHandle 0070  
                                    KE@OmegaRight 0153                                              _atoi 102D  
                                            _main 1D38                                     ?_EUSART1_Read 0070  
                                    KE@Omega_body 0147                                              fsr0h 0005  
                                            fsr1h 0007                                              indf0 0000  
                                            fsr0l 0004                                              indf1 0001  
                                            fsr1l 0006                                              btemp 007E  
                                            start 0019                                   ___fldiv@new_exp 00CC  
                            _TimeLapseHandle$3255 0338                              _TimeLapseHandle$3256 0334  
                      ??_TMR1_SetInterruptHandler 0030                    __size_of_OSCILLATOR_Initialize 0007  
                   __end_of_OSCILLATOR_Initialize 0808                                     ___fltol@sign1 0051  
                                           ?_atoi 0034                                   __end_of___fladd 0D7C  
                                           ?_main 0070                                   __end_of___fldiv 143C  
                                 __end_of___flneg 1A21                                   __end_of___flmul 1000  
                                 __end_of___flsub 1B04                                   __end_of___fltol 1C22  
                                           _T1CON 0018                                             i1l441 1A2D  
                                           i1l425 1A5B                                             i1l437 1A3B  
                                           i1l447 0003                                             i1l464 0017  
                      __end_of_i2c1_fsmStateTable 2040                                             _TMR1H 0017  
                                           _TMR1L 0016                                             _TRISA 008C  
                                           _TRISB 008D                                             _TRISC 008E  
                                           _TRISD 008F                                             _TRISE 0090  
                                           _TRISF 030C                                             _TRISG 030D  
                               ??_I2C1_Initialize 002E                                  __end_of_TMR1_ISR 1A3C  
                                  ?_ManualControl 0070                                    _WDT_Initialize 1997  
                                 __end_of_isdigit 1A75                                             _shift 013A  
                                           atoi@n 0041                                             atoi@s 0034  
                                 __end_of_isspace 1B26                                  __end_ofi1___flge 1CAD  
                                  ?_EUSART1_Write 0070                           __end_of_TMR1_Initialize 1AC4  
                                   ?_T1_ROBOT_ISR 0070                                    ?_EUSART2_Write 0070  
                                  ??_ManualHandle 0051                                             pclath 000A  
                            _I2C2_DO_RX_NACK_STOP 0000                                    ??_EUSART1_Read 002E  
                                           status 0003                                             wtemp0 007E  
              _EUSART1_DefaultFramingErrorHandler 0000                                   _TMR1_WriteTimer 1A4B  
                        __end_of_AutoCircleHandle 071F                                 ??_I2C2_Initialize 002E  
                                 __initialization 001B                                      __end_of_atoi 10DA  
                      __end_of_EUSART1_Initialize 102D                                      __end_of_main 1DC3  
                     ?_INTERRUPT_InterruptManager 0070                                            ??_atoi 0036  
                                          ??_main 015B                                       ?i1___xxtofl 0070  
                                ??_AutoLineHandle 0051                       _EUSART2_DefaultErrorHandler 0000  
                          __end_of_WDT_Initialize 199B                          __size_of_AutoLineControl 020F  
                                TimeLapseHandle@i 0344                                  TimeLapseHandle@j 033C  
                      __end_of_EUSART2_Initialize 07FA                                            _APFCON 011D  
                                  ??_T1_ROBOT_ISR 002C                                            _ANSELA 018C  
                                          _ANSELE 0190                                            _ANSELF 040C  
                                          _ANSELG 040D                                            _BORCON 0116  
                                          _T1GCON 0019                                            _RC1REG 0199  
                                          _RC2REG 0491                                            _RC1STA 019D  
                                          _RC2STA 0495                           TMR1_WriteTimer@timerVal 0070  
                                          i1l2260 1E3A                                            i1l2261 1E46  
                                          i1l2253 1E20                                            i1l2247 1DE5  
                                          i1l1463 1FFF                                            i1l2249 1E6E  
                    __size_of_EUSART1_is_rx_ready 0005                                            i1l6041 1C37  
                                          i1l6051 1C7B                                            i1l6043 1C53  
                                          i1l6053 1CA9                                            i1l6045 1C5B  
                                          i1l6061 1DC9                                            i1l6055 1CAB  
                                          i1l6047 1C5F                                            i1l6039 1C22  
                                          i1l6071 1DF6                                            i1l6063 1DCD  
                                          i1l6231 1F26                                            i1l1992 1CAC  
                                          i1l1984 1C3F                                            i1l6049 1C77  
                                          i1l6081 1E19                                            i1l6073 1DFB  
                                          i1l6065 1DDD                                            i1l6241 1F7F  
                                          i1l6233 1F60                                            i1l1987 1C93  
                                          i1l6091 1E48                                            i1l6083 1E27  
                                          i1l6075 1E06                                            i1l6067 1DED  
                                          i1l6059 1DC4                                            i1l6251 1FDC  
                                          i1l6243 1FB9                                            i1l6235 1F66  
                                          i1l6093 1E5C                                            i1l6085 1E30  
                                          i1l6077 1E0D                                            i1l6261 1FFB  
                                          i1l6253 1FE3                                            i1l6245 1FBF  
                                          i1l6237 1F72                                            i1l6229 1F1C  
                                          i1l6095 1E61                                            i1l6087 1E34  
                                          i1l6079 1E11                                            i1l6255 1FE5  
                                          i1l6247 1FCB                                            i1l6239 1F75  
                                          i1l6097 1E65                                            i1l6089 1E3E  
                                          i1l6257 1FEE                                            i1l6249 1FCE  
                                          i1l6099 1E66                                            i1l6259 1FF6  
                                          i1l6771 1A53                                            i1l6915 1A2E  
                                          i1l6781 1A28                                            i1l6773 1A55  
                                          i1l6765 1A4B                                            i1l6917 1A30  
                                          i1l6767 1A50                                            i1l6775 1A57  
                                          i1l7671 000A                                            i1l6777 1A59  
                                          i1l6769 1A51                                            i1l7673 000F  
                                          i1l6779 1A21                                            i1l7675 0014  
                                          i1l7669 0006                                            u431_20 1C37  
                                          u431_21 1C36                                            u432_20 1C53  
                                          u440_20 1E0C                                            u432_21 1C52  
                                          u440_21 1E0B                                            u433_20 1C5F  
                                          u433_21 1C5E                                            u441_25 1E1A  
                                          u434_20 1C7B                                            u442_20 1E26  
                                          u434_21 1C7A                                            u442_21 1E25  
                                          u435_20 1CA9                                            u435_21 1CA8  
                                          u435_25 1CA5                                            u443_25 1E2A  
                                          u444_20 1E34                                            u436_20 1DC9  
                                          u460_20 1FC9                                            u444_21 1E33  
                                          u436_21 1DC8                                            u460_21 1FC6  
                                          u445_20 1E3A                                            u437_20 1DCD  
                                          u445_21 1E39                                            u437_21 1DCC  
                                          u461_24 1FCB                                            u446_20 1E3E  
                                          u438_20 1DED                                            u462_20 1FDC  
                                          u454_20 1F26                                            u550_20 1A28  
                                          u446_21 1E3D                                            u438_21 1DEC  
                                          u462_21 1FDB                                            u454_21 1F25  
                                          u550_21 1A27                                            u462_25 1FD8  
                                          u447_20 1E52                                            u455_20 1F60  
                                          u455_21 1F5F                                            u447_25 1E4E  
                                          u439_25 1E00                                            u448_20 1E61  
                                          u456_20 1F70                                            u704_20 000A  
                                          u448_21 1E60                                            u456_21 1F6D  
                                          u704_21 0009                                            u449_20 1E65  
                                          u705_20 000F                                            u449_21 1E64  
                                          u705_21 000E                                            u457_24 1F72  
                                          u458_20 1F7F                                            u706_20 0014  
                                          _OSCCON 0099                                            u458_21 1F7E  
                                          u706_21 0013                                            u459_20 1FB9  
                                          u459_21 1FB8                                            u549_20 1A50  
                                          u549_21 1A4F                                            _TX1REG 019A  
                                          _TX2REG 0492                          _I2C2_CallbackReturnReset 0000  
                                          _WDTCON 0097                                            _TX1STA 019E  
                                          _TX2STA 0496                                  __end_of___xxtofl 1F1C  
                                _I2C1_DO_TX_EMPTY 0000                                   AutoLineHandle@i 00BC  
                                 AutoLineHandle@j 00B4              __end_of_TMR1_DefaultInterruptHandler 0004  
           __size_of_TMR1_DefaultInterruptHandler 0001                      _TMR1_DefaultInterruptHandler 0003  
                                          ___flge 1CAD                                            ___fleq 1B4A  
                                       ??___fladd 00DC                                            ___wmul 1AC4  
                                       ??___fldiv 00C2                                         ??___flneg 0032  
                                       ??___flmul 00A8                                         ??___flsub 0051  
                                       ??___fltol 0142                          ?_EUSART1_SetErrorHandler 002E  
                              _SetUpModeHalf_step 19A8                                            _t_left 015F  
                     _EUSART2_FramingErrorHandler 02D6                  ??_EUSART1_SetOverrunErrorHandler 0030  
                 ?_EUSART1_SetOverrunErrorHandler 002E                                            _strlen 1A8E  
                           _I2C1_DO_SEND_ADR_READ 0000                                         ??_isdigit 0030  
                              __size_of__Umul8_16 0024                               ?_SetUpModeHalf_step 0070  
                                       ??_isspace 0030                                   ??_ManualControl 0051  
                                 ?_WDT_Initialize 0070                                   ??_EUSART1_Write 002E  
                                 ??_EUSART2_Write 002E          TMR1_SetInterruptHandler@InterruptHandler 002E  
                         __end_of_TMR1_WriteTimer 1A5C                           _I2C1_DO_RX_NACK_RESTART 0000  
                           __end_of_TMR1_CallBack 1A2E                                        ___flge@ff1 002E  
                                      ___flge@ff2 0032                                  ?_TMR1_Initialize 0070  
                                    ___xxtofl@arg 004D                                      ___xxtofl@exp 004C  
                               _SYSTEM_Initialize 1A75                                      ___xxtofl@val 0043  
                                      ___fleq@ff1 00A0                                        ___fleq@ff2 00A4  
                         __end_of__initialization 005B                                        ___flneg@f1 002E  
                                 _TimeLapseHandle 005F                                ?_SYSTEM_Initialize 0070  
                             __size_ofi1___xxtofl 00AC                                        ___fltol@f1 00E8  
                            ??_SetUpModeHalf_step 002E                                  _I2C2_DO_TX_EMPTY 0000  
                         _rdBlkRegCompleteHandler 0000                                    __pcstackCOMMON 0070  
                                    __pidataBANK2 199F                                      __pidataBANK5 199B  
                             ??_SYSTEM_Initialize 0030                                         ?_TMR1_ISR 0070  
                   ?_TMR1_DefaultInterruptHandler 0070                            AutoCircleHandle@j_2320 0340  
                          AutoCircleHandle@j_2321 0342                            AutoCircleHandle@j_2319 033E  
                                      __end_of_KE 1800                              __end_of_ManualHandle 0935  
                                       ?i1___flge 0020                              __end_of_EUSART1_Read 1A4B  
                                  _OPTION_REGbits 0095                          ?_EUSART2_SetErrorHandler 002E  
                            AutoLineHandle@j_2326 00B6                              AutoLineHandle@j_2327 00B8  
                            AutoLineHandle@j_2328 00BA                         __end_of_SYSTEM_Initialize 1A8E  
                       __size_of_TimeLapseControl 00B5                                        __pbssBANK0 0054  
                                      __pbssBANK2 0120                                        __pbssBANK3 01A0  
                                      __pbssBANK4 0220                                        __pbssBANK5 02A0  
                                      _cntACircle 0137                                 ??_AutoLineControl 0053  
                ??_EUSART2_SetFramingErrorHandler 0030                   ?_EUSART2_SetFramingErrorHandler 002E  
                                  i1___xxtofl@arg 007A                                    i1___xxtofl@exp 0079  
                                  i1___xxtofl@val 0070                             _rd1RegCompleteHandler 0000  
                               _I2C1_DO_SEND_STOP 0000                                 __end_of__Umul8_16 1B4A  
                           _wr1RegCompleteHandler 0000                                        _flagCamera 0135  
                 __end_of_EUSART1_SetErrorHandler 19B7                                        __pmaintext 1D38  
                                      _angle_move 01C1                                           ?___flge 002E  
                                         ?___fleq 00A0                                        _flagManual 005D  
                                         ?___wmul 002E                                        ??_TMR1_ISR 007E  
                                      __pintentry 0004                                   _I2C1_Initialize 19F7  
                                   ManualHandle@i 00B8                                     ManualHandle@j 00B4  
                            __end_of_T1_ROBOT_ISR 2000                       AutoLineHandle@bufferALine_t 00A0  
                                      ??i1___flge 0028                                           ?_strlen 002E  
          __end_of_EUSART1_SetFramingErrorHandler 19C0           __size_of_EUSART1_SetFramingErrorHandler 0009  
                  _EUSART1_SetFramingErrorHandler 19B7                                         ?___xxtofl 0043  
                      __end_of_i2c2_fsmStateTable 2020                                           _SP1BRGH 019C  
                                         _SP1BRGL 019B                                           _SP2BRGH 0494  
                                         _SP2BRGL 0493                                 TimeLapseControl@i 00EE  
                                      _buffer_sys 02A0                                           _OSCTUNE 0098  
                                         _SSP1ADD 0212                                           _SSP2ADD 021A  
                         __end_of_TimeLapseHandle 03ED                                           _SSP1BUF 0211  
                                         _SSP2BUF 0219                                  ?_TMR1_WriteTimer 0070  
                                 _I2C2_Initialize 1A01                                _i2c1_fsmStateTable 2020  
  _rd1RegCompleteHandler@i2c1_master_example$F143 0000    _wr1RegCompleteHandler@i2c1_master_example$F160 0000  
  _rd2RegCompleteHandler@i2c1_master_example$F154 0000    _wr2RegCompleteHandler@i2c1_master_example$F166 0000  
_rdBlkRegCompleteHandler@i2c1_master_example$F177 0000                             _I2C2_DO_SEND_ADR_READ 0000  
                               ?_AutoCircleHandle 0070                                   __size_of___flge 008B  
                                 __size_of___fleq 004F                         _I2C2_DO_SEND_RESTART_READ 0000  
                                         ___fladd 0B44                                           ___fldiv 1288  
                                         ___flneg 1A15                                           ___flmul 0D7C  
                                         ___flsub 1AE4                                           ___fltol 1B99  
                                 __size_of___wmul 0020                                ??_AutoCircleHandle 0053  
                                    _direct_ALine 0060                                        _errorOmega 013C  
                             _EUSART1_is_rx_ready 19A3                   __end_of_EUSART2_SetErrorHandler 19D2  
                                         _cntLeft 01E5                                      ??i1___xxtofl 0074  
                                         __ptext1 005F                                           __ptext2 071F  
                                         __ptext3 1A0B                                           __ptext4 19A8  
                                         __ptext5 1A75                                           __ptext6 1997  
                                         __ptext7 1AA8                                           __ptext8 19E4  
                                         __ptext9 0808                                           _cntTime 0132  
                  ??_TMR1_DefaultInterruptHandler 0070                                           _cnt_sys 0134  
                                      _velACircle 0120                                   __size_of_strlen 001A  
                                       _T1CONbits 0018                                        _omegaALine 01C9  
              _EUSART2_DefaultOverrunErrorHandler 0000                             _OSCILLATOR_Initialize 0801  
                                         _isdigit 1A5C                                        ??___xxtofl 0047  
               __size_of_TMR1_SetInterruptHandler 0009                                  _DistanceValueTop 01D9  
                              _EUSART1_Initialize 1007                          ??_PIN_MANAGER_Initialize 002E  
                                         _isspace 1B04                         ?_TMR1_SetInterruptHandler 002E  
                                         _t_right 015D                               _DistanceValueBottom 0269  
                                         atoi@neg 003A                        __size_of_SYSTEM_Initialize 0019  
                                         clrloop0 1002                              end_of_initialization 005B  
                                      _valTime_TL 0259                              ?_EUSART1_is_rx_ready 0070  
                             ?_EUSART1_Initialize 0070                                           init_ram 07FA  
                     _EUSART1_OverrunErrorHandler 02DA                                           initloop 07FB  
                          _I2C1_DO_SEND_ADR_WRITE 0000                                     _valVLength_TL 025D  
                         __end_of_I2C1_Initialize 1A01                                __end_ofi1___xxtofl 1E6F  
                           TimeLapseHandle@j_2335 033E                             TimeLapseHandle@j_2336 0340  
                           TimeLapseHandle@j_2337 0342                                _EUSART2_Initialize 07D4  
                                     _I2C1_Status 01A0                                 _I2C2_DO_SEND_STOP 0000  
                                     _I2C2_Status 0220                                         _PID_Omega 0128  
                           __size_of_ManualHandle 00FB                             __size_of_EUSART1_Read 000F  
                            ??_EUSART1_Initialize 0030                        ManualHandle@bufferManual_t 00A0  
                      _I2C1_DO_SEND_RESTART_WRITE 0000                               ?_EUSART2_Initialize 0070  
                                         strlen@a 0030                                           strlen@s 002E  
                                ??_WDT_Initialize 002E                                      _distance_raw 0245  
                                     ___fladd@grs 00E7                           __end_of_I2C2_Initialize 1A0B  
                                   ___xxtofl@sign 004B                                       ___fldiv@grs 00CE  
                                     ___fldiv@rem 00C7                                  ?_TimeLapseHandle 0070  
                __size_of_EUSART1_SetErrorHandler 0009                               EUSART1_Write@txData 002E  
                           ??_EUSART1_is_rx_ready 002E                                  _TimeLapseControl 071F  
                            ??_EUSART2_Initialize 0030                                       ___flmul@grs 00AF  
                                    _ManualHandle 083A                                      _EUSART1_Read 1A3C  
                           __size_of_T1_ROBOT_ISR 00E4                                    __end_of___flge 1D38  
                                  __end_of___fleq 1B99                                    __end_of___wmul 1AE4  
                                  _I2C1_DO_RX_ACK 0000                                 __size_of_TMR1_ISR 000E  
                          ?_OSCILLATOR_Initialize 0070                                 __size_ofi1___flge 008B  
                                  __end_of_strlen 1AA8                               start_initialization 001B  
                                  _I2C2_DO_RX_ACK 0000                                   _AutoLineControl 0935  
                 __size_of_PIN_MANAGER_Initialize 0032                             __end_of_ManualControl 1608  
                           __end_of_EUSART1_Write 1A15                             __end_of_EUSART2_Write 19F7  
                                    _T1_ROBOT_ISR 1F1C                           __size_of_AutoLineHandle 01AE  
                __size_of_EUSART2_SetErrorHandler 0009                           _I2C2_CallbackReturnStop 0000  
          __end_of_EUSART2_SetOverrunErrorHandler 19E4           __size_of_EUSART2_SetOverrunErrorHandler 0009  
                  _EUSART2_SetOverrunErrorHandler 19DB                                  ?_I2C1_Initialize 0070  
                     __size_of_SetUpModeHalf_step 0006                          __size_of_TMR1_Initialize 001C  
                                        ??___flge 0036                                          ??___fleq 00A8  
                                   _angle_ACircle 01DF                                          ??___wmul 0032  
                                  _errorOmega_pre 0265                                    _errorOmega_sum 012C  
                                       __Umul8_16 1B26                                       __pdataBANK2 015D  
                                     __pdataBANK5 02DE                                      _length_ALine 01E1  
                          __size_of_TMR1_CallBack 000D                                          ??_strlen 0030  
                                       ___fladd@a 00D8                                         ___fladd@b 00D4  
                                       ___fldiv@a 00BA                                         ___fldiv@b 00BE  
                                       ___flmul@a 00A4                                         ___flmul@b 00A0  
                                ?_I2C2_Initialize 0070                              _I2C1_DO_SEND_RESTART 0000  
                                       ___flsub@a 00E8                                         ___flsub@b 00EC  
                                       ___latbits 0003                                     __pcstackBANK0 0020  
                                   __pcstackBANK1 00A0                                     __pcstackBANK2 0142  
                                   __pcstackBANK6 0320                                 __size_of___xxtofl 00AD  
                             EUSART2_Write@txData 002E                                   i1___xxtofl@sign 0078  
                                     _flagACircle 0138                  ??_EUSART1_SetFramingErrorHandler 0030  
                 ?_EUSART1_SetFramingErrorHandler 002E                                _i2c2_fsmStateTable 2000  
                                       _atoi$2826 003C                                         _atoi$2827 0040  
                                       _atoi$2828 003E                                         __pnvBANK2 0161  
                                       __pnvBANK4 026D                                         __pnvBANK5 02D2  
                           _rd2RegCompleteHandler 0000                                       _delay_frame 01DD  
                                       _flagALine 005C                            _PIN_MANAGER_Initialize 0808  
                           _wr2RegCompleteHandler 0000                                         _cntCamera 0136  
                __end_of_TMR1_SetInterruptHandler 19ED                                          ?___fladd 00D4  
                                        ?___fldiv 00BA                                          ?___flneg 002E  
                                       _cntManual 0130                                          ?___flmul 00A0  
                                        ?___flsub 00E8                                          ?___fltol 00E8  
                                      ?__Umul8_16 002E                                         _flag_stop 005E  
                         __end_of_AutoLineControl 0B44                      ??_INTERRUPT_InterruptManager 007E  
                                       _cnt_frame 005A                                          _BAUD1CON 019F  
                                        _BAUD2CON 0497                                      _omegaACircle 0261  
              _EUSART1_DefaultOverrunErrorHandler 0000                                          ?_isdigit 002E  
                            _EUSART1_ErrorHandler 02D8                                          ?_isspace 002E  
                       __size_of_AutoCircleHandle 0332                           _EUSART1_SetErrorHandler 19AE  
                                     __size_of_KE 01F8                              _I2C2_DO_SEND_RESTART 0000  
                                   _TMR1_CallBack 1A21                                         _omega_sys 024D  
                                  ___wmul@product 0032           EUSART2_SetErrorHandler@interruptHandler 002E  
         EUSART1_SetErrorHandler@interruptHandler 002E                                          _LATCbits 010E  
                                        _LATFbits 038C                                        _I2C1_DO_RX 0000  
                                      _I2C1_DO_TX 0000  _rdBlkRegCompleteHandler@i2c2_master_example$F307 0000  
  _rd1RegCompleteHandler@i2c2_master_example$F254 0000    _rd2RegCompleteHandler@i2c2_master_example$F281 0000  
  _wr2RegCompleteHandler@i2c2_master_example$F293 0000    _wr1RegCompleteHandler@i2c2_master_example$F287 0000  
                                      _I2C2_DO_RX 0000                                        _I2C2_DO_TX 0000  
                                       clear_ram0 1001                                          _PIE1bits 0091  
                                        _PIE4bits 0094                                         _velManual 0054  
                                       _timeALine 0124                          __size_of_TMR1_WriteTimer 0011  
             __size_of_INTERRUPT_InterruptManager 0015                                          _PIR1bits 0011  
                                        _PIR2bits 0012                             _AutoCircleHandle$3252 0334  
                           _AutoCircleHandle$3253 0338                                          _PIR4bits 0014  
                                       _shift_one 0139                         _I2C1_DO_SEND_RESTART_READ 0000  
                                        _SSP1CON1 0215                                          _SSP1CON2 0216  
                                       _time_move 01BD                                          _SSP2CON1 021D  
                                        _SSP2CON2 021E                                          _TMR1_ISR 1A2E  
                                        _SSP1STAT 0214                                          _SSP2STAT 021C  
                        __end_of_TimeLapseControl 07D4                                 ??_TMR1_Initialize 0030  
                                        i1___flge 1C22                                 ___wmul@multiplier 002E  
                                    _valRadius_AC 01EB                                      _valRadius_TL 01E7  
                                       _totalTime 0058                                         _sum_frame 0140  
                                    _isspace$2844 0032                                     _I2C1_DO_RESET 0000  
                                  ?_TMR1_CallBack 0070                                     _I2C2_DO_RESET 0000  
                                  _AutoLineHandle 10DA                           _EUSART2_SetErrorHandler 19C9  
                     _EUSART2_OverrunErrorHandler 02D4                            _I2C2_DO_SEND_ADR_WRITE 0000  
                                _distance_raw_one 023D                           ??_OSCILLATOR_Initialize 002E  
                                     ??__Umul8_16 0030                                  __size_of___fladd 0238  
                                __size_of___fldiv 01B4                                  __size_of___flneg 000C  
                                __size_of___flmul 0284                                  __size_of___flsub 0020  
                                __size_of___fltol 0089                       __size_of_EUSART1_Initialize 0026  
                      _I2C2_DO_SEND_RESTART_WRITE 0000                                  ?_AutoLineControl 0070  
                        _TMR1_SetInterruptHandler 19E4                             _TMR1_InterruptHandler 026D  
                       ??_EUSART1_SetErrorHandler 0030                       _EUSART1_DefaultErrorHandler 0000  
                     __end_of_EUSART1_is_rx_ready 19A8                                          ___xxtofl 1E6F  
                                        _cntALine 005B                              _EUSART2_ErrorHandler 02D2  
                                __size_of_isdigit 0019                                  __size_of_isspace 0022  
                                        __ptext10 0801                                          __ptext11 1A01  
                                        __ptext20 19AE                                          __ptext12 19F7  
                                        __ptext21 083A                                          __ptext13 07D4  
                                      _T1GCONbits 0019                                          __ptext30 0B44  
                                        __ptext22 143C                                          __ptext14 19DB  
                                        __ptext31 1A15                                          __ptext23 19ED  
                                        __ptext15 19D2                                          __ptext40 1B99  
                                        __ptext32 1CAD                                          __ptext24 19A3  
                                        __ptext16 19C9                                          __ptext41 0D7C  
                                        __ptext33 03ED                                          __ptext25 1A3C  
                                        __ptext17 1007                                          __ptext50 0003  
                                        __ptext42 1B26                                          __ptext34 1A8E  
                                        __ptext26 10DA                                          __ptext18 19C0  
                                        __ptext51 1DC3                                          __ptext43 1B4A  
                                        __ptext35 102D                                          __ptext27 0935  
                                        __ptext19 19B7                                          __ptext52 1C22  
                                        __ptext44 1288                                          __ptext36 1B04  
                                        __ptext28 1608                                          __ptext37 1A5C  
                                        __ptext29 1AE4                                          __ptext46 1A2E  
                                        __ptext38 1AC4                                          __ptext47 1A4B  
                                        __ptext39 1E6F                                          __ptext48 1A21  
                                        __ptext49 1F1C                            __end_of_AutoLineHandle 1288  
                                        _cntRight 01E3                                      _SSP1CON1bits 0215  
                                    _SSP1CON2bits 0216                                      _SSP2CON1bits 021D  
                                    _SSP2CON2bits 021E                       __size_of_EUSART2_Initialize 0026  
                        _I2C1_CallbackReturnReset 0000                                     __size_of_atoi 00AD  
                                   __size_of_main 008B                _EUSART2_DefaultFramingErrorHandler 0000  
                                        _velALine 01CD                                          _omega_TL 0255  
                        __size_of_TimeLapseHandle 038E                                       _omegaManual 01D1  
                                      _RC1STAbits 019D                                        _RC2STAbits 0495  
  EUSART2_SetOverrunErrorHandler@interruptHandler 002E    EUSART1_SetOverrunErrorHandler@interruptHandler 002E  
                                 KE@Velocity_body 014B                                          int$flags 007E  
              __end_of_INTERRUPT_InterruptManager 0019                        _INTERRUPT_InterruptManager 0004  
                                    _SSP1STATbits 0214                                 ??_TMR1_WriteTimer 0072  
                     _EUSART1_FramingErrorHandler 02DC                                      _I2C1_DO_IDLE 0000  
                                    _SSP2STATbits 021C                                      _I2C1_DO_RCEN 0000  
                                    _I2C2_DO_IDLE 0000                                      _I2C2_DO_RCEN 0000  
                ??_EUSART2_SetOverrunErrorHandler 0030                   ?_EUSART2_SetOverrunErrorHandler 002E  
                                      _INTCONbits 000B                                  _AutoCircleHandle 03ED  
                                        isdigit@c 002E                                       _timeACircle 01C5  
                                 ??_TMR1_CallBack 007E                                   ?_AutoLineHandle 0070  
                                     _velManual_t 01D5                         ??_EUSART2_SetErrorHandler 0030  
                         __size_of_WDT_Initialize 0004                           _I2C2_DO_RX_NACK_RESTART 0000  
                                        intlevel1 0000                                 AutoCircleHandle@i 0344  
                               AutoCircleHandle@j 033C                                          isspace@c 002E  
                         ?_PIN_MANAGER_Initialize 0070                        __end_of_SetUpModeHalf_step 19AE  
          __end_of_EUSART1_SetOverrunErrorHandler 19C9           __size_of_EUSART1_SetOverrunErrorHandler 0009  
                  _EUSART1_SetOverrunErrorHandler 19C0                           _I2C1_CallbackReturnStop 0000  
                            _I2C1_DO_ADDRESS_NACK 0000    EUSART2_SetFramingErrorHandler@interruptHandler 002E  
  EUSART1_SetFramingErrorHandler@interruptHandler 002E                            __size_of_ManualControl 01CC  
                        __size_of_I2C1_Initialize 000A                            __size_of_EUSART1_Write 000A  
                              _eusart1RxLastError 005F                            __size_of_EUSART2_Write 000A  
                                   __pstringtext1 2000                                     __pstringtext2 2020  
                          __Umul8_16@multiplicand 002E                                      _velocity_sys 0251  
                                      _TX1STAbits 019E                                        _TX2STAbits 0496  
                                   ___fladd@signs 00E4                                       _velocity_TL 02DE  
                  __end_of_PIN_MANAGER_Initialize 083A                          __size_of_I2C2_Initialize 000A  
                              _eusart2RxLastError 013B                                      ___fladd@aexp 00E5  
                                    ___fladd@bexp 00E6                              __Umul8_16@multiplier 0036  
                              ManualHandle@j_2313 00B6                                   _TMR1_Initialize 1AA8  
                               __Umul8_16@product 0032  
